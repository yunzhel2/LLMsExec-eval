{"lang":"JavaScript","source_code":"print(function(n) {\n\tvar a = readline().split(' ').map(Number),\n\t\tmin = Math.min.apply(0, a),\n\t\ti = a.indexOf(min),\n\t\tii = a.indexOf(min, i+1);\n\n\treturn ii > -1 ? 'Still Rozdil' : i + 1;\n\n}(+readline()));","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"ce68f1171d9972a1b40b0450a05aa9cd","code_uid":"84c955466a227a0eb775f58f11dae71a","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ce68f1171d9972a1b40b0450a05aa9cd","hidden_unit_tests":"[{'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['32\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['19\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['68\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":";(function () {\n\n\tvar n = +readline();\n\tvar a = readline().split(' ').map(Number);\n\tvar m = Math.min.apply(0, a);\n\tvar p = a.indexOf(m);\n\n\tprint( p === a.lastIndexOf(m) ? p + 1 : 'Still Rozdil' );\n\n}).call(this);\n","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"ce68f1171d9972a1b40b0450a05aa9cd","code_uid":"7e416c019e8411cd08e6c2825cae36d5","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ce68f1171d9972a1b40b0450a05aa9cd","hidden_unit_tests":"[{'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['32\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['19\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['68\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\nvar n = readline();\nvar cnt = 0;\nvar j = 0;\nvar mn = 1000000000\n  \nvar array = readline().split(\" \").map((item)=>{return parseInt(item)});\n\narray.forEach((item,idx)=>{\n    if(item <= mn) {\n        mn = item;\n        j = idx;\n    }\n});\n\nfor (i = 0; i < n; i++) {\n    if (array[i] == mn)\n        cnt++;\n}\nif (cnt > 1) {\n    print(\"Still Rozdil\");\n} else \n    print(j + 1);","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"ce68f1171d9972a1b40b0450a05aa9cd","code_uid":"54733d1fa5e3b9d175410d2ad2e95ebd","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ce68f1171d9972a1b40b0450a05aa9cd","hidden_unit_tests":"[{'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Still Rozdil\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['Still Rozdil\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['32\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['19\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['68\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function getLine(){\n    return readline().split(' ').map(function(x){\n       return parseInt(x); \n    });\n}\n\nvar L = getLine();\nvar n = L[0];\nvar k = L[1];\nvar p = getLine();\nvar r = 0;\nwhile(true){\n    if(p.every(function(x){\n        return x == k;\n    })){\n        break;\n    }\n    p = p.map(function(x, ind, self){\n        if(ind === self.indexOf(x) && x < k){\n            x++;\n        }\n        return x;\n    });\n    r++;\n}\nprint(r);","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"3d6411d67c85f6293f1999ccff2cd8ba","code_uid":"7043b4cb92cf9312670c9b220d39b9a7","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"3d6411d67c85f6293f1999ccff2cd8ba","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['5']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['4']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['10']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['11']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['21']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['17']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['30']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['12']}, {'input': '3', 'time': ['0'], 'mem': ['136'], 'output': ['70']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['47']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['99']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['78']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['98']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['198']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['108']}, {'input': '1', 'time': ['0'], 'mem': ['136'], 'output': ['184']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['150']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['59']}, {'input': '3', 'time': ['30'], 'mem': ['144'], 'output': ['77']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['31']}, {'input': '8', 'time': ['0'], 'mem': ['136'], 'output': ['89']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['106']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['197']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['148']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['99']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['7']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['100']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false\n});\nlet c = 0;\nconst students = [];\nlet n, m;\n\nrl.on('line', (d) => {\n  if (c === 0) {\n    [n, m] = d.split(' ').map(Number);\n    c++;\n    return;\n  }\n\n  const marks = d;\n  students.push(marks);\n\n  c++;\n});\n\nrl.on('close', () => {\n  const bests = new Set();\n\n  for (let i = 0; i < students[0].length; i++) {\n    let best = 0;\n    for (let j = 0; j < students.length; j++) {\n      if (students[j][i] > best) {\n        best = students[j][i];\n      }\n    }\n\n    for (let z = 0; z < students.length; z++) {\n      if (students[z][i] === best) {\n        bests.add(z);\n      }\n    }\n  }\n\n  console.log(bests.size);\n});\n","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"41bdb08253cf5706573f5d469ab0a7b3","code_uid":"2dd7618a58f839c1a3cb49a286271688","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"41bdb08253cf5706573f5d469ab0a7b3","hidden_unit_tests":"[{'input': '3 3\\r\\n223\\r\\n232\\r\\n112\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '3 5\\r\\n91728\\r\\n11828\\r\\n11111\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '2 2\\r\\n48\\r\\n27\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2 1\\r\\n4\\r\\n6\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1 2\\r\\n57\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3 4\\r\\n2553\\r\\n6856\\r\\n5133\\r\\n', 'time': ['15'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '8 7\\r\\n6264676\\r\\n7854895\\r\\n3244128\\r\\n2465944\\r\\n8958761\\r\\n1378945\\r\\n3859353\\r\\n6615285\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n']}, {'input': '9 8\\r\\n61531121\\r\\n43529859\\r\\n18841327\\r\\n88683622\\r\\n98995641\\r\\n62741632\\r\\n57441743\\r\\n49396792\\r\\n63381994\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '10 20\\r\\n26855662887514171367\\r\\n48525577498621511535\\r\\n47683778377545341138\\r\\n47331616748732562762\\r\\n44876938191354974293\\r\\n24577238399664382695\\r\\n42724955594463126746\\r\\n79187344479926159359\\r\\n48349683283914388185\\r\\n82157191115518781898\\r\\n', 'time': ['15'], 'mem': ['4'], 'output': ['9\\r\\n']}, {'input': '20 15\\r\\n471187383859588\\r\\n652657222494199\\r\\n245695867594992\\r\\n726154672861295\\r\\n614617827782772\\r\\n862889444974692\\r\\n373977167653235\\r\\n645434268565473\\r\\n785993468314573\\r\\n722176861496755\\r\\n518276853323939\\r\\n723712762593348\\r\\n728935312568886\\r\\n373898548522463\\r\\n769777587165681\\r\\n247592995114377\\r\\n182375946483965\\r\\n497496542536127\\r\\n988239919677856\\r\\n859844339819143\\r\\n', 'time': ['15'], 'mem': ['4'], 'output': ['18\\r\\n']}, {'input': '13 9\\r\\n514562255\\r\\n322655246\\r\\n135162979\\r\\n733845982\\r\\n473117129\\r\\n513967187\\r\\n965649829\\r\\n799122777\\r\\n661249521\\r\\n298618978\\r\\n659352422\\r\\n747778378\\r\\n723261619\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n']}, {'input': '75 1\\r\\n2\\r\\n3\\r\\n8\\r\\n3\\r\\n2\\r\\n1\\r\\n3\\r\\n1\\r\\n5\\r\\n1\\r\\n5\\r\\n4\\r\\n8\\r\\n8\\r\\n4\\r\\n2\\r\\n5\\r\\n1\\r\\n7\\r\\n6\\r\\n3\\r\\n2\\r\\n2\\r\\n3\\r\\n5\\r\\n5\\r\\n2\\r\\n4\\r\\n7\\r\\n7\\r\\n9\\r\\n2\\r\\n9\\r\\n5\\r\\n1\\r\\n4\\r\\n9\\r\\n5\\r\\n2\\r\\n4\\r\\n6\\r\\n6\\r\\n3\\r\\n3\\r\\n9\\r\\n3\\r\\n3\\r\\n2\\r\\n3\\r\\n4\\r\\n2\\r\\n6\\r\\n9\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n7\\r\\n2\\r\\n3\\r\\n2\\r\\n9\\r\\n7\\r\\n4\\r\\n9\\r\\n1\\r\\n7\\r\\n5\\r\\n6\\r\\n8\\r\\n3\\r\\n4\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '92 3\\r\\n418\\r\\n665\\r\\n861\\r\\n766\\r\\n529\\r\\n416\\r\\n476\\r\\n676\\r\\n561\\r\\n995\\r\\n415\\r\\n185\\r\\n291\\r\\n176\\r\\n776\\r\\n631\\r\\n556\\r\\n488\\r\\n118\\r\\n188\\r\\n437\\r\\n496\\r\\n466\\r\\n131\\r\\n914\\r\\n118\\r\\n766\\r\\n365\\r\\n113\\r\\n897\\r\\n386\\r\\n639\\r\\n276\\r\\n946\\r\\n759\\r\\n169\\r\\n494\\r\\n837\\r\\n338\\r\\n351\\r\\n783\\r\\n311\\r\\n261\\r\\n862\\r\\n598\\r\\n132\\r\\n246\\r\\n982\\r\\n575\\r\\n364\\r\\n615\\r\\n347\\r\\n374\\r\\n368\\r\\n523\\r\\n132\\r\\n774\\r\\n161\\r\\n552\\r\\n492\\r\\n598\\r\\n474\\r\\n639\\r\\n681\\r\\n635\\r\\n342\\r\\n516\\r\\n483\\r\\n141\\r\\n197\\r\\n571\\r\\n336\\r\\n175\\r\\n596\\r\\n481\\r\\n327\\r\\n841\\r\\n133\\r\\n142\\r\\n146\\r\\n246\\r\\n396\\r\\n287\\r\\n582\\r\\n556\\r\\n996\\r\\n479\\r\\n814\\r\\n497\\r\\n363\\r\\n963\\r\\n162\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '100 1\\r\\n1\\r\\n6\\r\\n9\\r\\n1\\r\\n1\\r\\n5\\r\\n5\\r\\n4\\r\\n6\\r\\n9\\r\\n6\\r\\n1\\r\\n7\\r\\n8\\r\\n7\\r\\n3\\r\\n8\\r\\n8\\r\\n7\\r\\n6\\r\\n2\\r\\n1\\r\\n5\\r\\n8\\r\\n7\\r\\n3\\r\\n5\\r\\n4\\r\\n9\\r\\n7\\r\\n1\\r\\n2\\r\\n4\\r\\n1\\r\\n6\\r\\n5\\r\\n1\\r\\n3\\r\\n9\\r\\n4\\r\\n5\\r\\n8\\r\\n1\\r\\n2\\r\\n1\\r\\n9\\r\\n7\\r\\n3\\r\\n7\\r\\n1\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n3\\r\\n9\\r\\n7\\r\\n2\\r\\n4\\r\\n7\\r\\n1\\r\\n6\\r\\n8\\r\\n1\\r\\n5\\r\\n6\\r\\n1\\r\\n1\\r\\n2\\r\\n9\\r\\n7\\r\\n4\\r\\n9\\r\\n1\\r\\n9\\r\\n4\\r\\n1\\r\\n3\\r\\n5\\r\\n2\\r\\n4\\r\\n4\\r\\n6\\r\\n5\\r\\n1\\r\\n4\\r\\n5\\r\\n8\\r\\n4\\r\\n7\\r\\n6\\r\\n5\\r\\n6\\r\\n9\\r\\n5\\r\\n8\\r\\n1\\r\\n5\\r\\n1\\r\\n6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '100 2\\r\\n71\\r\\n87\\r\\n99\\r\\n47\\r\\n22\\r\\n87\\r\\n49\\r\\n73\\r\\n21\\r\\n12\\r\\n77\\r\\n43\\r\\n18\\r\\n41\\r\\n78\\r\\n62\\r\\n61\\r\\n16\\r\\n64\\r\\n89\\r\\n81\\r\\n54\\r\\n53\\r\\n92\\r\\n93\\r\\n94\\r\\n68\\r\\n93\\r\\n15\\r\\n68\\r\\n42\\r\\n93\\r\\n28\\r\\n19\\r\\n86\\r\\n16\\r\\n97\\r\\n17\\r\\n11\\r\\n43\\r\\n72\\r\\n76\\r\\n54\\r\\n95\\r\\n58\\r\\n53\\r\\n48\\r\\n45\\r\\n85\\r\\n85\\r\\n74\\r\\n21\\r\\n44\\r\\n51\\r\\n89\\r\\n75\\r\\n76\\r\\n17\\r\\n38\\r\\n62\\r\\n81\\r\\n22\\r\\n66\\r\\n59\\r\\n89\\r\\n85\\r\\n91\\r\\n87\\r\\n12\\r\\n97\\r\\n52\\r\\n87\\r\\n43\\r\\n89\\r\\n51\\r\\n58\\r\\n57\\r\\n98\\r\\n78\\r\\n68\\r\\n82\\r\\n41\\r\\n87\\r\\n29\\r\\n75\\r\\n72\\r\\n48\\r\\n14\\r\\n35\\r\\n71\\r\\n74\\r\\n91\\r\\n66\\r\\n67\\r\\n42\\r\\n98\\r\\n52\\r\\n54\\r\\n22\\r\\n41\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['21\\r\\n']}, {'input': '5 20\\r\\n11111111111111111111\\r\\n11111111111111111111\\r\\n11111111111111111111\\r\\n99999999999999999999\\r\\n11111111111111111119\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '3 3\\r\\n111\\r\\n111\\r\\n999\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3 3\\r\\n119\\r\\n181\\r\\n711\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '15 5\\r\\n91728\\r\\n11828\\r\\n11111\\r\\n91728\\r\\n11828\\r\\n11111\\r\\n91728\\r\\n11828\\r\\n11111\\r\\n91728\\r\\n11828\\r\\n11111\\r\\n91728\\r\\n11828\\r\\n11111\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '2 20\\r\\n22222222222222222222\\r\\n11111111111111111111\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3 3\\r\\n233\\r\\n222\\r\\n111\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '4 15\\r\\n222222222222222\\r\\n111111111111119\\r\\n111111111111119\\r\\n111111111111111\\r\\n', 'time': ['15'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '4 1\\r\\n1\\r\\n9\\r\\n9\\r\\n9\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3 3\\r\\n123\\r\\n321\\r\\n132\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3 3\\r\\n113\\r\\n332\\r\\n322\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '2 100\\r\\n2222222222222222222222222222222222222222222222222222222222222222222222221222222222222222222222222222\\r\\n1111111111111111111111111111111111111111111111111111111111111111111111119111111111111111111111111111\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '3 3\\r\\n321\\r\\n231\\r\\n123\\r\\n', 'time': ['15'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '2 100\\r\\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\r\\n2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222\\r\\n', 'time': ['15'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '3 3\\r\\n221\\r\\n111\\r\\n111\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n']}]","all_passed":1}
{"lang":"JavaScript","source_code":"var k=+readline();\nvar s={};\nreadline().split('').forEach(function(c){\n\tif( s[c] ){\n\t\ts[c]++;\n\t}else{\n\t\ts[c]=1;\n\t}\n});\nvar f=false;\nObject.keys(s).forEach(function(c){\n\tif( s[c]%k===0 ){\n\t\ts[c]=repeat(s[c]\/k, c);\n\t}else{\n\t\tf=true;\n\t}\n});\nif(f){\n\tprint(-1);\n\tquit();\n}\ns = Object.keys(s).map(function(c){return s[c];}).join('');\nvar ans='';\nfor(var i=0; i<k; i++){\n\tans+=s;\n}\nprint(ans);\n\nfunction repeat(n, c){\n\tvar ret = '';\n\twhile(n--){\n\t\tret+=c;\n\t}\n\treturn ret;\n}","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"f5451b19cf835b1cb154253fbe4ea6df","code_uid":"22cc8452192715f20d8d3cce174b6472","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"f5451b19cf835b1cb154253fbe4ea6df","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azaz\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['a\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['bcbcbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['cececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececece\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbc\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaa\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbcccddddabbcccdddd\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['aaacddaaacddaaacdd\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['aaabbcaaabbcaaabbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azzazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aaaa\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aazaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aazzaazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaabbaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaazaaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabbaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['accacc\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":";(function () {\n\n\tvar k = +readline();\n\tvar m = readline().split('').reduce(function (p, e) { p[e] = p[e] ? p[e] + 1 : 1; return p; }, {});\n\n\tvar str = '';\n\tfor(var key in m) {\n\t\tif (m[key] % k) {\n\t\t\tprint(-1);\n\t\t\treturn;\n\t\t} else {\n\t\t\tvar l = m[key] \/ k;\n\t\t\twhile (l--) str += key;\n\t\t}\n\t}\n\n\tvar r = '';\n\tfor (var i = 0; i < k; i++) r += str;\n\tprint(r);\n\n}).call(this)","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"f5451b19cf835b1cb154253fbe4ea6df","code_uid":"41ab159cb71c9bf265e54d1f0c0a98b5","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"f5451b19cf835b1cb154253fbe4ea6df","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azaz\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['a\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['bcbcbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['cececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececece\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbc\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaa\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbcccddddabbcccdddd\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['aaacddaaacddaaacdd\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['aaabbcaaabbcaaabbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azzazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aaaa\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aazaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aazzaazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaabbaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaazaaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabbaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['accacc\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function trim(s) {\n\treturn s.replace(\/^\\s+|\\s+$\/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(\/\\s+\/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i], 10);\n\t};\n\treturn tokens;\n}\n\nfunction main() {\n\tvar k = parseInt(readline()),\n\t\ts = trim(readline()),\n\t\tn = s.length,\n\t\tletters = [],\n\t\tletterCount = {};\n\tfor (var i = 0; i < n; ++i) {\n\t\tvar ch = s.charAt(i);\n\t\tif (letterCount[ch] === undefined) {\n\t\t\tletters.push(ch);\n\t\t\tletterCount[ch] = 0;\n\t\t}\n\t\tletterCount[ch] += 1;\n\t}\n\tletters.sort();\n\tvar word = [], result = [];\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tvar letter = letters[i], count = letterCount[letter];\n\t\tif (count % k != 0) {\n\t\t\tprint(-1);\n\t\t\treturn;\n\t\t}\n\t\tfor (var j = count \/ k; j != 0; --j) {\n\t\t\tword.push(letter);\n\t\t}\n\t}\n\tword = word.join('');\n\tfor (var i = 0; i < k; ++i) {\n\t\tresult.push(word);\n\t}\n\tprint(result.join(''));\n}\n\nmain();\n","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"f5451b19cf835b1cb154253fbe4ea6df","code_uid":"958182267a134e0538631b057c410eaa","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"f5451b19cf835b1cb154253fbe4ea6df","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azaz\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['a\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['bcbcbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['cececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececece\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbc\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaa\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbcccddddabbcccdddd\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['aaacddaaacddaaacdd\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['aaabbcaaabbcaaabbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azzazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aaaa\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aazaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aazzaazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaabbaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaazaaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabbaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['accacc\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function main()\n{\n    var n = parseInt(readline());\n    var str = readline();\n    if(str.length % n != 0){print(-1); return;}\n    var mas = new Array(26);\n    for(var i = 0; i < 26; ++i)\n    {\n        mas[i] = 0;\n    }\n    for(var i = 0; i < str.length; ++i)\n    {\n        mas[str.charCodeAt(i)-97] ++;\n    }\n    for(var i = 0; i < 26; ++i)\n    {\n        if(mas[i] != 0 && mas[i] % n != 0){print(-1); return;}\n    }\n    var new_str = \"\";\n    for(var i = 0; i < n; ++i)\n    {\n        for(var j = 0; j < 26; ++j)\n        {\n            if(mas[j] != 0)\n            {\n                for(var h = mas[j] \/ n; h > 0; --h)\n                {\n                    new_str = new_str + String.fromCharCode(j + 97);\n                }\n            }\n        }\n    }\n    print(new_str);\n}\nmain();","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"f5451b19cf835b1cb154253fbe4ea6df","code_uid":"505f02830567fdae12006552dbf8bea0","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"f5451b19cf835b1cb154253fbe4ea6df","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azaz\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['a\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['bcbcbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['cececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececece\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbc\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaa\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbcccddddabbcccdddd\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['aaacddaaacddaaacdd\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['aaabbcaaabbcaaabbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azzazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aaaa\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aazaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aazzaazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaabbaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaazaaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabbaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['accacc\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = +readline();\nvar s = readline().split('').sort();\ns.push('0');\nvar k = 1;\nvar ans = [];\nvar anst = [];\nfor (var i=0; i<s.length-1; i++) {\n\tif (s[i] == s[i+1]) {\n\t\tk++;\n\t} else if (k%n == 0) {\n\t\tfor (var j=0; j<k\/n; j++) ans.push(s[i]);\n\t\tk = 1;\n\t} else {\n\t\tprint(-1);\n\t\tk = -1;\n\t\tbreak;\n\t}\n}\nif (k != -1) {\n\tfor (var j=0; j<n; j++) anst = anst.concat(ans);\n\tprint (anst.join(''));\n\t}","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"f5451b19cf835b1cb154253fbe4ea6df","code_uid":"558aa07d2f31956ec1b91b19ef88e673","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"f5451b19cf835b1cb154253fbe4ea6df","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azaz\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['a\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['bcbcbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['cececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececece\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbc\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaa\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbcccddddabbcccdddd\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['aaacddaaacddaaacdd\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['aaabbcaaabbcaaabbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azzazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aaaa\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aazaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aazzaazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaabbaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaazaaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabbaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['accacc\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\/\/var input = \"2\\naaaa\";\n\/\/var index = 0;\n\/\/\n\/\/function readline(){\n\/\/    var data = input.split('\\n');\n\/\/    if(index < data.length)\n\/\/        return data[index++];\n\/\/}\n\/\/\n\/\/function print(output){\n\/\/    console.log(output);\n\/\/}\n\nfunction test(arr, k){\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] % k !=0)\n            return false;\n    }\n    return true;\n}\n\nfunction main(){\n    var k = parseInt(readline());\n    var str = readline();\n    var a = new Array(26);\n    for(var i = 0; i < a.length; i++)\n        a[i] = 0;\n    for(var i = 0; i < str.length; i++)\n        a[str.charCodeAt(i) - 'a'.charCodeAt(0)]++;\n    if(test(a, k)){\n        var ans = \"\";\n        var contact = \"\";\n        for(var i = 0; i < a.length; i++)\n            for(var j = 0; j < a[i] \/ k; j++)\n                contact += String.fromCharCode(i + 'a'.charCodeAt(0));\n        while(k > 0){\n            ans += contact;\n            k--;\n        }\n        print(ans);\n    }else\n        print(-1);\n}\nmain();","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"f5451b19cf835b1cb154253fbe4ea6df","code_uid":"d2ec5ce126c0e6f38d4193b479c05b5e","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"f5451b19cf835b1cb154253fbe4ea6df","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azaz\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['a\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['bcbcbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['cececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececececece\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbcaaaaaaaabbbbbbc\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaa\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbcccddddabbcccdddd\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['aaacddaaacddaaacdd\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['aaabbcaaabbcaaabbc\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['azzazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aaaa\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['aazaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aazzaazz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['abbabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaabbaaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aaazaaaz\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabbaabb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['aabaab\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['aaaaa\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['aabaab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['accacc\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict'\n\nconst {EOL} = require('os')\n\nlet ipt = ''\nprocess.stdin.on('data', s => ipt += s)\nprocess.stdin.on('end', () => {\n  let [nk, zs] = ipt.split(EOL)\n  const [n, k] = nk.split(' ')\n  zs = zs.split(' ').map(v => +v)\n  let g = 0\n  while (zs.some(z => z < k)) {\n    g++\n    let cz = 0\n    for (let i = 0; i < zs.length; i++) {\n      const z = zs[i]\n      if (z == k) break\n      if (cz < z) {\n        zs[i]++\n        cz = z\n      }\n    }\n    zs = zs.sort((a, b) => a - b)\n  }\n\n  console.log(g)\n})","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"3d6411d67c85f6293f1999ccff2cd8ba","code_uid":"7a13e92ea44523e9f5095b4beb1eec9d","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"3d6411d67c85f6293f1999ccff2cd8ba","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['5']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['4']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['10']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['11']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['21']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['17']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['30']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['12']}, {'input': '3', 'time': ['0'], 'mem': ['136'], 'output': ['70']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['47']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['99']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['78']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['98']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['198']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['108']}, {'input': '1', 'time': ['0'], 'mem': ['136'], 'output': ['184']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['150']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['59']}, {'input': '3', 'time': ['30'], 'mem': ['144'], 'output': ['77']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['31']}, {'input': '8', 'time': ['0'], 'mem': ['136'], 'output': ['89']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['106']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['197']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['148']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['99']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['7']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['100']}]","all_passed":0}
{"lang":"JavaScript","source_code":"const numSplit = (n) => n.toString().split(\"\");\n\nvar num = numSplit(readline());\n\nconst sumDigits = (numArr) => numSplit(numArr.reduce((sum,n) => sum + Number(n),0));\n\nvar count = 0;\n\nconst recursive = (numArr) => {\n    if (numArr.length == 1) return;\n    count++;\n    recursive(sumDigits(numArr));\n} \n\nrecursive(num);\n\nprint(count);","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"ddc9201725e30297a5fc83f4eed75fc9","code_uid":"663eaa19891d198cba845894461c33f6","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ddc9201725e30297a5fc83f4eed75fc9","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 3 2 0 ']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 0 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['YES\\r\\n0 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 3 0 3 0 1 3 2 0 ']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n3 1 2 2 3 1 1 1 3 3 1 0 2 0 1 1 0 0 1 2 2 0 0 0 2 3 0 3 1 2 0 3 0 0 1 0 3 3 1 3 1 1 2 3 1 3 2 1 3 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n0 2 0 2 2 3 1 2 1 2 1 0 3 2 2 3 0 0 3 3 2 2 3 2 3 1 1 3 3 3 1 2 3 1 1 0 2 2 2 2 0 1 3 2 2 0 1 2 3 0 2 3 2 1 1 0 2 1 0 0 0 1 3 3 1 1 2 2 2 2 2 3 2 2 0 2 3 2 0 2 1 1 0 1 1 2 3 3 3 2 3 3 2 3 3 2 2 3 1 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n1 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n2 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n3 3 ']}]","all_passed":0}
{"lang":"JavaScript","source_code":"line = readline();\nvar count =0;\nwhile(line.length > 1) {\n    count++;\n    var result = 0;\n    for(var i =0; i <line.length; i++) {\n        result +=Number(line[i]);\n    }\n    line = String(result);\n}\nprint(count);","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"ddc9201725e30297a5fc83f4eed75fc9","code_uid":"f96ac0fda8a165466d2bdfc16d727e4b","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ddc9201725e30297a5fc83f4eed75fc9","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 3 2 0 ']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 0 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['YES\\r\\n0 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 3 0 3 0 1 3 2 0 ']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n3 1 2 2 3 1 1 1 3 3 1 0 2 0 1 1 0 0 1 2 2 0 0 0 2 3 0 3 1 2 0 3 0 0 1 0 3 3 1 3 1 1 2 3 1 3 2 1 3 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n0 2 0 2 2 3 1 2 1 2 1 0 3 2 2 3 0 0 3 3 2 2 3 2 3 1 1 3 3 3 1 2 3 1 1 0 2 2 2 2 0 1 3 2 2 0 1 2 3 0 2 3 2 1 1 0 2 1 0 0 0 1 3 3 1 1 2 2 2 2 2 3 2 2 0 2 3 2 0 2 1 1 0 1 1 2 3 3 3 2 3 3 2 3 3 2 2 3 1 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n1 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n2 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n3 3 ']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var toInt = x => parseInt(x);\nvar toSum = (a, b) =>(a+b);\nvar isum = x => x.split('').map(toInt).reduce(toSum);\n\nvar x = readline();\n\nvar q = [x], res=0;\nwhile(q.length > 0) {\n    var x = q.shift();\n    \n    if (x.length>=2) {\n        q.push(isum(x)+'');\n        res++;\n    }\n}\nprint(res);\n","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"ddc9201725e30297a5fc83f4eed75fc9","code_uid":"38070bae76687ea1f926ab4aae6817ff","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ddc9201725e30297a5fc83f4eed75fc9","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 3 2 0 ']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 0 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['YES\\r\\n0 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 3 0 3 0 1 3 2 0 ']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n3 1 2 2 3 1 1 1 3 3 1 0 2 0 1 1 0 0 1 2 2 0 0 0 2 3 0 3 1 2 0 3 0 0 1 0 3 3 1 3 1 1 2 3 1 3 2 1 3 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n0 2 0 2 2 3 1 2 1 2 1 0 3 2 2 3 0 0 3 3 2 2 3 2 3 1 1 3 3 3 1 2 3 1 1 0 2 2 2 2 0 1 3 2 2 0 1 2 3 0 2 3 2 1 1 0 2 1 0 0 0 1 3 3 1 1 2 2 2 2 2 3 2 2 0 2 3 2 0 2 1 1 0 1 1 2 3 3 3 2 3 3 2 3 3 2 2 3 1 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n1 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n2 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n3 3 ']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\/* TEST CASE\ninput\n0\noutput\n0\ninput\n10\noutput\n1\ninput\n991\noutput\n3\n *\/\nfunction sumOfDigits(s) {\n    var ret = 0;\n    for (var i = s.length - 1; i >= 0; i--) {\n    \tret += parseInt(s[i]);\n    }\n    \n    return ret.toString();\n}\n\nfunction main() {\n\tvar s = readline();\n\tvar answer = 0;\n\twhile (s.length > 1) {\n\t\ts = sumOfDigits(s);\n\t\tanswer++;\n\t}\n\tprint(answer);\n}\n\nmain();","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"ddc9201725e30297a5fc83f4eed75fc9","code_uid":"8c6be287c4929b4f9c42f0677192553e","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ddc9201725e30297a5fc83f4eed75fc9","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 3 2 0 ']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 0 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['YES\\r\\n0 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n0 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 3 0 3 0 1 3 2 0 ']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n3 1 2 2 3 1 1 1 3 3 1 0 2 0 1 1 0 0 1 2 2 0 0 0 2 3 0 3 1 2 0 3 0 0 1 0 3 3 1 3 1 1 2 3 1 3 2 1 3 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n0 2 0 2 2 3 1 2 1 2 1 0 3 2 2 3 0 0 3 3 2 2 3 2 3 1 1 3 3 3 1 2 3 1 1 0 2 2 2 2 0 1 3 2 2 0 1 2 3 0 2 3 2 1 1 0 2 1 0 0 0 1 3 3 1 1 2 2 2 2 2 3 2 2 0 2 3 2 0 2 1 1 0 1 1 2 3 3 3 2 3 3 2 3 3 2 2 3 1 2 ']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n1 1 ']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n1 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n2 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n2 3 ']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n3 3 ']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\/* TEST CASE\ninput\n5\nLRLR\noutput\n2 1 2 1 2\ninput\n5\n=RRR\noutput\n1 1 2 3 4\n *\/\nfunction main() {\n\tvar n = parseInt(readline());\n\tvar answer = new Array(n);\n\tvar adjacentPairMarks = readline();\n\tvar c = adjacentPairMarks[0];\n\n\tanswer[0] = (c == 'L' ? 2 : 1);\n\tanswer[1] = (c == 'R' ? 2 : 1);\n\t\n\tfor (var i = 1; i < n - 1; i++) {\n\t\tc = adjacentPairMarks[i];\n\n\t\tif (c == '=') {\n\t\t\tanswer[i + 1] = answer[i];\n\t\t} else if (c == 'L') {\n\t\t\tanswer[i + 1] = 1;\n\t\t\tfor (var j = i; j >= 0; j--) {\n\t\t\t\tif (adjacentPairMarks[j] == 'L'\t&& answer[j] <= answer[j + 1]\n\t\t\t\t   || adjacentPairMarks[j] == '=' && answer[j] < answer[j + 1]) {\n\t\t\t\t\tanswer[j]++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t} else if (c == 'R') {\n\t\t\tanswer[i + 1] = answer[i] + 1;\n\t\t}\n\t}\n\n\tprint(answer.join(' '));\n}\n\nmain();","tags":["dp","implementation","greedy","graphs"],"lang_cluster":"Javascript","src_uid":"8c2a6a29dc238b55d0bc99d7e203f1bf","code_uid":"882f3d0226fb5b9641d732697252cf84","difficulty":1800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8c2a6a29dc238b55d0bc99d7e203f1bf","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['76'], 'output': ['4 1 5 2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['84'], 'output': ['2 3 1 4 ']}, {'input': '1', 'time': ['0'], 'mem': ['80'], 'output': ['6 8 2 5 9 1 4 10 3 7 ']}, {'input': '1', 'time': ['0'], 'mem': ['76'], 'output': ['8 5 2 9 6 1 10 7 11 4 12 3 13 14 15 ']}, {'input': '5', 'time': ['0'], 'mem': ['80'], 'output': ['4 1 5 3 2 ']}, {'input': '8', 'time': ['0'], 'mem': ['80'], 'output': ['2 6 7 1 3 8 4 5 ']}, {'input': '1', 'time': ['0'], 'mem': ['80'], 'output': ['1 ']}, {'input': '1', 'time': ['0'], 'mem': ['76'], 'output': ['1 2 3 4 5 6 7 8 9 10 ']}, {'input': '1', 'time': ['0'], 'mem': ['80'], 'output': ['2 3 4 5 6 7 8 9 10 1 ']}, {'input': '1', 'time': ['30'], 'mem': ['80'], 'output': ['10 9 8 7 6 5 4 3 2 1 ']}, {'input': '1', 'time': ['0'], 'mem': ['80'], 'output': ['8 7 6 5 4 3 2 1 9 10 ']}, {'input': '1', 'time': ['0'], 'mem': ['76'], 'output': ['10 1 11 2 8 3 9 4 6 7 5 12 13 ']}, {'input': '2', 'time': ['0'], 'mem': ['76'], 'output': ['1 2 ']}, {'input': '2', 'time': ['0'], 'mem': ['84'], 'output': ['2 1 ']}, {'input': '2', 'time': ['0'], 'mem': ['80'], 'output': ['1 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['72'], 'output': ['3 2 1 ']}, {'input': '5', 'time': ['0'], 'mem': ['80'], 'output': ['5 4 3 2 1 ']}, {'input': '5', 'time': ['0'], 'mem': ['80'], 'output': ['2 3 4 5 1 ']}, {'input': '2', 'time': ['0'], 'mem': ['84'], 'output': ['17 1 2 3 4 5 6 7 8 9 10 11 12 13 18 14 19 15 20 16 ']}, {'input': '2', 'time': ['30'], 'mem': ['80'], 'output': ['19 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 20 18 ']}, {'input': '2', 'time': ['0'], 'mem': ['80'], 'output': ['20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ']}, {'input': '2', 'time': ['0'], 'mem': ['80'], 'output': ['18 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 ']}, {'input': '1', 'time': ['0'], 'mem': ['76'], 'output': ['10 1 2 3 4 5 6 7 8 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['50 55 58 81 38 85 86 51 97 99 100 46 60 101 8 102 25 52 103 6 19 64 11 104 63 105 106 40 107 10 42 108 23 109 68 73 110 78 111 112 113 79 32 114 115 27 61 83 18 116 117 65 66 118 28 53 5 57 82 119 36 39 67 120 48 59 74 76 2 33 121 37 71 122 21 47 49 77 90 41 123 20 31 91 124 7 92 125 43 1 4 45 54 80 17 24 35 44 87 126 72 26 127 15 69 3 128 13 56 75 12 129 70 30 84 95 62 16 130 88 14 22 89 29 93 9 94 96 98 34 ']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n    terminal: false\n});\nlet count;\nlet td1 = 0, td2 = 0, td3 = 0;\nrl.on('line', (line) => {\n    if (!count) {\n        count = parseInt(line);\n        return;\n    }\n    count--;\n    [d1, d2, d3] = line.split(' ').map(Number);\n    td1 += d1;\n    td2 += d2;\n    td3 += d3;\n    if (count === 0) {\n        console.log(td1 === 0 && td2 === 0 && td3 === 0 ? \"YES\" : \"NO\");\n    }\n});\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"cafd4c84353c47cd2ef424e6373dd76d","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"\/\/ 69A - Young Physicist\n\/\/ http:\/\/codeforces.com\/problemset\/problem\/69\/A\n\nfunction main() {\n    let n = parseInt(read());\n    let a = [0, 0, 0];\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < 3; j++) {\n            let x = parseInt(read());\n            a[j] += x;\n        }\n    }\n\n    for (let i = 0; i < 3; i++) {\n        if (a[i] !== 0) {\n            writeline(\"NO\");\n            return 0;\n        }\n    }\n    writeline(\"YES\");\n    return 0;\n}\n\nvar input = \"\";\nvar read;\nvar writeline = (x) => process.stdout.write(x + \"\\n\");\nvar write = (x) => process.stdout.write(x);\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\nprocess.stdin.on(\"data\", (chunk) => input += chunk);\nprocess.stdin.on(\"end\", () => {\n    input = input.trim().split(\/\\s+\/);\n    read = () => input.shift();\n    process.exit(main() || 0);\n});\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"565761fbe19f8b32f3e5267726845780","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict'\n\nconst {EOL} = require('os')\n\nlet ipt = ''\nprocess.stdin.on('data', s => ipt += s)\nprocess.stdin.on('end', () => {\n  const V = ipt.split(EOL).slice(1, -1).map(l => l.split(' ').map(v => parseInt(v)))\n  const res = V.reduce(([xr, yr, zr], [xv, yv, zv]) =>\n    [xr + xv, yr + yv, zr + zv]\n  , [0, 0, 0])\n  console.log(res.every(v => v == 0) ? 'YES' : 'NO')\n})","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"d5f6d258f7ffed91102885627cdd2888","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', (inputStdin) => {\n  inputString += inputStdin;\n});\n\nprocess.stdin.on('end', (_) => {\n  inputString = inputString\n    .trim()\n    .split('\\n')\n    .map((string) => {\n      return string.trim();\n    });\n\n  main();\n});\n\nfunction readline() {\n  return inputString[currentLine++];\n}\n\nfunction main() {\n  var T = readline();\n\n  let matrix = [];\n\n  while (T-- > 0) {\n    let vector = readline()\n      .split(' ')\n      .map((int) => parseInt(int));\n\n    matrix.push(vector);\n  }\n\n  let sumX = 0;\n  let sumY = 0;\n  let sumZ = 0;\n\n  for (let i = 0; i < matrix.length; i++) {\n    let vector = matrix[i];\n    sumX += vector[0];\n    sumY += vector[1];\n    sumZ += vector[2];\n  }\n\n  if (sumX === 0 && sumY === 0 && sumZ === 0) {\n    console.log('YES');\n  } else {\n    console.log('NO');\n  }\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"16dbef20b76abc46e1399b90fe5f1567","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = \"\";\nlet currentLine = 0;\nprocess.stdin.on(\"data\", (inputStd) => {\n  inputString += inputStd;\n});\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((str) => str.trim());\n  main();\n});\nfunction readLine() {\n  return inputString[currentLine++];\n}\nfunction main() {\n  let t = +readLine();\n  const data = [];\n  while (t--) {\n    const row = readLine()\n      .split(\" \")\n      .map((n) => parseInt(n));\n    data.push(row);\n  }\n\n  for (let col = 0; col < 3; col++) {\n    let sum = 0;\n    for (let row = 0; row < data.length; row++) {\n      sum += data[row][col];\n    }\n    if (sum !== 0) {\n      console.log(\"NO\");\n      return;\n    }\n  }\n  console.log(\"YES\");\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"e0cf7bd9ba52a036ba8d941e33a611b8","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"let readline = require('readline');\nlet rl = readline.createInterface({\n\tinput: process.stdin,\n\toutput: process.stdout,\n\tterminal: false\n});\ninput = [];\nrl.on('line', function(line) {\n\tinput.push(line);\n\tif (input.length === input[0] * 1 + 1) {\n\t\tyoungPhysicist(input);\n\t\trl.close();\n\t}\n});\n\n\/\/M N\nlet youngPhysicist = (input) => {\n\tinput.shift();\n\tlet input2 = input.map((el) => {\n\t\treturn el.split(' ');\n\t});\n\tlet x = 0,\n\t\ty = 0,\n\t\tz = 0;\n\tfor (let i = 0; i < input2.length; i++) {\n\t\tx += input2[i][0] * 1;\n\t\ty += input2[i][1] * 1;\n\t\tz += input2[i][2] * 1;\n\t}\n\tif (x === 0 && y === 0 && z === 0) {\n\t\tconsole.log('YES');\n\t} else {\n\t\tconsole.log('NO');\n\t}\n};\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"59b5abaf8fdea1403c416523037cd3b7","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline')\n\nlet inputs = []\n\n\/\/ Create readline Interface\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n})\n\n\/\/ Read Inputs\nrl.on('line', lineInput => {\n    inputs.push(lineInput)\n})\nrl.on('close', () => {\n    let n = parseInt(inputs[0]);\n    let forces = []\n    \n    for (let i = 1; i < n + 1; i++) {\n        const coordinate = inputs[i].split(' ').map(num => parseInt(num))\n        forces.push(coordinate)\n    }\n\n    const xSum = forces.map(elem => elem[0]).reduce((accum, next) => {\n        return accum += next;\n    }, 0);\n\n    const ySum = forces.map(elem => elem[1]).reduce((accum, next) => {\n        return accum += next;\n    }, 0);\n\n    const zSum = forces.map(elem => elem[1]).reduce((accum, next) => {\n        return accum += next;\n    }, 0);\n\n\n    if (xSum != 0 || ySum != 0 || zSum != 0)\n        return console.log('NO')\n    else\n        return console.log(\"YES\")\n\n})","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"ce1f0341ce154005480e49a32416bb29","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const {EOL} = require('os');\n\nlet inp = '';\n\nprocess.stdin.on('data', c => inp += c);\n\nprocess.stdin.on('end', () => {\n    let lines = inp.split(EOL);\n    lines.map(c => c.trim());\n\n    let n = +lines.unshift();\n\n    lines = lines.map(c => c.split(' ').map(r => +r));\n\n    let net = [0, 0, 0];\n\n    for(let i = 0; i < n - 1; i++)  {\n    \tnet[0] += lines[i + 1][0];\n    \tnet[1] += lines[i + 1][1];\n    \tnet[2] += lines[i + 1][2];\n    }\n\n    if(!(net[0] || net[1] || net[2]))  {\n    \tprocess.stdout.write(\"YES\");\n    }  else  {\n    \tprocess.stdout.write(\"NO\");\n    }\n});","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"cae107f78534520b8c52c522d7258b2e","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"\/\/Young Physicist\n\nconst {EOL} = require('os');\n\nlet inp = '';\n\nprocess.stdin.on('data', c => inp += c);\n\nprocess.stdin.on('end', () => {\n    let lines = inp.split(EOL);\n    lines.map(c => c.trim());\n\n    let n = +lines.shift();\n\n    lines = lines.map(c => c.split(' ').map(r => +r));\n\n    let net = [0, 0, 0];\n\n    for(let i = 0; i < n; i++)  {\n    \tnet[0] += lines[i][0];\n    \tnet[1] += lines[i][1];\n    \tnet[2] += lines[i][2];\n    }\n\n    if(!(net[0] || net[1] || net[2]))  {\n    \tprocess.stdout.write(\"YES\");\n    }  else  {\n    \tprocess.stdout.write(\"NO\");\n    }\n});","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"eea1eece2ea95b366225937e65c5d8ad","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const input = [];\n\nfunction splbsi(line) {\n  return line.split(\" \").map((x) => parseInt(x));\n}\n\nconst readLine = require(\"readline\").createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nreadLine.on(\"line\", (line) => {\n  input.push(line);\n});\n\nreadLine.on(\"close\", () => {\n  const n = parseInt(input[0]);\n\n  let s = [0, 0, 0];\n  for (let i = 1; i <= n; i += 1) {\n    const [x, y, z] = splbsi(input[i]);\n    s[0] += x; s[1] += y; s[2] += z;\n  }\n\n  console.log(s[0] === 0 && s[1] === 0 && s[2] === 0 ? \"YES\" : \"NO\")\n});\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"295606c7f0aa2fc68410852f2a1f6adf","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readLine = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\nconst input = [];\nreadLine.on('line', line => input.push(line));\n\nreadLine.on('close', () => {\n  let x = 0, y = 0, z = 0;\n  input.forEach( (line, i) => {\n    if (i === 0) return;\n    const nums = line.split(' ').map(x => parseInt(x));\n    x += nums[0]; y += nums[1]; z += nums[2];\n  });\n\n  console.log(\n    x === 0 && y === 0 && z === 0 ? \"YES\" : \"NO\"\n  );\n});","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"6e0a5d88b914e1b1b7c31d745ccc9a11","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = '';\nlet currentLine = 0;\nprocess.stdin.on('data', data => {\n\tinputString += data;\n});\nprocess.stdin.on('end', function () {\n\tinputString = inputString\n\t\t.trim()\n\t\t.split('\\n')\n\t\t.map(str => str.trim());\n\tmain();\n});\n\nfunction readLine() {\n\treturn inputString[currentLine++];\n}\n\nfunction main() {\n\tlet n = readLine() >> 0,\n\t\tm = n;\n\tconst arr = [];\n\n\twhile (n--) {\n\t\tconst vector = readLine()\n\t\t\t.split(' ')\n\t\t\t.map(x => x >> 0);\n\t\tarr.push(vector);\n\t}\n\n\tlet nonZero = false,\n\t\tsum = 0;\n\n\tfor (let i = 0; i < 3; i++) {\n\t\tsum = 0;\n\t\tfor (let j = 0; j < m; j++) {\n\t\t\tsum += arr[j][i];\n\t\t}\n\n\t\tif (sum !== 0) {\n\t\t\tnonZero = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tnonZero ? console.log('NO') : console.log('YES');\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"d4202bc37db16504684571735cb343fb","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\nlet inputString = '';\nlet currentLine = 0;\nprocess.stdin.on('data', (inputStd) => {\n    inputString += inputStd;\n});\nprocess.stdin.on('end', function () {\n    inputString = inputString\n        .trim()\n        .split('\\n')\n        .map((str) => {\n            return str.trim();\n        });\n    main();\n});\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\nfunction main() {\n    const n = parseInt(readLine());\n    let AllX = [];\n    let AllY = [];\n    let AllZ = [];\n\n    for (let i = 0; i < n; i++) {\n        const numsArray = readLine().split(' ').map(Number);\n        const [x, y, z] = numsArray;\n        AllX.push(x);\n        AllY.push(y);\n        AllZ.push(z);\n    }\n    let sumX = AllX.reduce((a, b) => {\n        return a + b;\n    }, 0);\n    let sumY = AllY.reduce((a, b) => {\n        return a + b;\n    }, 0);\n    let sumZ = AllZ.reduce((a, b) => {\n        return a + b;\n    }, 0);\n    if (sumX === 0 && sumY === 0 && sumZ === 0) {\n        console.log('YES');\n    } else {\n        console.log('NO');\n    }\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"6905e5566ab9e903e987f75ded2b5bbe","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"\nlet _inputLines;\nlet _lineNumber = 0;\nlet inputReader = _inputReader ();\n\nfunction _main() {\n\t\n\t_inputLines = _inputData.trim().split('\\n').map((string) => {\n\t\treturn string.trim();\n\t});;\n\t\n\tvar n = inputReader.readLine();\n\tvar a = [0, 0, 0];\n\tfor (var i = 0; i < n; i++) {\n\t  var x = inputReader.readLine().split(\" \");\n\t  for (var j = 0; j < a.length; j++) a[j] += parseInt(x[0]);\n\t}\n\tconsole.log(a.join(\"\") == \"000\" ? \"YES\" : \"NO\");\n\n}\n\nvar _inputData = '';\nfunction cacheInput(data) {\n\t_inputData += data;\n}\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', cacheInput).on('end', _main);\n\nfunction _inputReader () {\n\tfunction readLine(){\n\t\treturn _inputLines[_lineNumber++];\n\t}\n\t\t\n\t\n\treturn {\n\t\treadLine,\n\t}\n}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"69241fb52140c5f8e24a1c39dc227b3a","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"let _inputLines;\nlet _lineNumber = 0;\nlet inputReader = _inputReader ();\n \nfunction _main() {\n\t\n\t_inputLines = _inputData.trim().split('\\n').map((string) => {\n\t\treturn string.trim();\n\t});;\n\t\n\tvar n = inputReader.readLine();\n\tvar a = [0, 0, 0];\n\tfor (var i = 0; i < n; i++) {\n\t  var x = inputReader.readLine().split(\" \");\n\t  for (var j = 0; j < a.length; j++) a[j] += parseInt(x[j]);\n\t}\n\tconsole.log(a.join(\"\") == \"000\" ? \"YES\" : \"NO\");\n \n}\n \nvar _inputData = '';\nfunction cacheInput(data) {\n\t_inputData += data;\n}\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', cacheInput).on('end', _main);\n \nfunction _inputReader () {\n\tfunction readLine(){\n\t\treturn _inputLines[_lineNumber++];\n\t}\n\t\t\n\t\n\treturn {\n\t\treadLine,\n\t}\n}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"ca43c89f1d8bb04878edaeac8e2526c0","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nvar count = 0;\nvar test;\nvar x = 0, y = 0, z = 0;\n\nrl.on('line', (data) => {\n\n    if(count!=0) {\n        data = data .trim();\n\n        var splitted = data.split(\" \");\n        var len = splitted.length;\n\n        x= x + parseInt(splitted[0]);\n        y= y + parseInt(splitted[1]);\n        z= z + parseInt(splitted[2]);\n\n        if(count===test){\n            if(x===0 && y===0 && z===0) {\n                console.log(\"YES\");\n            }else {\n                console.log(\"NO\");\n            }\n        }\n    }else {\n        data = data.trim();\n        test = parseInt(data);\n        x=0, y=0, z=0;\n    }\n    ++count;\n});\n\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"e0458d8ce41a3532ab4c0e87180d9d72","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding(\"utf-8\");\n\nlet currentLine = 0;\nlet inputString = \"\";\n\nprocess.stdin.on(\"data\", (raw_data) => {\n  inputString += raw_data;\n});\n\nprocess.stdin.on(\"end\", (_) => {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((line) => {\n      return line.trim();\n    });\n  main();\n});\n\nfunction readLine() {\n  return inputString[currentLine++];\n}\n\n\/******** Main function*************\/\n\nfunction main() {\n  var n = +readLine();\n  var arr = [];\n\n  for (var i = 0; i < n; i++) {\n    var line = readLine().split(\" \").map(Number);\n    arr.push(line);\n  }\n\n  var sum1 = 0,\n    sum2 = 0,\n    sum3 = 0;\n  for (var i = 0; i < n; i++) {\n    arr[i].map((item, index) => {\n      if (index == 0) {\n        sum1 += item;\n      } else if (index == 1) {\n        sum2 += item;\n      } else if (index == 2) {\n        sum3 += item;\n      }\n    });\n  }\n\n  if (sum1 === 0 && sum2 === 0 && sum3 === 0) {\n    console.log(\"YES\");\n  } else {\n    console.log(\"NO\");\n  }\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"c9ee45abd64af8263444531826f2c08f","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"let fs = require(\"fs\");\n\nlet txt = fs.readFileSync(0, \"utf-8\").split(\"\\r\\n\").filter(data => {\n    return data.length > 0\n});\n\/\/ txt.shift();\nfor (let index = 0; index < txt.length; index ++) {\n   if(!isNaN(txt[index]*1)){\n       let tab=[];\n       for (let i = index+1; i < index+txt[index]*1+1; i++) {\n           tab.push(...txt[i].split(\" \").map(data=>{return data*1}))\n           \n       }\n       doit(tab)\n   }\n}\n\nfunction doit(tab) {\n    let x=0,y=0,z=0\n    tab.forEach((data,index) => {\n        if(index%3==0){\n            x+=data\n        }else if(index%3==1){\n            y+=data;\n        }else{\n            z+=data;\n        }\n    });\n    if(x==0 && y==0 && z==0){\n        console.log(\"YES\");\n    }else{\n        console.log(\"NO\");\n    }\n    \n}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"cef26b99c838f033be831c16e663516f","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = \"\";\nlet currentLine = 0;\nprocess.stdin.on(\"data\", (data) => {\n  inputString += data;\n});\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((str) => str.trim());\n  main();\n});\nfunction readLine() {\n  return inputString[currentLine++];\n}\nfunction main() {\n  const n = parseInt(readLine());\n  let vectors = [];\n  for (let i = 1; i < n + 1; i++) {\n    let v = readLine()\n      .split(\" \")\n      .map((value) => parseInt(value));\n    vectors.push(v);\n  }\n  let sum = [0, 0, 0];\n  for (let i = 0; i < vectors.length; i++) {\n    const vector = vectors[i];\n    for (let j = 0; j < vector.length; j++) {\n      sum[j] = sum[j] + vectors[i][j];\n    }\n  }\n  let result = sum.every((n) => n === 0);\n  result = result ? \"YES\" : \"NO\";\n  console.log(result);\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"ab67d8a4be3d9094d3f81e0fa100a32b","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\n\nlet inputs = [];\n\n\/\/ Create readline Interface\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n})\n\n\n\/\/ Read Inputs\nrl.on('line', lineInput => {\n    inputs.push(lineInput);\n})\n\n\n\/\/ Excute algorithm\nrl.on('close', () => {\n    \n    const numOfCoins = inputs[1].split(' ').length;\n    const coinsValue = inputs[1].split(' ').sort((a, b) => b - a);\n    const totalValue = inputs[1].split(' ').reduce((accum, c) => accum += parseInt(c), 0)\n    const minVal = (totalValue \/ 2) + 1;\n    let minNumOfCoins = 0;\n    let myValue = 0;\n\n    for (let i = 0; i < numOfCoins; i++) {\n\n        if (myValue < Math.floor(minVal)) {\n            myValue += parseInt(coinsValue[i])\n            minNumOfCoins++\n        } else {\n            return console.log(minNumOfCoins)\n        }\n    }\n\n    return console.log(minNumOfCoins)\n\n})","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"4971401960ea8a3055140eb509df9598","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2\\r\\n2421\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2\\r\\n0135\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2\\r\\n3754\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1\\r\\n33\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2\\r\\n3444\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3\\r\\n221323\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3\\r\\n132432\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1\\r\\n10\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3\\r\\n999000\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5\\r\\n2563434512\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '10\\r\\n01101001000011011110\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '10\\r\\n10001222212022211120\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '10\\r\\n36828132853144011224\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '20\\r\\n1011022122111202122200100211021100001122\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '20\\r\\n5232324254212415411311123313002001301121\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '20\\r\\n7405800505032736115894335199688161431589\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '20\\r\\n3415010010430312351463661555326552265642\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '50\\r\\n2102200200102000012010102011211201121112001112220022023331220132002222113003003302101312001033110321\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '50\\r\\n5612454122355331521225634515354651153334442245234623042403102434401340330012200102111030242232001423\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '50\\r\\n0013011201111112210231333121030031021132323232322331422253215312454431312252454531121325154332452522\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '50\\r\\n1333113332002310001130333200002120101112101000001001122200021012010112000102121102212021200102011000\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '50\\r\\n7768982292275759939882751465173844816331588199736866065335518782157581162167237401803021840688341656\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '50\\r\\n5060172568971658079607579942843871533766899530593457744544240062187820782803777264583028807003285606\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n32033233210213232101210131232021120310331112120033001231123232221200213021203033300033131302232100038528951495743459997297531816949698487426212357538284284222536535855445278621151486932989238531899512\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n02002102210011010100120120200220102011120101221112212222120020210120100100210020110121012200202122003345665163205330111020604514053164225655212253500113103534213313020162345540026653211623642123220355\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n77183123282838517843664381789267288922656323541699343586762218319159218294863295482798464649254394971213132422224212223202404302223411433322333414121022024111412343110143421202444434024400100413442214\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n10001111012200211011000121001200011210000020102102001022212010122102202221201112010122020001101100108897949728635541168542364573471936555772537461654157812311614931827469976934765219573155999659346292\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n01232301021031212111013002303211223032012113201031332103213332222202203330122103103121131233013000116022330435355138573123144360458655075068170808157467335580232261005471574645456707410743351868832288\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n29984263744168545119858476736999712929651758223788987449661283528958984743292587725324189134223179864351053241163312352223630541424435625146656004416300322106250255412140420461130552626644306153634053\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n31600324621210624556500610052054505630313425345404534213653266122646254136660603332516425411106060211654812165791554127683771773326741719787895359171717963263779732526239927838412657412425615852874991\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1\\r\\n09\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '10\\r\\n11111111112222222222\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2\\r\\n2231\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111112222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3\\r\\n123022\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2\\r\\n2322\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6\\r\\n123456789000\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '10\\r\\n22222222224444444444\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n24242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5\\r\\n1257823589\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3\\r\\n158159\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999991111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n22343424233121404112342221440103014430444234223303320243202210332120013031314432132430043330110313112023440313043212221301033103041340034304442240323002140112031424013224122404204110340334110122004100\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3\\r\\n378954\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '100\\r\\n22222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111112222222222222222222222222222222222222222222222222233333333333333333333333333333333333333333333333333\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3\\r\\n123012\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '100\\r\\n43242352435435435423653231443242342313412343253241432423524354354354236532314432423423134123432532417897987897897979897879879878979787987987987987989978979878978979798978798798789797879879879879879899\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3\\r\\n000100\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2\\r\\n0001\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3\\r\\n111117\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n  inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n  inputString = inputString.trim().split('\\n').map(string => {\n    return string.trim();\n  });\n\n  main();\n});\n\nfunction readline() {\n  return inputString[currentLine++];\n}\n\nfunction print(s) {\n  process.stdout.write(`${s}`);\n}\n\/\/ Make a Snippet for the code above this and then write your logic in main();\n\nfunction main() {\n  \/\/ input\n  const n = +readline();\n  const p = readline().split(' ').map(x => parseInt(x));\n  const half = p.reduce((l, m) => l + m, 0) \/ 2;\n  let s = 0;\n  let c = 0;\n  p.sort((l, m) => m - l);\n  while (s <= half) {\n    s += p[c++];\n    if (s > half) {\n      break;\n    }\n  }\n  print(c);\n}\n\n","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"37ceb27294c37026ea0d84ca86fcc3c7","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false\n});\nlet c = 0;\n\nrl.on('line', (d) => {\n  if (c === 0) {\n    c++;\n    return;\n  }\n\n  const arr = d.split(' ').map(Number);\n  arr.sort((a, b) => b - a);\n\n  const sum = arr.reduce((a, b) => a + b, 0);\n  let currSum = 0;\n  let idx = 0;\n\n  while (currSum <= Math.floor(sum \/ 2)) {\n    currSum += arr[idx];\n    idx++;\n  }\n\n  console.log(idx);\n\n  c++;\n});\n","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"928b0f7129dd9e34dbbfe3f2915d50b2","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readLine = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\nconst input = [];\nreadLine.on('line', line => input.push(line));\n\nreadLine.on('close', () => {\n  const arr = input[1].split(' ').map(x => parseInt(x));\n  \n  let sum = arr.reduce((prev, next) => prev+next, 0);\n  let yourSum = 0;\n  \n  arr.sort((a, b) => a - b);\n  for (let i = arr.length-1; i >= 0; i -= 1) {\n    yourSum += arr[i]; sum -= arr[i];\n    if (yourSum > sum) {\n      console.log(arr.length - i); break;\n    }\n  }\n});","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"001cab4fedb405aff5cdc58d98a24207","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n    \n    main();    \n});\n\nfunction readline() {\n    return inputString[currentLine++];\n}\n\n\/\/ thats all what you have to write to get input from stdin, using readLine.\n\n\n\/\/ Main code runs in main();\n\n\nfunction main(){\n\n    let coinCount =Number.parseInt( readline());\n    let coins = readline().split(\" \").map( (item) => Number.parseInt(item));\n    \/\/ desc\n    coins = coins.sort((a,b) =>  a - b);\n    \n    let picked = [];\n    let notPicked = coins;\n    while(true) {\n        \n         picked.push(notPicked.pop());\n         let pickedSum =  picked.reduce((a , b) => a + b, 0)\n         let notPickedSum = notPicked.reduce((a,b) => a + b, 0);\n         if(pickedSum > notPickedSum)\n         {\n            process.stdout.write(picked.length.toString());\n             break;\n         }\n\n    \n    }\n\n    \n}","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"b4101056044dff080d1da79348acb032","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet standardInputString = '';\nlet currentLine = 0;\n\nfunction readLine() {\n    return standardInputString[currentLine++];\n}\n\nprocess.stdin.on('data', rawData=> {\n    standardInputString += rawData;\n})\n\nprocess.stdin.on('end', _ => {\n    standardInputString = standardInputString.trim().split('\\n').map(line=> {\n        return line.trim();\n    })\n    main();\n})\n\nfunction main() {\n    const coinsNumber = +(readLine());\n    const coin = readLine().split(\" \").join(\",\");\n    let sum = eval(coin.split(\",\").join(\"+\"));\n    const minimum = sum \/ 2;\n    let possible = 0;\n    let count = 0;\n    let sorted = Array.from(coin.split(\",\")).map(x=> 1*x);\n    sorted = sorted.sort((a,b)=> a - b);\n    for(let i = sorted.length - 1; i >= 0; i--) {\n        possible = possible + (1* sorted[i]);\n        count++;\n        if(possible > minimum) break;\n    }\n    console.log(count);\n}","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"662365e84d1747b7b4887ccded4ab857","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\nlet inputString = '';\nlet currentLine = 0;\nprocess.stdin.on('data', (inputStd) => {\n    inputString += inputStd;\n});\nprocess.stdin.on('end', function () {\n    inputString = inputString\n        .trim()\n        .split('\\n')\n        .map((str) => {\n            return str.trim();\n        });\n    main();\n});\nfunction readLine() {\n    return inputString[currentLine++];\n}\nfunction main() {\n    let numberofCoins = parseInt(readLine());\n    let valuesofCoins = readLine().split(' ').map(Number);\n    let sum = 0;\n    for (let i = 0; i < valuesofCoins.length; i++) {\n        sum = sum + valuesofCoins[i];\n    }\n\n    valuesofCoins = valuesofCoins.sort((a, b) => b - a);\n    let finalArry = [];\n    let finalSum = 0;\n    for (let i = 0; i < valuesofCoins.length; i++) {\n        if (finalSum <= sum \/ 2) {\n            finalArry.push(valuesofCoins[i]);\n            finalSum = finalSum + valuesofCoins[i];\n        }\n    }\n    let final = finalArry.length;\n    console.log(final);\n}\n","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"bc8576babc0c4d82b2d62ee3385c13f9","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"let fs = require('fs');\n\nlet txt = fs.readFileSync(0, \"utf-8\").split(\"\\r\\n\").filter(data => {\n    return data.length > 0;\n});\nfor (let i = 1; i < txt.length; i += 2) {\n    let info = txt[i].split(\" \").filter(data => {\n        return data.length > 0;\n    }).map(data => {\n        return data * 1;\n    }).sort((a, b) => {\n        return b - a;\n    });\n    doit(info);\n}\n\nfunction doit(tab) {\n    let me=0,twin=0,coins=0;\n    tab.forEach(data=>{\n        twin+=data;\n    });\n    tab.forEach(data=>{\n        if(me>twin){\n            return;\n        }else{\n            me+=data;\n            twin-=data;\n            ++coins;\n        }\n    });\n    console.log(coins);\n}","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"d2ab8771e30c275b2a2931620c70d785","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet stdin = '';\n\nprocess.stdin.on('data', (input) => {\n  stdin += input;\n});\n\nprocess.stdin.on('end', () => {\n  const data = stdin.split('\\n');\n  let totalSum = 0;\n\n  const coins = stdin\n    .split('\\n')[1]\n    .split(' ')\n    .map((coin) => {\n      const num = Number(coin);\n      totalSum += num;\n      return num;\n    })\n    .sort((a, b) => a - b);\n\n  let forBro = 0;\n  let forBroCount = 0;\n\n  for (const coin of coins) {\n    forBro += coin;\n    if (forBro < totalSum \/ 2) forBroCount++;\n    else break;\n  }\n\n  process.stdout.write(String(coins.length - forBroCount));\n});","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"441a100256c1249d982ef62d6baac8df","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet stdin = '';\n\nprocess.stdin.on('data', (input) => {\n  stdin += input;\n});\n\nprocess.stdin.on('end', () => {\n  const data = stdin.split('\\n');\n  const len = Number(data[0]);\n  let totalSum = 0;\n\n  const coins = data[1]\n    .split(' ')\n    .map((coin) => {\n      const num = Number(coin);\n      totalSum += num;\n      return num;\n    })\n    .sort((a, b) => a - b);\n\n  let forBro = 0;\n  let forBroCount = 0;\n\n  for (const coin of coins) {\n    forBro += coin;\n    if (forBro < totalSum \/ 2) forBroCount++;\n    else break;\n  }\n\n  process.stdout.write(String(len - forBroCount));\n});","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"ee535e202b7662dbaa91e869c8c6cee1","code_uid":"fa824acc2f75b9240fb65870e2e3cbd1","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ee535e202b7662dbaa91e869c8c6cee1","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict'\n\nconst {EOL} = require('os')\n\nlet ipt = ''\nprocess.stdin.on('data', s => ipt += s)\nprocess.stdin.on('end', () => {\n  const ils = ipt.split(EOL).slice(1, -1).map(l => l.split(' '))\n  console.log(ils.map(([n, s, f, a, b, c, d, e]) => [\n      n,\n      s * 100 - f * 50 + +a + +b + +c + +d + +e\n    ]).reduce((l, u) => u[1] > l[1] ? u : l)[0]\n  )\n})","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"b9dacff0cab78595296d697d22dce5d9","code_uid":"e33354fee999cb5e9825537314be93c8","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"b9dacff0cab78595296d697d22dce5d9","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['tourist']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['A']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['_']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['Ab']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['F1']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['Bcfg']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['N']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['minus_one']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['7giq']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['Z']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['Defg']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['jnm']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['jhgcyt']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['jhv']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['ytdttjfhfd']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['yfycy']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['hfy']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['E']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['yyyc']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['mac']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['cool']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', (inputStdin) => {\n  inputString += inputStdin;\n});\n\nprocess.stdin.on('end', (_) => {\n  inputString = inputString\n    .trim()\n    .split('\\n')\n    .map((string) => {\n      return string.trim();\n    });\n\n  main();\n});\n\nfunction readline() {\n  return inputString[currentLine++];\n}\n\n\/\/ Make a Snippet for the code above this and then write your logic in main()\nfunction main() {\n  const input = readline().split(' ').map(Number)\n  const [length, distinct] = input\n  const nums = readline().split(' ').map(Number)\n  helper(nums, length, distinct)\n}\n\nfunction helper(nums, length, distinct) {\n  let cnt = new Map()\n  let unique = 0\n  let j = 0\n \n  for (let i = 0; i < length; i++) {\n    const num = nums[i]\n    if (!cnt.has(num))\n      unique++\n    cnt.set(num, (cnt.get(num) || 0) + 1)\n    while (unique === distinct) {\n      cnt.set(nums[j], cnt.get(nums[j])-1);\n      if (cnt.get(nums[j]) === 0) {\n        console.log((j + 1) + ' ' + (i + 1))\n        return\n      }\n      j++\n    }\n  }\n \n  console.log('-1 -1')\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"2042574a76b771b382863a736e7b9abd","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '21 5\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1 1000\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1000000000 1000000000\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '122 7\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4 3\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '321123 3211232\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8 2\\r\\n', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '17 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '137 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7298 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '76754 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '12345678 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '987654321 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1000000000 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '701408733 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1 3\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3 3\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '100 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '87783 3\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '615693473 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '615693474 3\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1000000000 3\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1 4\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2 4\\r\\n', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '17 4\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '234 4\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '23435345 4\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '989464701 4\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '464 5\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7647474 5\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '457787655 5\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '764747 6\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '980765665 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '877655444 8\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '567886500 9\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '656777660 10\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '197445609 11\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '647474474 12\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '856644446 14\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '980345678 19\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '561854567 23\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '987654321 27\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '780787655 29\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '999999999 30\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1 50\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5 54\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '378 83\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '283847 111\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '38746466 2847\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '83768466 12345\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '987654321 7475657\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '10 174764570\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '967755664 974301345\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '76 758866446\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1 1000000000\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '469766205 719342208\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '918938066 77\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '856089381 19\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '152235195 16\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '429960894 3101\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '450695564 7\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '154517270 24\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '300919980 24\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '900077555 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '172285923 26\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100010);\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n\nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"68b05cb91cb7b72f52046e065b57b325","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100010).fill(0);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"fd1ad79b89cbc80ec1b4dca9227596e1","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = [];\n    \/\/ const counts = new Array(100010);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"3856f3b7e9fb1989c22b0893b74b1a9e","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"cf28fe696f2f15e56b00855181215b30","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100010);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"ed4d66a89e4595d46b311942523aec7e","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment2(n, k, arr);\n    printResult(result);\n}\n\nconst countSegment = (n, k, ar) => {\n    \/\/ const counts = new Array(100010).fill(0);\n    const counts = [];\n    for (let i = 0; i <= 100010; i++) {\n        counts.push(0);\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[start] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n\n    return end ? `${start} ${end}` : `-1 -1`;\n}\n\nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n}\n\nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"c1602cef8097cd4d200120c563a7cc8d","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ');\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100001);\n    \/\/ const counts = new Array(100010);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[parseInt(ar[i], 10)]) {\n            counts[parseInt(ar[i], 10)] = `${i}`;\n            if (ar[i] == ar[start]) {\n                while (counts[parseInt(ar[start], 10)] != start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[parseInt(ar[i], 10)] = `${i}`;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"04f5f681cb0d108efe0b93c5818f2095","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n \n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100001).fill(0);\n    \/\/ const counts = new Array(100010);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"4ed43dafd2b8397a31a0b05c594c13db","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n \n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    \/\/ const counts = new Array(100010).fill(0);\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"bd5af7627374e9141e7d6c81a7a80aab","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array();\n    \/\/ const counts = new Array(100010);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"79215f72d30194b47dec6aa03e4bbe3c","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n \nlet inputString = '';\nlet currentLine = 0;\n \nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n \nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n \n    main();\n});\n \nfunction readLine() {\n    return inputString[currentLine++];\n}\n \nfunction main() {\n    \/\/ const nk = parseInt(readLine(), 10);\n    const nk = readLine().split(' ').map(Number);\n    const arr = `0 ${readLine()}`.split(' ').map(Number);\n    const n = nk[0];\n    const k = nk[1];\n    \/\/ console.log(n, k, arr)\n\n    const result = countSegment(n, k, arr);\n    printResult(result);\n}\n \nconst countSegment = (n, k, ar) => {\n    const counts = new Array(100001);\n    \/\/ for (let i = 0; i <= 100010; i++) {\n    \/\/     counts[i] = 0;\n    \/\/ }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            counts[ar[i]] = i;\n            if (ar[i] === ar[start]) {\n                while (counts[ar[start]] !== start) {\n                    start++;\n                }\n            }\n            continue;\n        }\n        counts[ar[i]] = i;\n        sum++;\n        if (sum === k) {\n            end = i;\n            break;\n        }\n    }\n \n    return end ? `${start} ${end}` : `-1 -1`;\n};\n \nconst countSegment2 = (n, k, ar) => {\n    const counts = new Array(100010);\n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    let start = 1;\n    let end = 0;\n    let sum = 0;\n    let f;\n    for (let i = 1; i <= n; i++) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            end = i;\n            f = 1;\n            break;\n        }\n    }\n \n    for (let i = 0; i <= 100010; i++) {\n        counts[i] = 0;\n    }\n    sum = 0;\n    for (let i = end; i >= 1; i--) {\n        if (counts[ar[i]]) {\n            continue;\n        }\n        counts[ar[i]] = 1;\n        sum++;\n        if (sum === k) {\n            start = i;\n            break;\n        }\n    }\n    return f ? `${start} ${end}` : `-1 -1`;\n};\n \nfunction printResult(x) {\n    process.stdout.write(x);\n}","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"d6106ada3c6e2df7814f7442708a5d1b","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"function giaiBai(inp1, inp2) {\n    inp1 = inp1.split(' ').map(e => parseInt(e))\n    inp2 = inp2.split(' ').map(e => parseInt(e))\n    inp2.unshift(0)\n\n    let n = inp1[0],\n        k = inp1[1],\n        a = inp2,\n        c = new Array(10e5).fill(0),\n        count = 0,\n        j = 0\n\n    for(var i = 1; i <= n; i++) {\n        c[a[i]]++\n        if (c[a[i]] === 1) {\n            count++\n        }\n        while (count === k) {\n            j++\n            c[a[j]]--\n            if(c[a[j]] === 0) {\n                console.log(j, i)\n                break\n            }\n        }\n        if(count === k) {\n            break\n        }\n    }\n    if (count === k) {\n        return\n    }\n    console.log('-1 -1')\n}\n\nvar readline = require('readline');\n\/\/ Get process.stdin as the standard input object.\nvar standard_input = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false\n});\n\n\/\/ Set input character encoding.\n\/\/ standard_input.setEncoding('utf-8');\n\n\/\/ Prompt user to input data in console.\n\/\/ console.log(\"Please input text in command line.\");\n\n\/\/ When user input data and click enter key.\nstandard_input.on('line', function (inp1) {\n\/\/     console.log(inp1);\n    standard_input.on('line', function (inp2) {\n        \/\/ Print user input in console.\n        inp1 = inp1.trim()\n        inp2 = inp2.trim()\n        giaiBai(inp1, inp2)\n        process.exit();\n    });\n});\n","tags":["two pointers","implementation","bitmasks"],"lang_cluster":"Javascript","src_uid":"4b423274448ff3f0dee7644203706805","code_uid":"95e3ab4f8b0953fd101addf19332de19","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4b423274448ff3f0dee7644203706805","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n0 2 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n4 1 16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 512 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6\\r\\n64 32 16 8 2 0 \\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n4 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['11\\r\\n262144 32768 16384 8192 1024 512 64 32 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n3 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n8 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n89 34 13 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n6765 377 144 8 3 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n75025 1597 89 34 8 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n9227465 2178309 832040 75025 28657 4181 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n701408733 267914296 14930352 2178309 832040 317811 46368 17711 6765 1597 233 89 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n701408733 267914296 24157817 5702887 514229 196418 75025 28657 1597 233 89 13 5 1 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n701408733 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n81 13 4 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n66012 19513 1705 504 44 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n334745777 181997601 53798080 29249425 8646064 4700770 1389537 755476 223317 121415 35890 19513 5768 3136 927 504 149 81 24 13 4 2 0 \\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n615693474 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['15\\r\\n615693474 334745777 29249425 15902591 2555757 1389537 410744 35890 10609 5768 274 149 4 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n15 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['6\\r\\n208 15 8 2 1 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['13\\r\\n14564533 7555935 1055026 147312 76424 20569 10671 2872 1490 401 108 4 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n747044834 201061985 28074040 7555935 3919944 1055026 547337 147312 39648 10671 5536 1490 773 108 56 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n464 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n5976577 1546352 103519 13624 6930 464 8 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['14\\r\\n345052351 89277256 23099186 203513 103519 26784 13624 6930 3525 912 31 16 8 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n463968 233904 59448 3840 1936 976 492 125 32 16 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n971364608 7805695 987568 495776 62725 31489 15808 1004 504 253 127 64 32 8 4 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n512966536 256993248 64504063 32316160 8111200 2035872 510994 128257 64256 16128 8080 509 128 8 4 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['11\\r\\n525375999 32965728 8257696 1035269 129792 64960 32512 16272 8144 128 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['13\\r\\n531372800 66519472 33276064 16646200 8327186 521472 65280 32656 16336 128 64 2 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n133628064 33423378 16715781 8359937 4180992 1045760 65424 16364 8184 1024 512 128 32 16 8 4 1 0 \\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n535625888 66977797 33492993 8375296 2094336 523712 261888 65488 32748 16376 4095 2048 1024 512 256 16 1 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['16\\r\\n536592385 268304384 33541120 16771072 1048320 262096 65528 32765 16383 8192 2048 128 16 8 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536864768 268432640 134216448 33554176 4194284 2097144 524287 262144 131072 65536 2048 1024 64 32 8 2 1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870656 16777213 4194304 2097152 1048576 524288 262144 65536 8192 4096 2048 256 64 32 8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['20\\r\\n536870904 268435453 134217727 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 8 4 1 0 \\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n536870911 134217728 67108864 33554432 8388608 524288 65536 32768 16384 4096 2048 1024 512 256 128 64 8 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['22\\r\\n536870912 268435456 134217728 33554432 16777216 8388608 1048576 524288 131072 32768 16384 2048 256 128 64 32 16 8 4 2 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n4 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['7\\r\\n256 64 32 16 8 2 0 \\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n262144 16384 4096 1024 128 64 4 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['14\\r\\n33554432 4194304 524288 262144 131072 65536 8192 4096 2048 256 64 32 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n67108864 8388608 4194304 2097152 1048576 524288 262144 131072 8192 4096 1024 128 16 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['18\\r\\n536870912 268435456 134217728 33554432 8388608 4194304 1048576 524288 262144 131072 16384 8192 2048 128 32 16 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n8 2 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n536870912 268435456 134217728 16777216 8388608 2097152 524288 262144 131072 32768 16384 1024 512 256 128 16 0 \\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n64 8 4 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n268435456 134217728 67108864 4096 32 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['17\\r\\n536870912 268435456 67108864 33554432 8388608 4194304 262144 65536 32768 16384 8192 256 128 64 16 2 0 \\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n536864768 268432640 33554176 16777104 262144 131072 65536 1024 512 256 128 16 4 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['16\\r\\n134204416 16775936 1048528 131069 65535 8192 1024 256 128 64 32 8 4 2 1 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n268435456 134217728 16777216 8388608 2097152 32768 8192 2048 1024 512 128 32 16 8 4 2 0 \\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['18\\r\\n244804400 122895984 61695880 15548665 3918592 987568 495776 248888 62725 31489 3984 1004 504 64 32 8 1 0 \\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['18\\r\\n134217708 16777215 2097152 1048576 262144 65536 32768 8192 4096 2048 1024 512 256 32 8 2 1 0 \\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['20\\r\\n268435408 16777215 8388608 4194304 2097152 524288 262144 131072 65536 32768 8192 2048 1024 128 64 16 8 4 1 0 \\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['16\\r\\n701408733 165580141 24157817 5702887 2178309 832040 196418 17711 2584 610 233 55 13 3 1 0 \\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['17\\r\\n134217725 33554432 4194304 262144 32768 16384 4096 2048 1024 512 256 128 64 32 4 2 0 \\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n\n\n\n\nrl.on('line', function (input) {\n    var myArr = input.split(' ').map(item => { return parseFloat(item); });\n    \/\/****************************************** DO IT HERE*\/\n    var A = myArr[0], B = myArr[1];\n    var N = parseInt(myArr[2]);\n    var helper = 0;\n    if(A==0 && B==0) helper = 0;\n    else if (A==0 && B!=0) helper = -2;\n    else helper = B\/A;\n\n    var needMinus = false;\n    if(helper<0 && N%2)\n    {\n        needMinus = true;\n        helper = -helper;\n    }\n    var ans = NthRoot(helper,N);\n    if(ans>0)\n    {\n        ans+=0.0001;\n        ans = Math.trunc(ans*1000);\n        ans \/=1000;\n    }\n\n    var temp = Math.trunc(ans);\n    if(ans == temp)\n        console.log(needMinus? \"-\" + ans : ans.toString());\n    else\n        console.log(\"No solution\");\n        \n        \n\n    rl.close();\n    \/*************************************** *\/\n\n\n})\n\nfunction NthRoot(Base, n) {\n    return Math.pow(Base, 1.0 \/ n);\n}\n\n","tags":["brute force","math"],"lang_cluster":"Javascript","src_uid":"8a9adc116abbd387a6a64dd754436f8a","code_uid":"7ba19f6ba03945702bd0fc5441464652","difficulty":1400,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8a9adc116abbd387a6a64dd754436f8a","hidden_unit_tests":"[{'input': '2 18 2\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['3']}, {'input': '-1 8 3\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['-2']}, {'input': '0 0 10\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['5']}, {'input': '1 16 5\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '0 1 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '3 0 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '1 1000 1\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1000']}, {'input': '7 896 7\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['2']}, {'input': '4 972 1\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['243']}, {'input': '-1 -1 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1']}, {'input': '-1 0 4\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '-7 0 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-5 -5 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1']}, {'input': '-5 -5 9\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1']}, {'input': '-5 -5 6\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['1']}, {'input': '-4 0 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-5 0 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-4 4 9\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['-1']}, {'input': '10 0 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-5 3 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '0 3 6\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '3 6 10\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-3 7 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-526 526 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1']}, {'input': '-373 373 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1']}, {'input': '-141 0 8\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '7 175 1\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['25']}, {'input': '-5 -560 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['112']}, {'input': '-1 -512 10\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-3 -768 8\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '-3 -768 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-3 -768 9\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-3 -768 4\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['4']}, {'input': '4 972 4\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['No solution']}, {'input': '4 972 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '4 972 6\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '4 972 1\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['243']}, {'input': '4 972 2\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '1 1000 1\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1000']}, {'input': '1 961 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['31']}, {'input': '1 1000 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10']}, {'input': '1 625 4\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['5']}, {'input': '4 972 5\\r\\n', 'time': ['30'], 'mem': ['8'], 'output': ['3']}, {'input': '1 729 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '7 896 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '3 768 8\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1 512 9\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1 1000 1\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['1000']}, {'input': '1 961 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['31']}, {'input': '1 1000 3\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['10']}, {'input': '1 625 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5']}, {'input': '4 972 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '1 729 6\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3']}, {'input': '7 896 7\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['2']}, {'input': '3 768 8\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1 512 9\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2']}, {'input': '1 1000 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1000']}, {'input': '1 961 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['31']}, {'input': '1 1000 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10']}, {'input': '1 625 4\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['5']}, {'input': '4 972 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '1 729 6\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3']}, {'input': '7 896 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '3 768 8\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1 512 9\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['2']}, {'input': '1 1 5\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1']}, {'input': '1 1 4\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1']}, {'input': '1 -1 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1']}]","all_passed":0}
{"lang":"Node.js","source_code":"\/\/ author: Oscar Ramos\n\n\/\/\/ Source Code\n\/\/ const input = require('competitive-programming-js').inputReader\n\/\/ const { forn, vector, range } = require('..\/utils\/utils')\n\/\/ \n\/\/ const n = input.readNumber()\n\/\/ \n\/\/ const coords = []\n\/\/ forn(n, () => {\n\/\/   const [x, y] = input.readNumberArray()\n\/\/   coords.push([x, y])\n\/\/ })\n\/\/ \n\/\/ const visited = vector(n, false)\n\/\/ \n\/\/ let ans = -1\n\/\/ \n\/\/ const dfs = i => {\n\/\/   if (!visited[i]) {\n\/\/     visited[i] = true\n\/\/     forn(n, (j => {\n\/\/       if (coords[i][0] === coords[j][0] ||\n\/\/         coords[i][1] === coords[j][1]) {\n\/\/         dfs(j)\n\/\/       }\n\/\/     }))\n\/\/   }\n\/\/ }\n\/\/ \n\/\/ forn(n, i => {\n\/\/   if (!visited[i]) {\n\/\/     ans += 1\n\/\/   }\n\/\/   dfs(i)\n\/\/ })\n\/\/ \n\/\/ console.log(ans)\n\/\/ \n\n!function(n){var t={};function r(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return n[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=n,r.c=t,r.d=function(n,t,e){r.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},r.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},r.t=function(n,t){if(1&t&&(n=r(n)),8&t)return n;if(4&t&&\"object\"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(r.r(e),Object.defineProperty(e,\"default\",{enumerable:!0,value:n}),2&t&&\"string\"!=typeof n)for(var o in n)r.d(e,o,function(t){return n[t]}.bind(null,o));return e},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,\"a\",t),t},r.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r.p=\"\",r(r.s=1)}([function(n,t){n.exports=function(n){return null!=n&&\"object\"==typeof n&&!0===n[\"@@functional\/placeholder\"]}},function(n,t,r){n.exports=r(2)},function(n,t,r){let e,o=0,u={readNumber:function(){return Number(e[o++])},readNumberArray:function(){return e[o++].split(\" \").map(n=>Number(n))}};var c=\"\";process.stdin.resume(),process.stdin.setEncoding(\"utf8\"),process.stdin.on(\"data\",(function(n){c+=n})).on(\"end\",(function(){e=c.trim().split(\"\\n\").map(n=>n.trim());const{forn:n,vector:t,range:o}=r(3),i=u.readNumber(),f=[];n(i,()=>{const[n,t]=u.readNumberArray();f.push([n,t])});const a=t(i,!1);let s=-1;const p=t=>{a[t]||(a[t]=!0,n(i,n=>{f[t][0]!==f[n][0]&&f[t][1]!==f[n][1]||p(n)}))};n(i,n=>{a[n]||(s+=1),p(n)}),console.log(s)}))},function(n,t,r){const e=r(4);n.exports={forn:(n,t)=>e(0,n).map(n=>t(n)),fornm:(n,t,r)=>e(0,n).map(n=>e(0,t).map(t=>r(n,t))),matrix:(n,t,r)=>e(0,n).map(()=>e(0,t).map(()=>r)),vector:(n,t)=>e(0,n).map(()=>t),range:e}},function(n,t,r){var e=r(5),o=r(7),u=e((function(n,t){if(!o(n)||!o(t))throw new TypeError(\"Both arguments to range must be numbers\");for(var r=[],e=n;e<t;)r.push(e),e+=1;return r}));n.exports=u},function(n,t,r){var e=r(6),o=r(0);n.exports=function(n){return function t(r,u){switch(arguments.length){case 0:return t;case 1:return o(r)?t:e((function(t){return n(r,t)}));default:return o(r)&&o(u)?t:o(r)?e((function(t){return n(t,u)})):o(u)?e((function(t){return n(r,t)})):n(r,u)}}}},function(n,t,r){var e=r(0);n.exports=function(n){return function t(r){return 0===arguments.length||e(r)?t:n.apply(this,arguments)}}},function(n,t){n.exports=function(n){return\"[object Number]\"===Object.prototype.toString.call(n)}}]);\n\n\/\/\/ package.json\n\/\/ {\n\/\/   \"name\": \"competitive\",\n\/\/   \"version\": \"1.0.0\",\n\/\/   \"description\": \"\",\n\/\/   \"main\": \"src\/index.js\",\n\/\/   \"scripts\": {\n\/\/     \"convert\": \"cp-convert -s src\/index.js -d output\/converted.js\",\n\/\/     \"bundle\": \"webpack --config .\/webpack.config.js\",\n\/\/     \"test\": \"npm run convert && jest .\/\",\n\/\/     \"production\": \"npm run convert && npm run bundle && node src\/getOutput.js\",\n\/\/     \"start\": \"node src\/index.js\"\n\/\/   },\n\/\/   \"author\": \"Oscar Ramos\",\n\/\/   \"dependencies\": {\n\/\/     \"child-process-promise\": \"^2.2.1\",\n\/\/     \"competitive-programming-js\": \"^1.0.10\",\n\/\/     \"mathball\": \"^0.4.0\",\n\/\/     \"ramda\": \"^0.27.1\"\n\/\/   },\n\/\/   \"devDependencies\": {\n\/\/     \"@types\/jest\": \"^26.0.10\",\n\/\/     \"concat-stream\": \"^2.0.0\",\n\/\/     \"cross-spawn\": \"^7.0.3\",\n\/\/     \"jest\": \"^26.4.2\",\n\/\/     \"jest-expect-message\": \"^1.0.2\",\n\/\/     \"mock-stdin\": \"^1.0.0\",\n\/\/     \"terser-webpack-plugin\": \"^4.1.0\",\n\/\/     \"webpack\": \"^4.44.1\",\n\/\/     \"webpack-cli\": \"^3.3.12\"\n\/\/   },\n\/\/   \"jest\": {\n\/\/     \"setupFilesAfterEnv\": [\"jest-expect-message\"]\n\/\/   }\n\/\/ }\n\/\/ \n","tags":["dsu","dfs and similar","brute force","graphs"],"lang_cluster":"Javascript","src_uid":"cb4dbff31d967c3dab8fe0495eb871dc","code_uid":"c425deecadc2d24c1816096d430a4910","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"cb4dbff31d967c3dab8fe0495eb871dc","hidden_unit_tests":"[{'input': '2\\r\\n2 1\\r\\n1 2\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 1\\r\\n4 1\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '24\\r\\n171 35\\r\\n261 20\\r\\n4 206\\r\\n501 446\\r\\n961 912\\r\\n581 748\\r\\n946 978\\r\\n463 514\\r\\n841 889\\r\\n341 466\\r\\n842 967\\r\\n54 102\\r\\n235 261\\r\\n925 889\\r\\n682 672\\r\\n623 636\\r\\n268 94\\r\\n635 710\\r\\n474 510\\r\\n697 794\\r\\n586 663\\r\\n182 184\\r\\n806 663\\r\\n468 459\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['21\\r\\n']}, {'input': '17\\r\\n660 646\\r\\n440 442\\r\\n689 618\\r\\n441 415\\r\\n922 865\\r\\n950 972\\r\\n312 366\\r\\n203 229\\r\\n873 860\\r\\n219 199\\r\\n344 308\\r\\n169 176\\r\\n961 992\\r\\n153 84\\r\\n201 230\\r\\n987 938\\r\\n834 815\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['16\\r\\n']}, {'input': '11\\r\\n798 845\\r\\n722 911\\r\\n374 270\\r\\n629 537\\r\\n748 856\\r\\n831 885\\r\\n486 641\\r\\n751 829\\r\\n609 492\\r\\n98 27\\r\\n654 663\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['10\\r\\n']}, {'input': '1\\r\\n321 88\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '9\\r\\n811 859\\r\\n656 676\\r\\n76 141\\r\\n945 951\\r\\n497 455\\r\\n18 55\\r\\n335 294\\r\\n267 275\\r\\n656 689\\r\\n', 'time': ['30'], 'mem': ['7908'], 'output': ['7\\r\\n']}, {'input': '7\\r\\n948 946\\r\\n130 130\\r\\n761 758\\r\\n941 938\\r\\n971 971\\r\\n387 385\\r\\n509 510\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['6\\r\\n']}, {'input': '6\\r\\n535 699\\r\\n217 337\\r\\n508 780\\r\\n180 292\\r\\n393 112\\r\\n732 888\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['5\\r\\n']}, {'input': '14\\r\\n25 23\\r\\n499 406\\r\\n193 266\\r\\n823 751\\r\\n219 227\\r\\n101 138\\r\\n978 992\\r\\n43 74\\r\\n997 932\\r\\n237 189\\r\\n634 538\\r\\n774 740\\r\\n842 767\\r\\n742 802\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['13\\r\\n']}, {'input': '12\\r\\n548 506\\r\\n151 198\\r\\n370 380\\r\\n655 694\\r\\n654 690\\r\\n407 370\\r\\n518 497\\r\\n819 827\\r\\n765 751\\r\\n802 771\\r\\n741 752\\r\\n653 662\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['11\\r\\n']}, {'input': '40\\r\\n685 711\\r\\n433 403\\r\\n703 710\\r\\n491 485\\r\\n616 619\\r\\n288 282\\r\\n884 871\\r\\n367 352\\r\\n500 511\\r\\n977 982\\r\\n51 31\\r\\n576 564\\r\\n508 519\\r\\n755 762\\r\\n22 20\\r\\n368 353\\r\\n232 225\\r\\n953 955\\r\\n452 436\\r\\n311 330\\r\\n967 988\\r\\n369 364\\r\\n791 803\\r\\n150 149\\r\\n651 661\\r\\n118 93\\r\\n398 387\\r\\n748 766\\r\\n852 852\\r\\n230 228\\r\\n555 545\\r\\n515 519\\r\\n667 678\\r\\n867 862\\r\\n134 146\\r\\n859 863\\r\\n96 99\\r\\n486 469\\r\\n303 296\\r\\n780 786\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['38\\r\\n']}, {'input': '3\\r\\n175 201\\r\\n907 909\\r\\n388 360\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['2\\r\\n']}, {'input': '7\\r\\n312 298\\r\\n86 78\\r\\n73 97\\r\\n619 594\\r\\n403 451\\r\\n538 528\\r\\n71 86\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['6\\r\\n']}, {'input': '19\\r\\n802 820\\r\\n368 248\\r\\n758 794\\r\\n455 378\\r\\n876 888\\r\\n771 814\\r\\n245 177\\r\\n586 555\\r\\n844 842\\r\\n364 360\\r\\n820 856\\r\\n731 624\\r\\n982 975\\r\\n825 856\\r\\n122 121\\r\\n862 896\\r\\n42 4\\r\\n792 841\\r\\n828 820\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['16\\r\\n']}, {'input': '32\\r\\n643 877\\r\\n842 614\\r\\n387 176\\r\\n99 338\\r\\n894 798\\r\\n652 728\\r\\n611 648\\r\\n622 694\\r\\n579 781\\r\\n243 46\\r\\n322 305\\r\\n198 438\\r\\n708 579\\r\\n246 325\\r\\n536 459\\r\\n874 593\\r\\n120 277\\r\\n989 907\\r\\n223 110\\r\\n35 130\\r\\n761 692\\r\\n690 661\\r\\n518 766\\r\\n226 93\\r\\n678 597\\r\\n725 617\\r\\n661 574\\r\\n775 496\\r\\n56 416\\r\\n14 189\\r\\n358 359\\r\\n898 901\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['31\\r\\n']}, {'input': '32\\r\\n325 327\\r\\n20 22\\r\\n72 74\\r\\n935 933\\r\\n664 663\\r\\n726 729\\r\\n785 784\\r\\n170 171\\r\\n315 314\\r\\n577 580\\r\\n984 987\\r\\n313 317\\r\\n434 435\\r\\n962 961\\r\\n55 54\\r\\n46 44\\r\\n743 742\\r\\n434 433\\r\\n617 612\\r\\n332 332\\r\\n883 886\\r\\n940 936\\r\\n793 792\\r\\n645 644\\r\\n611 607\\r\\n418 418\\r\\n465 465\\r\\n219 218\\r\\n167 164\\r\\n56 54\\r\\n403 405\\r\\n210 210\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['29\\r\\n']}, {'input': '32\\r\\n652 712\\r\\n260 241\\r\\n27 154\\r\\n188 16\\r\\n521 351\\r\\n518 356\\r\\n452 540\\r\\n790 827\\r\\n339 396\\r\\n336 551\\r\\n897 930\\r\\n828 627\\r\\n27 168\\r\\n180 113\\r\\n134 67\\r\\n794 671\\r\\n812 711\\r\\n100 241\\r\\n686 813\\r\\n138 289\\r\\n384 506\\r\\n884 932\\r\\n913 959\\r\\n470 508\\r\\n730 734\\r\\n373 478\\r\\n788 862\\r\\n392 426\\r\\n148 68\\r\\n113 49\\r\\n713 852\\r\\n924 894\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['29\\r\\n']}, {'input': '14\\r\\n685 808\\r\\n542 677\\r\\n712 747\\r\\n832 852\\r\\n187 410\\r\\n399 338\\r\\n626 556\\r\\n530 635\\r\\n267 145\\r\\n215 209\\r\\n559 684\\r\\n944 949\\r\\n753 596\\r\\n601 823\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['13\\r\\n']}, {'input': '5\\r\\n175 158\\r\\n16 2\\r\\n397 381\\r\\n668 686\\r\\n957 945\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['4\\r\\n']}, {'input': '5\\r\\n312 284\\r\\n490 509\\r\\n730 747\\r\\n504 497\\r\\n782 793\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['4\\r\\n']}, {'input': '2\\r\\n802 903\\r\\n476 348\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['1\\r\\n']}, {'input': '4\\r\\n325 343\\r\\n425 442\\r\\n785 798\\r\\n275 270\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['3\\r\\n']}, {'input': '28\\r\\n462 483\\r\\n411 401\\r\\n118 94\\r\\n111 127\\r\\n5 6\\r\\n70 52\\r\\n893 910\\r\\n73 63\\r\\n818 818\\r\\n182 201\\r\\n642 633\\r\\n900 886\\r\\n893 886\\r\\n684 700\\r\\n157 173\\r\\n953 953\\r\\n671 660\\r\\n224 225\\r\\n832 801\\r\\n152 157\\r\\n601 585\\r\\n115 101\\r\\n739 722\\r\\n611 606\\r\\n659 642\\r\\n461 469\\r\\n702 689\\r\\n649 653\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['25\\r\\n']}, {'input': '36\\r\\n952 981\\r\\n885 900\\r\\n803 790\\r\\n107 129\\r\\n670 654\\r\\n143 132\\r\\n66 58\\r\\n813 819\\r\\n849 837\\r\\n165 198\\r\\n247 228\\r\\n15 39\\r\\n619 618\\r\\n105 138\\r\\n868 855\\r\\n965 957\\r\\n293 298\\r\\n613 599\\r\\n227 212\\r\\n745 754\\r\\n723 704\\r\\n877 858\\r\\n503 487\\r\\n678 697\\r\\n592 595\\r\\n155 135\\r\\n962 982\\r\\n93 89\\r\\n660 673\\r\\n225 212\\r\\n967 987\\r\\n690 680\\r\\n804 813\\r\\n489 518\\r\\n240 221\\r\\n111 124\\r\\n', 'time': ['30'], 'mem': ['7916'], 'output': ['34\\r\\n']}, {'input': '30\\r\\n89 3\\r\\n167 156\\r\\n784 849\\r\\n943 937\\r\\n144 95\\r\\n24 159\\r\\n80 120\\r\\n657 683\\r\\n585 596\\r\\n43 147\\r\\n909 964\\r\\n131 84\\r\\n345 389\\r\\n333 321\\r\\n91 126\\r\\n274 325\\r\\n859 723\\r\\n866 922\\r\\n622 595\\r\\n690 752\\r\\n902 944\\r\\n127 170\\r\\n426 383\\r\\n905 925\\r\\n172 284\\r\\n793 810\\r\\n414 510\\r\\n890 884\\r\\n123 24\\r\\n267 255\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['29\\r\\n']}, {'input': '5\\r\\n664 666\\r\\n951 941\\r\\n739 742\\r\\n844 842\\r\\n2 2\\r\\n', 'time': ['30'], 'mem': ['7916'], 'output': ['4\\r\\n']}, {'input': '3\\r\\n939 867\\r\\n411 427\\r\\n757 708\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['2\\r\\n']}, {'input': '36\\r\\n429 424\\r\\n885 972\\r\\n442 386\\r\\n512 511\\r\\n751 759\\r\\n4 115\\r\\n461 497\\r\\n496 408\\r\\n8 23\\r\\n542 562\\r\\n296 331\\r\\n448 492\\r\\n412 395\\r\\n109 166\\r\\n622 640\\r\\n379 355\\r\\n251 262\\r\\n564 586\\r\\n66 115\\r\\n275 291\\r\\n666 611\\r\\n629 534\\r\\n510 567\\r\\n635 666\\r\\n738 803\\r\\n420 369\\r\\n92 17\\r\\n101 144\\r\\n141 92\\r\\n258 258\\r\\n184 235\\r\\n492 456\\r\\n311 210\\r\\n394 357\\r\\n531 512\\r\\n634 636\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['34\\r\\n']}, {'input': '29\\r\\n462 519\\r\\n871 825\\r\\n127 335\\r\\n156 93\\r\\n576 612\\r\\n885 830\\r\\n634 779\\r\\n340 105\\r\\n744 795\\r\\n716 474\\r\\n93 139\\r\\n563 805\\r\\n137 276\\r\\n177 101\\r\\n333 14\\r\\n391 437\\r\\n873 588\\r\\n817 518\\r\\n460 597\\r\\n572 670\\r\\n140 303\\r\\n392 441\\r\\n273 120\\r\\n862 578\\r\\n670 639\\r\\n410 161\\r\\n544 577\\r\\n193 116\\r\\n252 195\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['28\\r\\n']}, {'input': '23\\r\\n952 907\\r\\n345 356\\r\\n812 807\\r\\n344 328\\r\\n242 268\\r\\n254 280\\r\\n1000 990\\r\\n80 78\\r\\n424 396\\r\\n595 608\\r\\n755 813\\r\\n383 380\\r\\n55 56\\r\\n598 633\\r\\n203 211\\r\\n508 476\\r\\n600 593\\r\\n206 192\\r\\n855 882\\r\\n517 462\\r\\n967 994\\r\\n642 657\\r\\n493 488\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['22\\r\\n']}, {'input': '10\\r\\n579 816\\r\\n806 590\\r\\n830 787\\r\\n120 278\\r\\n677 800\\r\\n16 67\\r\\n188 251\\r\\n559 560\\r\\n87 67\\r\\n104 235\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['8\\r\\n']}, {'input': '23\\r\\n420 424\\r\\n280 303\\r\\n515 511\\r\\n956 948\\r\\n799 803\\r\\n441 455\\r\\n362 369\\r\\n299 289\\r\\n823 813\\r\\n982 967\\r\\n876 878\\r\\n185 157\\r\\n529 551\\r\\n964 989\\r\\n655 656\\r\\n1 21\\r\\n114 112\\r\\n45 56\\r\\n935 937\\r\\n1000 997\\r\\n934 942\\r\\n360 366\\r\\n648 621\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['22\\r\\n']}, {'input': '23\\r\\n102 84\\r\\n562 608\\r\\n200 127\\r\\n952 999\\r\\n465 496\\r\\n322 367\\r\\n728 690\\r\\n143 147\\r\\n855 867\\r\\n861 866\\r\\n26 59\\r\\n300 273\\r\\n255 351\\r\\n192 246\\r\\n70 111\\r\\n365 277\\r\\n32 104\\r\\n298 319\\r\\n330 354\\r\\n241 141\\r\\n56 125\\r\\n315 298\\r\\n412 461\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['22\\r\\n']}, {'input': '7\\r\\n429 506\\r\\n346 307\\r\\n99 171\\r\\n853 916\\r\\n322 263\\r\\n115 157\\r\\n906 924\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['6\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 1\\r\\n2 2\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '5\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n3 1\\r\\n3 3\\r\\n', 'time': ['30'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '6\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n3 1\\r\\n3 2\\r\\n3 3\\r\\n', 'time': ['30'], 'mem': ['7916'], 'output': ['0\\r\\n']}, {'input': '20\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n3 9\\r\\n4 4\\r\\n5 2\\r\\n5 5\\r\\n5 7\\r\\n5 8\\r\\n6 2\\r\\n6 6\\r\\n6 9\\r\\n7 7\\r\\n8 8\\r\\n9 4\\r\\n9 7\\r\\n9 9\\r\\n10 2\\r\\n10 9\\r\\n10 10\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['1\\r\\n']}, {'input': '21\\r\\n1 1\\r\\n1 9\\r\\n2 1\\r\\n2 2\\r\\n2 5\\r\\n2 6\\r\\n2 9\\r\\n3 3\\r\\n3 8\\r\\n4 1\\r\\n4 4\\r\\n5 5\\r\\n5 8\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n9 9\\r\\n10 4\\r\\n10 10\\r\\n11 5\\r\\n11 11\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['1\\r\\n']}, {'input': '22\\r\\n1 1\\r\\n1 3\\r\\n1 4\\r\\n1 8\\r\\n1 9\\r\\n1 11\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n4 5\\r\\n5 5\\r\\n6 6\\r\\n6 8\\r\\n7 7\\r\\n8 3\\r\\n8 4\\r\\n8 8\\r\\n9 9\\r\\n10 10\\r\\n11 4\\r\\n11 9\\r\\n11 11\\r\\n', 'time': ['0'], 'mem': ['7904'], 'output': ['3\\r\\n']}, {'input': '50\\r\\n1 1\\r\\n2 2\\r\\n2 9\\r\\n3 3\\r\\n4 4\\r\\n4 9\\r\\n4 16\\r\\n4 24\\r\\n5 5\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n8 9\\r\\n8 20\\r\\n9 9\\r\\n10 10\\r\\n11 11\\r\\n12 12\\r\\n13 13\\r\\n14 7\\r\\n14 14\\r\\n14 16\\r\\n14 25\\r\\n15 4\\r\\n15 6\\r\\n15 15\\r\\n15 22\\r\\n16 6\\r\\n16 16\\r\\n17 17\\r\\n18 18\\r\\n19 6\\r\\n19 19\\r\\n20 20\\r\\n21 21\\r\\n22 6\\r\\n22 22\\r\\n23 23\\r\\n24 6\\r\\n24 7\\r\\n24 8\\r\\n24 9\\r\\n24 24\\r\\n25 1\\r\\n25 3\\r\\n25 5\\r\\n25 7\\r\\n25 23\\r\\n25 24\\r\\n25 25\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['7\\r\\n']}, {'input': '55\\r\\n1 1\\r\\n1 14\\r\\n2 2\\r\\n2 19\\r\\n3 1\\r\\n3 3\\r\\n3 8\\r\\n3 14\\r\\n3 23\\r\\n4 1\\r\\n4 4\\r\\n5 5\\r\\n5 8\\r\\n5 15\\r\\n6 2\\r\\n6 3\\r\\n6 4\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n8 21\\r\\n9 9\\r\\n10 1\\r\\n10 10\\r\\n11 9\\r\\n11 11\\r\\n12 12\\r\\n13 13\\r\\n14 14\\r\\n15 15\\r\\n15 24\\r\\n16 5\\r\\n16 16\\r\\n17 5\\r\\n17 10\\r\\n17 17\\r\\n17 18\\r\\n17 22\\r\\n17 27\\r\\n18 18\\r\\n19 19\\r\\n20 20\\r\\n21 20\\r\\n21 21\\r\\n22 22\\r\\n23 23\\r\\n24 14\\r\\n24 24\\r\\n25 25\\r\\n26 8\\r\\n26 11\\r\\n26 26\\r\\n27 3\\r\\n27 27\\r\\n28 28\\r\\n', 'time': ['30'], 'mem': ['7916'], 'output': ['5\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '6\\r\\n4 4\\r\\n3 4\\r\\n5 4\\r\\n4 5\\r\\n4 3\\r\\n3 1\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 2\\r\\n1 2\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '8\\r\\n1 3\\r\\n1 1\\r\\n4 1\\r\\n2 2\\r\\n2 5\\r\\n5 9\\r\\n5 1\\r\\n5 4\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 1\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 5\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n9 9\\r\\n100 100\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['6\\r\\n']}, {'input': '7\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '6\\r\\n1 1\\r\\n2 1\\r\\n2 2\\r\\n2 4\\r\\n4 3\\r\\n2 3\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4\\r\\n3 1\\r\\n2 1\\r\\n2 2\\r\\n1 2\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '6\\r\\n1 1\\r\\n2 2\\r\\n2 1\\r\\n2 4\\r\\n4 3\\r\\n2 3\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n', 'time': ['0'], 'mem': ['7904'], 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n2 2\\r\\n1 2\\r\\n2 1\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 3\\r\\n2 1\\r\\n3 2\\r\\n3 1\\r\\n', 'time': ['30'], 'mem': ['7908'], 'output': ['1\\r\\n']}, {'input': '7\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n3 3\\r\\n3 4\\r\\n4 4\\r\\n1 4\\r\\n', 'time': ['0'], 'mem': ['7916'], 'output': ['0\\r\\n']}, {'input': '21\\r\\n12 12\\r\\n13 12\\r\\n12 11\\r\\n13 13\\r\\n10 10\\r\\n11 10\\r\\n11 11\\r\\n501 500\\r\\n501 501\\r\\n503 502\\r\\n500 500\\r\\n503 503\\r\\n502 501\\r\\n502 502\\r\\n700 700\\r\\n702 702\\r\\n703 702\\r\\n701 701\\r\\n702 701\\r\\n703 703\\r\\n701 700\\r\\n', 'time': ['0'], 'mem': ['7904'], 'output': ['2\\r\\n']}, {'input': '6\\r\\n1 11\\r\\n6 8\\r\\n11 10\\r\\n1 10\\r\\n11 11\\r\\n6 9\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['1\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n2 2\\r\\n3 2\\r\\n3 1\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n3 4\\r\\n3 2\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4\\r\\n5 5\\r\\n5 4\\r\\n6 3\\r\\n6 4\\r\\n', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 2\\r\\n2 1\\r\\n', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}]","all_passed":1}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n    inputString = inputString.trim().split('\\n').map(string => {\n        return string.trim();\n    });\n    \n    main();\n});\n\nfunction readline() {\n    return inputString[currentLine++];\n}\n\nfunction pi(a) {\n    return parseInt(a);\n}\n\nfunction ti(a){\n    for(let i = 0; i < a.length; i++)\n        a[i] = pi(a[i]);\n\n    return a;\n}\n\nfunction dsu(n){\n    this.parent = new Array(n);\n    for(let i = 0; i < n; i++)\n        this.parent[i] = i;\n\n    this.find = (x) => {\n        if(this.parent[x] === x)\n            return this.parent[x];\n\n        return this.find(this.parent[x]);\n    }\n\n    this.union = (x,y) => {\n        this.parent[this.find(x)] = this.find(y);\n    }\n}\n\nfunction main(){\n    let n = pi(readline());\n    let mapX = new Array(1005);\n    let mapY = new Array(1005);\n    mapX.fill(-1);\n    mapY.fill(-1);\n    let uf = new dsu(n);\n\n    for(let i = 0; i < n; i++){\n        let [x,y] = ti(readline().split(' '));\n        if(mapX[x] !== -1){\n            uf.union(mapX[x], i);\n        }else{\n            mapX[x] = i;\n        }\n\n        if(mapY[y] !== -1){\n            uf.union(mapY[y], i);\n        }else{\n            mapY[y] = i;\n        }\n    }\n\n    let res = 0;\n    for(let i = 0; i < n; i++)\n        if(uf.parent[i] === i)\n            res += 1;\n            \n    console.log(res-1);\n}","tags":["dsu","dfs and similar","brute force","graphs"],"lang_cluster":"Javascript","src_uid":"cb4dbff31d967c3dab8fe0495eb871dc","code_uid":"8d7c56c3b1403755d59488931e192f1b","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"cb4dbff31d967c3dab8fe0495eb871dc","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['7916'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7916'], 'output': ['21\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7908'], 'output': ['16\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7908'], 'output': ['10\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['7908'], 'output': ['7\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['7916'], 'output': ['6\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['7912'], 'output': ['5\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7912'], 'output': ['13\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7908'], 'output': ['11\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7908'], 'output': ['38\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['2\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['7908'], 'output': ['6\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7912'], 'output': ['16\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['31\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['29\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7908'], 'output': ['29\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7908'], 'output': ['13\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['7912'], 'output': ['4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['7912'], 'output': ['4\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7908'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7916'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['25\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['7916'], 'output': ['34\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['29\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['7916'], 'output': ['4\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['2\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['34\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7908'], 'output': ['28\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['22\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7916'], 'output': ['8\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['22\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['22\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['7912'], 'output': ['6\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['7916'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7912'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7904'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['7908'], 'output': ['7\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['7916'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['7908'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['7916'], 'output': ['6\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7904'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7916'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['7908'], 'output': ['1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['7916'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['7904'], 'output': ['2\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['7912'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['7912'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['7908'], 'output': ['0\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict'\n\nconst {EOL} = require('os')\n\n\nlet ipt = ''\nprocess.stdin.on('data', s => ipt += s)\nprocess.stdin.on('end', () => {\n  const ils = ipt.split(EOL).slice(0, -1)\n  let [n, k] = ils[0].split(' ').map(v => parseInt(v))\n  k = 1 - k \/ 100\n  const A = ils[1].split(' ').map(v => parseInt(v))\n\n  let t = A.reduce((s, v) => s + v, 0) \/ A.length\n  let s = t\n  let b\n  do {\n    if (b > 0) {\n      t += s\n    } else if (b < 0) {\n      t -= s\n    }\n    b = 0\n    for (let i = 0; i < A.length; i++) {\n      if (A[i] > t) b += (A[i] - t) * k\n      else if (A[i] < t) b -= t - A[i]\n    }\n    s \/= 2\n  } while (Math.abs(b) > 0.000001)\n\n  console.log(t)\n})","tags":["binary search"],"lang_cluster":"Javascript","src_uid":"9fd09b05d0e49236dca45615e684ad85","code_uid":"1c785fae65fabc0f9d40909171791419","difficulty":1600,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9fd09b05d0e49236dca45615e684ad85","hidden_unit_tests":"[{'input': '2\\r\\n1 2 1 2 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 4\\r\\n']}, {'input': '3\\r\\n1 2 1 2 3\\r\\n1 3 0 0 0\\r\\n2 3 3 4 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '4\\r\\n1 2 0 2 1\\r\\n2 3 0 2 1\\r\\n1 3 0 2 6\\r\\n1 4 0 0 1\\r\\n2 4 0 0 0\\r\\n3 4 2 3 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 15\\r\\n']}, {'input': '3\\r\\n1 2 0 2 1\\r\\n1 3 1 2 1\\r\\n2 3 1 2 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 6\\r\\n']}, {'input': '4\\r\\n3 4 2 2 6\\r\\n2 3 1 1 6\\r\\n1 2 1 3 1\\r\\n1 4 2 3 4\\r\\n2 4 0 3 2\\r\\n1 3 1 2 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['4 33\\r\\n']}, {'input': '6\\r\\n1 2 5 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 5 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 5 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 0\\r\\n3 6 5 5 0\\r\\n4 5 0 5 0\\r\\n4 6 5 5 0\\r\\n5 6 5 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['25 225\\r\\n']}, {'input': '4\\r\\n2 3 1 2 3\\r\\n2 4 0 2 0\\r\\n1 3 0 1 6\\r\\n1 4 0 0 5\\r\\n3 4 0 2 2\\r\\n1 2 0 1 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 11\\r\\n']}, {'input': '2\\r\\n1 2 0 0 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 0 2\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 0 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 1 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 1 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 1 2 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 1\\r\\n']}, {'input': '2\\r\\n1 2 0 3 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 2 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 2 2 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 9\\r\\n']}, {'input': '2\\r\\n1 2 1 3 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 2\\r\\n']}, {'input': '2\\r\\n1 2 0 5 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 3 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '3\\r\\n1 2 0 0 3\\r\\n2 3 0 0 2\\r\\n1 3 0 0 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '3\\r\\n1 2 0 0 1\\r\\n1 3 0 0 3\\r\\n2 3 0 0 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '3\\r\\n1 2 0 1 0\\r\\n2 3 0 0 6\\r\\n1 3 0 0 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '3\\r\\n1 3 0 1 2\\r\\n1 2 0 0 5\\r\\n2 3 1 1 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '3\\r\\n1 2 0 1 3\\r\\n1 3 1 2 5\\r\\n2 3 1 2 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 15\\r\\n']}, {'input': '3\\r\\n1 2 1 2 6\\r\\n1 3 0 2 4\\r\\n2 3 0 2 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 8\\r\\n']}, {'input': '3\\r\\n2 3 0 2 5\\r\\n1 3 1 2 0\\r\\n1 2 1 1 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 10\\r\\n']}, {'input': '3\\r\\n2 3 1 1 5\\r\\n1 2 0 1 4\\r\\n1 3 1 2 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 14\\r\\n']}, {'input': '3\\r\\n1 2 0 4 6\\r\\n1 3 0 2 2\\r\\n2 3 1 4 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 9\\r\\n']}, {'input': '3\\r\\n2 3 1 2 4\\r\\n1 2 2 2 5\\r\\n1 3 0 3 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 17\\r\\n']}, {'input': '3\\r\\n1 2 0 5 3\\r\\n1 3 2 4 3\\r\\n2 3 2 3 4\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['4 22\\r\\n']}, {'input': '3\\r\\n2 3 4 5 3\\r\\n1 3 0 5 2\\r\\n1 2 1 3 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '4\\r\\n1 3 0 0 4\\r\\n2 4 0 0 5\\r\\n3 4 0 0 2\\r\\n2 3 0 0 0\\r\\n1 2 0 0 1\\r\\n1 4 0 0 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '4\\r\\n1 4 0 0 0\\r\\n1 3 0 0 0\\r\\n2 4 0 0 6\\r\\n3 4 0 0 0\\r\\n1 2 0 0 1\\r\\n2 3 0 0 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '4\\r\\n2 4 1 1 5\\r\\n1 3 0 1 0\\r\\n1 4 0 0 3\\r\\n3 4 0 0 0\\r\\n1 2 1 1 1\\r\\n2 3 1 1 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '4\\r\\n2 3 0 1 6\\r\\n1 4 1 1 5\\r\\n1 2 0 1 4\\r\\n2 4 0 0 0\\r\\n1 3 0 0 0\\r\\n3 4 0 1 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 6\\r\\n']}, {'input': '4\\r\\n2 3 0 2 3\\r\\n2 4 1 2 1\\r\\n1 2 0 1 1\\r\\n1 4 2 2 3\\r\\n1 3 0 2 3\\r\\n3 4 0 2 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3 11\\r\\n']}, {'input': '4\\r\\n1 4 1 2 5\\r\\n3 4 0 1 6\\r\\n2 4 1 2 4\\r\\n2 3 0 2 4\\r\\n1 2 0 2 2\\r\\n1 3 0 2 6\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['2 14\\r\\n']}, {'input': '4\\r\\n1 3 0 2 1\\r\\n3 4 3 3 4\\r\\n2 4 0 3 6\\r\\n1 4 1 1 0\\r\\n1 2 1 1 4\\r\\n2 3 0 1 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['4 31\\r\\n']}, {'input': '4\\r\\n3 4 1 2 5\\r\\n1 3 2 3 6\\r\\n2 3 1 3 0\\r\\n1 4 0 1 0\\r\\n1 2 0 1 1\\r\\n2 4 0 1 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '4\\r\\n3 4 2 4 5\\r\\n2 3 0 0 1\\r\\n1 2 1 4 1\\r\\n1 4 2 4 5\\r\\n2 4 4 4 5\\r\\n1 3 0 4 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['8 65\\r\\n']}, {'input': '4\\r\\n1 2 0 2 3\\r\\n1 4 1 2 6\\r\\n3 4 2 4 4\\r\\n2 4 4 4 2\\r\\n1 3 2 4 3\\r\\n2 3 0 2 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '4\\r\\n2 4 2 4 6\\r\\n2 3 0 2 2\\r\\n1 4 1 2 4\\r\\n1 2 3 5 3\\r\\n1 3 1 4 5\\r\\n3 4 3 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['6 55\\r\\n']}, {'input': '4\\r\\n2 4 2 4 2\\r\\n2 3 2 2 4\\r\\n1 3 2 5 6\\r\\n1 2 2 2 1\\r\\n1 4 1 5 6\\r\\n3 4 2 2 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n1 5 0 0 3\\r\\n3 5 0 0 2\\r\\n1 3 0 0 4\\r\\n3 4 0 0 0\\r\\n2 3 0 0 6\\r\\n1 4 0 0 1\\r\\n4 5 0 0 1\\r\\n1 2 0 0 3\\r\\n2 5 0 0 6\\r\\n2 4 0 0 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '5\\r\\n4 5 0 0 4\\r\\n2 5 0 0 3\\r\\n1 5 0 0 4\\r\\n1 2 0 0 3\\r\\n1 4 0 0 3\\r\\n1 3 0 0 4\\r\\n2 4 0 0 5\\r\\n3 5 0 0 0\\r\\n2 3 0 0 0\\r\\n3 4 0 0 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '5\\r\\n1 3 0 1 0\\r\\n1 5 0 1 1\\r\\n3 4 1 1 2\\r\\n4 5 0 0 1\\r\\n3 5 0 1 2\\r\\n2 4 0 1 4\\r\\n1 4 0 0 6\\r\\n2 3 1 1 4\\r\\n1 2 0 0 5\\r\\n2 5 0 1 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n3 5 1 1 0\\r\\n2 3 1 1 1\\r\\n2 4 0 1 1\\r\\n1 4 1 1 1\\r\\n1 5 0 0 4\\r\\n1 3 0 1 5\\r\\n4 5 0 1 3\\r\\n2 5 1 1 1\\r\\n3 4 0 1 6\\r\\n1 2 0 1 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n2 3 1 2 3\\r\\n1 5 0 1 5\\r\\n1 2 0 1 1\\r\\n2 5 2 2 5\\r\\n1 3 0 1 1\\r\\n3 5 0 2 5\\r\\n4 5 0 1 2\\r\\n1 4 0 1 3\\r\\n3 4 2 2 0\\r\\n2 4 0 2 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n4 5 0 1 0\\r\\n2 4 2 2 3\\r\\n3 5 0 1 6\\r\\n1 3 0 1 6\\r\\n1 4 1 1 5\\r\\n1 5 0 0 0\\r\\n2 3 0 2 6\\r\\n2 5 2 2 3\\r\\n1 2 1 1 6\\r\\n3 4 0 1 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n1 4 0 1 5\\r\\n2 5 1 1 6\\r\\n1 3 1 3 3\\r\\n3 5 0 1 5\\r\\n1 5 2 3 3\\r\\n2 3 0 3 2\\r\\n2 4 2 2 1\\r\\n1 2 3 3 5\\r\\n3 4 1 3 4\\r\\n4 5 2 3 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['6 52\\r\\n']}, {'input': '5\\r\\n2 4 0 2 1\\r\\n3 4 1 3 6\\r\\n1 2 2 3 0\\r\\n2 5 0 3 5\\r\\n4 5 0 3 2\\r\\n1 5 1 3 5\\r\\n1 4 2 2 5\\r\\n1 3 2 3 6\\r\\n2 3 0 1 2\\r\\n3 5 0 1 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['7 57\\r\\n']}, {'input': '5\\r\\n4 5 1 3 2\\r\\n1 5 2 3 1\\r\\n1 3 0 4 0\\r\\n2 3 3 3 0\\r\\n3 5 3 3 2\\r\\n1 4 3 4 2\\r\\n2 4 1 3 2\\r\\n2 5 0 3 4\\r\\n1 2 3 4 0\\r\\n3 4 0 1 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n2 5 0 3 4\\r\\n2 4 4 4 5\\r\\n1 3 3 4 1\\r\\n2 3 1 4 3\\r\\n1 2 1 3 1\\r\\n1 4 0 0 5\\r\\n4 5 1 4 6\\r\\n3 4 0 4 4\\r\\n3 5 0 3 0\\r\\n1 5 1 3 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '5\\r\\n1 3 3 5 6\\r\\n1 5 0 5 0\\r\\n3 4 0 0 2\\r\\n1 2 2 4 0\\r\\n3 5 3 5 4\\r\\n4 5 2 3 2\\r\\n2 5 1 3 0\\r\\n1 4 0 4 6\\r\\n2 4 3 4 0\\r\\n2 3 0 2 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['7 65\\r\\n']}, {'input': '5\\r\\n3 4 1 5 5\\r\\n1 2 4 4 3\\r\\n2 4 0 4 5\\r\\n2 3 5 5 4\\r\\n4 5 4 5 5\\r\\n1 5 4 5 5\\r\\n1 3 0 1 1\\r\\n1 4 2 3 1\\r\\n2 5 2 5 2\\r\\n3 5 1 2 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n2 5 0 0 3\\r\\n1 2 0 0 0\\r\\n3 6 0 0 3\\r\\n2 3 0 0 1\\r\\n1 5 0 0 6\\r\\n3 4 0 0 3\\r\\n1 4 0 0 4\\r\\n1 3 0 0 0\\r\\n2 6 0 0 6\\r\\n1 6 0 0 1\\r\\n4 6 0 0 2\\r\\n3 5 0 0 6\\r\\n4 5 0 0 1\\r\\n5 6 0 0 2\\r\\n2 4 0 0 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '6\\r\\n3 5 0 0 1\\r\\n3 6 0 0 2\\r\\n1 5 0 0 1\\r\\n2 3 0 0 3\\r\\n4 5 0 0 6\\r\\n1 6 0 0 2\\r\\n1 3 0 0 5\\r\\n4 6 0 0 5\\r\\n5 6 0 0 2\\r\\n2 5 0 0 3\\r\\n3 4 0 0 0\\r\\n2 6 0 0 0\\r\\n1 4 0 0 4\\r\\n2 4 0 0 6\\r\\n1 2 0 0 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '6\\r\\n1 3 0 1 1\\r\\n2 5 0 0 5\\r\\n1 6 0 0 1\\r\\n4 5 0 1 0\\r\\n2 6 0 1 5\\r\\n2 3 0 1 2\\r\\n5 6 1 1 3\\r\\n1 4 0 1 2\\r\\n1 5 0 1 3\\r\\n1 2 0 0 5\\r\\n4 6 0 0 5\\r\\n3 4 0 1 5\\r\\n2 4 0 1 1\\r\\n3 5 0 1 5\\r\\n3 6 0 0 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 13\\r\\n']}, {'input': '6\\r\\n2 4 0 1 3\\r\\n3 6 1 1 0\\r\\n1 6 0 1 6\\r\\n4 6 0 1 4\\r\\n1 3 1 1 1\\r\\n2 6 0 1 4\\r\\n3 5 0 0 3\\r\\n3 4 0 1 0\\r\\n1 5 1 1 1\\r\\n2 5 1 1 5\\r\\n4 5 0 0 5\\r\\n1 4 0 1 6\\r\\n2 3 0 1 4\\r\\n5 6 1 1 1\\r\\n1 2 0 1 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n5 6 2 2 6\\r\\n2 5 1 2 2\\r\\n1 4 0 1 3\\r\\n1 3 2 2 5\\r\\n3 5 1 2 6\\r\\n1 6 0 1 5\\r\\n1 5 0 0 5\\r\\n4 5 0 1 5\\r\\n2 4 0 0 5\\r\\n2 6 0 1 4\\r\\n3 4 1 1 5\\r\\n4 6 0 2 3\\r\\n3 6 0 0 6\\r\\n2 3 0 0 4\\r\\n1 2 0 1 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3 41\\r\\n']}, {'input': '6\\r\\n5 6 1 1 6\\r\\n1 4 1 1 1\\r\\n1 2 0 0 4\\r\\n2 6 1 2 3\\r\\n2 3 0 0 4\\r\\n1 5 0 0 5\\r\\n2 5 0 1 4\\r\\n2 4 0 2 2\\r\\n3 6 0 2 3\\r\\n4 6 0 2 4\\r\\n1 3 0 2 2\\r\\n1 6 2 2 0\\r\\n3 4 1 2 3\\r\\n4 5 0 1 6\\r\\n3 5 1 1 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n2 6 0 3 3\\r\\n5 6 0 2 0\\r\\n1 4 0 2 0\\r\\n4 5 1 3 2\\r\\n1 2 0 1 2\\r\\n1 6 0 3 6\\r\\n1 3 0 3 5\\r\\n1 5 1 3 0\\r\\n2 4 3 3 5\\r\\n3 5 0 1 3\\r\\n4 6 1 2 4\\r\\n3 4 1 1 2\\r\\n3 6 0 3 4\\r\\n2 5 0 1 5\\r\\n2 3 1 1 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n2 4 1 2 3\\r\\n1 5 1 3 0\\r\\n4 6 1 3 3\\r\\n1 4 2 2 0\\r\\n4 5 2 2 2\\r\\n3 6 0 2 2\\r\\n2 5 1 2 4\\r\\n3 5 2 3 5\\r\\n1 2 0 2 2\\r\\n5 6 1 2 5\\r\\n2 6 3 3 1\\r\\n1 3 1 2 3\\r\\n1 6 2 2 6\\r\\n3 4 1 2 2\\r\\n2 3 0 3 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n3 6 0 1 0\\r\\n4 6 2 4 3\\r\\n2 3 2 3 1\\r\\n1 4 4 4 3\\r\\n1 2 2 3 6\\r\\n5 6 0 2 5\\r\\n1 6 2 4 3\\r\\n1 5 0 4 3\\r\\n4 5 0 4 2\\r\\n2 4 3 3 6\\r\\n3 4 3 4 1\\r\\n3 5 0 4 1\\r\\n2 6 2 4 0\\r\\n2 5 1 3 1\\r\\n1 3 0 2 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n2 4 0 1 1\\r\\n2 3 0 4 4\\r\\n1 6 1 4 2\\r\\n4 5 3 3 3\\r\\n3 4 1 2 0\\r\\n1 3 0 2 5\\r\\n1 2 3 4 1\\r\\n4 6 4 4 2\\r\\n2 5 0 2 2\\r\\n3 6 2 3 2\\r\\n5 6 0 3 1\\r\\n1 5 1 4 2\\r\\n3 5 1 4 5\\r\\n1 4 0 1 6\\r\\n2 6 1 3 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n4 6 4 5 2\\r\\n2 4 1 2 4\\r\\n5 6 0 1 0\\r\\n3 5 0 1 2\\r\\n3 4 1 5 2\\r\\n2 6 0 4 0\\r\\n1 2 1 2 4\\r\\n1 4 0 3 6\\r\\n1 3 1 3 4\\r\\n2 5 3 4 4\\r\\n1 6 0 1 6\\r\\n2 3 0 4 1\\r\\n3 6 1 2 4\\r\\n4 5 1 3 2\\r\\n1 5 0 4 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n1 3 3 5 5\\r\\n5 6 0 0 5\\r\\n1 6 1 1 6\\r\\n3 5 4 5 6\\r\\n3 6 0 0 4\\r\\n4 6 5 5 0\\r\\n2 6 2 3 1\\r\\n1 5 0 4 5\\r\\n4 5 3 3 2\\r\\n1 2 1 5 5\\r\\n2 3 3 5 5\\r\\n2 5 2 2 1\\r\\n2 4 0 4 1\\r\\n1 4 4 4 2\\r\\n3 4 1 1 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n1 2 0 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 0 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 0 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 0\\r\\n3 6 0 5 0\\r\\n4 5 0 5 0\\r\\n4 6 0 5 0\\r\\n5 6 0 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '6\\r\\n3 4 4 5 4\\r\\n2 4 1 4 1\\r\\n5 6 0 3 5\\r\\n1 2 5 5 1\\r\\n2 5 0 4 3\\r\\n4 6 0 5 1\\r\\n4 5 2 3 2\\r\\n1 6 3 4 6\\r\\n1 4 1 4 6\\r\\n2 3 2 4 6\\r\\n1 5 0 5 5\\r\\n3 6 0 0 1\\r\\n2 6 1 2 6\\r\\n1 3 0 5 2\\r\\n3 5 1 2 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['11 141\\r\\n']}, {'input': '6\\r\\n5 6 0 1 4\\r\\n1 6 2 5 1\\r\\n1 4 2 3 6\\r\\n4 6 3 5 5\\r\\n3 4 1 2 5\\r\\n1 5 0 2 6\\r\\n1 3 0 1 4\\r\\n4 5 0 1 4\\r\\n2 3 0 1 3\\r\\n2 5 0 5 2\\r\\n1 2 1 4 2\\r\\n3 6 1 5 0\\r\\n2 4 1 5 2\\r\\n3 5 0 3 0\\r\\n2 6 1 5 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['8 72\\r\\n']}, {'input': '6\\r\\n2 4 1 3 1\\r\\n1 3 4 5 4\\r\\n2 5 0 1 2\\r\\n3 4 0 4 5\\r\\n1 5 2 4 2\\r\\n1 2 1 5 3\\r\\n2 3 0 5 1\\r\\n5 6 1 5 4\\r\\n2 6 2 4 3\\r\\n4 5 2 2 4\\r\\n4 6 1 1 1\\r\\n1 6 2 4 1\\r\\n1 4 2 3 5\\r\\n3 6 2 3 3\\r\\n3 5 0 4 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['13 118\\r\\n']}, {'input': '6\\r\\n4 6 0 1 5\\r\\n3 4 0 1 0\\r\\n4 5 0 5 0\\r\\n2 5 1 4 4\\r\\n1 4 2 4 6\\r\\n3 5 1 5 6\\r\\n2 3 4 4 4\\r\\n2 6 0 0 4\\r\\n1 5 1 5 0\\r\\n2 4 0 1 0\\r\\n1 3 2 2 0\\r\\n1 2 2 5 4\\r\\n3 6 0 5 4\\r\\n1 6 2 5 1\\r\\n5 6 1 4 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['12 133\\r\\n']}, {'input': '6\\r\\n1 2 1 2 2\\r\\n1 3 1 3 5\\r\\n1 4 3 3 3\\r\\n1 5 1 1 1\\r\\n1 6 3 5 6\\r\\n2 3 1 5 5\\r\\n2 4 3 3 0\\r\\n2 5 0 1 6\\r\\n2 6 4 5 5\\r\\n3 4 2 3 0\\r\\n3 5 1 2 6\\r\\n3 6 1 1 2\\r\\n4 5 0 1 0\\r\\n4 6 4 4 4\\r\\n5 6 2 5 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['-1 -1\\r\\n']}, {'input': '6\\r\\n1 2 0 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 0 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 0 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 0\\r\\n3 6 0 5 0\\r\\n4 5 0 5 0\\r\\n4 6 0 5 0\\r\\n5 6 1 5 0\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1 5\\r\\n']}, {'input': '6\\r\\n1 2 0 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 0 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 0 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 0\\r\\n3 6 0 5 0\\r\\n4 5 0 5 0\\r\\n4 6 0 5 0\\r\\n5 6 5 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5 125\\r\\n']}, {'input': '6\\r\\n1 2 1 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 0 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 0 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 0\\r\\n3 6 0 5 0\\r\\n4 5 0 5 0\\r\\n4 6 0 5 0\\r\\n5 6 0 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 5\\r\\n']}, {'input': '6\\r\\n1 2 5 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 0 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 0 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 0\\r\\n3 6 0 5 0\\r\\n4 5 0 5 0\\r\\n4 6 0 5 0\\r\\n5 6 0 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5 125\\r\\n']}, {'input': '6\\r\\n1 2 0 5 0\\r\\n1 3 0 5 0\\r\\n1 4 0 5 0\\r\\n1 5 0 5 0\\r\\n1 6 5 5 0\\r\\n2 3 0 5 0\\r\\n2 4 0 5 0\\r\\n2 5 0 5 0\\r\\n2 6 5 5 0\\r\\n3 4 0 5 0\\r\\n3 5 0 5 1\\r\\n3 6 5 5 0\\r\\n4 5 0 5 0\\r\\n4 6 5 5 0\\r\\n5 6 5 5 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['25 225\\r\\n']}, {'input': '6\\r\\n1 2 5 5 0\\r\\n1 3 5 5 0\\r\\n1 4 4 5 0\\r\\n1 5 5 5 0\\r\\n1 6 5 5 3\\r\\n2 3 0 5 0\\r\\n2 4 0 5 2\\r\\n2 5 0 5 0\\r\\n2 6 0 5 0\\r\\n3 4 1 5 4\\r\\n3 5 0 5 0\\r\\n3 6 0 5 1\\r\\n4 5 0 5 0\\r\\n4 6 1 5 0\\r\\n5 6 0 5 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['24 223\\r\\n']}, {'input': '6\\r\\n1 2 0 0 0\\r\\n1 3 0 0 0\\r\\n1 4 0 0 0\\r\\n1 5 0 0 0\\r\\n1 6 0 0 0\\r\\n2 3 0 0 0\\r\\n2 4 0 0 0\\r\\n2 5 0 0 0\\r\\n2 6 0 0 0\\r\\n3 4 0 0 0\\r\\n3 5 0 0 0\\r\\n3 6 0 0 0\\r\\n4 5 0 0 0\\r\\n4 6 0 0 0\\r\\n5 6 0 0 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '6\\r\\n1 2 0 5 6\\r\\n1 3 0 5 6\\r\\n1 4 0 5 6\\r\\n1 5 0 5 6\\r\\n1 6 0 5 6\\r\\n2 3 0 5 6\\r\\n2 4 0 5 6\\r\\n2 5 0 5 6\\r\\n2 6 0 5 6\\r\\n3 4 0 5 6\\r\\n3 5 0 5 6\\r\\n3 6 0 5 6\\r\\n4 5 0 5 6\\r\\n4 6 0 5 6\\r\\n5 6 0 5 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}, {'input': '2\\r\\n1 2 0 0 0\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0 0\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\"use strict\";\n\nvar n = readline();\nvar a = readline().split(' ').map(Number);\nvar sum = 0, even = 0;\nfor(var i = 0; i < n; i++) { \n    sum += a[i];\n    if (a[i] % 2 === 0) { even++; }\n}\nif (sum % 2 === 0) {\n    print(even);\n} else {\n    print(n - even);\n}\n","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"4c59b4d43b59c8659bf274f3e29d01fe","code_uid":"82f4deff1210e42439c0923cd61f4289","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4c59b4d43b59c8659bf274f3e29d01fe","hidden_unit_tests":"[{'input': '1\\r\\n1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 2 2 3 4 4 4 2 2 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '11\\r\\n2 2 2 2 2 2 2 2 2 2 99\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '7\\r\\n7 7 7 7 7 7 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '8\\r\\n1 2 3 4 5 6 7 8\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '100\\r\\n1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['50\\r\\n']}, {'input': '99\\r\\n99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99 100 99\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['49\\r\\n']}, {'input': '82\\r\\n43 44 96 33 23 42 33 66 53 87 8 90 43 91 40 88 51 18 48 62 59 10 22 20 54 6 13 63 2 56 31 52 98 42 54 32 26 77 9 24 33 91 16 30 39 34 78 82 73 90 12 15 67 76 30 18 44 86 84 98 65 54 100 79 28 34 40 56 11 43 72 35 86 59 89 40 30 33 7 19 44 15\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['50\\r\\n']}, {'input': '17\\r\\n50 14 17 77 74 74 38 76 41 27 45 29 66 98 38 73 38\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n']}, {'input': '94\\r\\n81 19 90 99 26 11 86 44 78 36 80 59 99 90 78 72 71 20 94 56 42 40 71 84 10 85 10 70 52 27 39 55 90 16 48 25 7 79 99 100 38 10 99 56 3 4 78 9 16 57 14 40 52 54 57 70 30 86 56 84 97 60 59 69 49 66 23 92 90 46 86 73 53 47 1 83 14 20 24 66 13 45 41 14 86 75 55 88 48 95 82 24 47 87\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['39\\r\\n']}, {'input': '88\\r\\n64 95 12 90 40 65 98 45 52 54 79 7 81 25 98 19 68 82 41 53 35 50 5 22 32 21 8 39 8 6 72 27 81 30 12 79 21 42 60 2 66 87 46 93 62 78 52 71 76 32 78 94 86 85 55 15 34 76 41 20 32 26 94 81 89 45 74 49 11 40 40 39 49 46 80 85 90 23 80 40 86 58 70 26 48 93 23 53\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['37\\r\\n']}, {'input': '84\\r\\n95 9 43 43 13 84 60 90 1 8 97 99 54 34 59 83 33 15 51 26 40 12 66 65 19 30 29 78 92 60 25 13 19 84 71 73 12 24 54 49 16 41 11 40 57 59 34 40 39 9 71 83 1 77 79 53 94 47 78 55 77 85 29 52 80 90 53 77 97 97 27 79 28 23 83 25 26 22 49 86 63 56 3 32\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['51\\r\\n']}, {'input': '47\\r\\n61 97 76 94 91 22 2 68 62 73 90 47 16 79 44 71 98 68 43 6 53 52 40 27 68 67 43 96 14 91 60 61 96 24 97 13 32 65 85 96 81 77 34 18 23 14 80\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['21\\r\\n']}, {'input': '69\\r\\n71 1 78 74 58 89 30 6 100 90 22 61 11 59 14 74 27 25 78 61 45 19 25 33 37 4 52 43 53 38 9 100 56 67 69 38 76 91 63 60 93 52 28 61 9 98 8 14 57 63 89 64 98 51 36 66 36 86 13 82 50 91 52 64 86 78 78 83 81\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['37\\r\\n']}, {'input': '52\\r\\n38 78 36 75 19 3 56 1 39 97 24 79 84 16 93 55 96 64 12 24 1 86 80 29 12 32 36 36 73 39 76 65 53 98 30 20 28 8 86 43 70 22 75 69 62 65 81 25 53 40 71 59\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['28\\r\\n']}, {'input': '74\\r\\n81 31 67 97 26 75 69 81 11 13 13 74 77 88 52 20 52 64 66 75 72 28 41 54 26 75 41 91 75 15 18 36 13 83 63 61 14 48 53 63 19 67 35 48 23 65 73 100 44 55 92 88 99 17 73 25 83 7 31 89 12 80 98 39 42 75 14 29 81 35 77 87 33 94\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['47\\r\\n']}, {'input': '44\\r\\n46 56 31 31 37 71 94 2 14 100 45 72 36 72 80 3 38 54 42 98 50 32 31 42 62 31 45 50 95 100 18 17 64 22 18 25 52 56 70 57 43 40 81 28\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '22\\r\\n28 57 40 74 51 4 45 84 99 12 95 14 92 60 47 81 84 51 31 91 59 42\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '59\\r\\n73 45 94 76 41 49 65 13 74 66 36 25 47 75 40 23 92 72 11 32 32 8 81 26 68 56 41 8 76 47 96 55 70 11 84 14 83 18 70 22 30 39 28 100 48 11 92 45 78 69 86 1 54 90 98 91 13 17 35\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['33\\r\\n']}, {'input': '63\\r\\n20 18 44 94 68 57 16 43 74 55 68 24 21 95 76 84 50 50 47 86 86 12 58 55 28 72 86 18 34 45 81 88 3 72 41 9 60 90 81 93 12 6 9 6 2 41 1 7 9 29 81 14 64 80 20 36 67 54 7 5 35 81 22\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['37\\r\\n']}, {'input': '28\\r\\n49 84 48 19 44 91 11 82 96 95 88 90 71 82 87 25 31 23 18 13 98 45 26 65 35 12 31 14\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '61\\r\\n34 18 28 64 28 45 9 77 77 20 63 92 79 16 16 100 86 2 91 91 57 15 31 95 10 88 84 5 82 83 53 98 59 17 97 80 76 80 81 3 91 81 87 93 61 46 10 49 6 22 21 75 63 89 21 81 30 19 67 38 77\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['35\\r\\n']}, {'input': '90\\r\\n41 90 43 1 28 75 90 50 3 70 76 64 81 63 25 69 83 82 29 91 59 66 21 61 7 55 72 49 38 69 72 20 64 58 30 81 61 29 96 14 39 5 100 20 29 98 75 29 44 78 97 45 26 77 73 59 22 99 41 6 3 96 71 20 9 18 96 18 90 62 34 78 54 5 41 6 73 33 2 54 26 21 18 6 45 57 43 73 95 75\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['42\\r\\n']}, {'input': '45\\r\\n93 69 4 27 20 14 71 48 79 3 32 26 49 30 57 88 13 56 49 61 37 32 47 41 41 70 45 68 82 18 8 6 25 20 15 13 71 99 28 6 52 34 19 59 26\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '33\\r\\n29 95 48 49 91 10 83 71 47 25 66 36 51 12 34 10 54 74 41 96 89 26 89 1 42 33 1 62 9 32 49 65 78\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n']}, {'input': '34\\r\\n98 24 42 36 41 82 28 58 89 34 77 70 76 44 74 54 66 100 13 79 4 88 21 1 11 45 91 29 87 100 29 54 82 78\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '29\\r\\n91 84 26 84 9 63 52 9 65 56 90 2 36 7 67 33 91 14 65 38 53 36 81 83 85 14 33 95 51\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '100\\r\\n2 88 92 82 87 100 78 28 84 43 78 32 43 33 97 19 15 52 29 84 57 72 54 13 99 28 82 79 40 70 34 92 91 53 9 88 27 43 14 92 72 37 26 37 20 95 19 34 49 64 33 37 34 27 80 79 9 54 99 68 25 4 68 73 46 66 24 78 3 87 26 52 50 84 4 95 23 83 39 58 86 36 33 16 98 2 84 19 53 12 69 60 10 11 78 17 79 92 77 59\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['45\\r\\n']}, {'input': '100\\r\\n2 95 45 73 9 54 20 97 57 82 88 26 18 71 25 27 75 54 31 11 58 85 69 75 72 91 76 5 25 80 45 49 4 73 8 81 81 38 5 12 53 77 7 96 90 35 28 80 73 94 19 69 96 17 94 49 69 9 32 19 5 12 46 29 26 40 59 59 6 95 82 50 72 2 45 69 12 5 72 29 39 72 23 96 81 28 28 56 68 58 37 41 30 1 90 84 15 24 96 43\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '100\\r\\n27 72 35 91 13 10 35 45 24 55 83 84 63 96 29 79 34 67 63 92 48 83 18 77 28 27 49 66 29 88 55 15 6 58 14 67 94 36 77 7 7 64 61 52 71 18 36 99 76 6 50 67 16 13 41 7 89 73 61 51 78 22 78 32 76 100 3 31 89 71 63 53 15 85 77 54 89 33 68 74 3 23 57 5 43 89 75 35 9 86 90 11 31 46 48 37 74 17 77 8\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['40\\r\\n']}, {'input': '100\\r\\n69 98 69 88 11 49 55 8 25 91 17 81 47 26 15 73 96 71 18 42 42 61 48 14 92 78 35 72 4 27 62 75 83 79 17 16 46 80 96 90 82 54 37 69 85 21 67 70 96 10 46 63 21 59 56 92 54 88 77 30 75 45 44 29 86 100 51 11 65 69 66 56 82 63 27 1 51 51 13 10 3 55 26 85 34 16 87 72 13 100 81 71 90 95 86 50 83 55 55 54\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '100\\r\\n34 35 99 64 2 66 78 93 20 48 12 79 19 10 87 7 42 92 60 79 5 2 24 89 57 48 63 92 74 4 16 51 7 12 90 48 87 17 18 73 51 58 97 97 25 38 15 97 96 73 67 91 6 75 14 13 87 79 75 3 15 55 35 95 71 45 10 13 20 37 82 26 2 22 13 83 97 84 39 79 43 100 54 59 98 8 61 34 7 65 75 44 24 77 73 88 34 95 44 77\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['55\\r\\n']}, {'input': '100\\r\\n15 86 3 1 51 26 74 85 37 87 64 58 10 6 57 26 30 47 85 65 24 72 50 40 12 35 91 47 91 60 47 87 95 34 80 91 26 3 36 39 14 86 28 70 51 44 28 21 72 79 57 61 16 71 100 94 57 67 36 74 24 21 89 85 25 2 97 67 76 53 76 80 97 64 35 13 8 32 21 52 62 61 67 14 74 73 66 44 55 76 24 3 43 42 99 61 36 80 38 66\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['52\\r\\n']}, {'input': '100\\r\\n45 16 54 54 80 94 74 93 75 85 58 95 79 30 81 2 84 4 57 23 92 64 78 1 50 36 13 27 56 54 10 77 87 1 5 38 85 74 94 82 30 45 72 83 82 30 81 82 82 3 69 82 7 92 39 60 94 42 41 5 3 17 67 21 79 44 79 96 28 3 53 68 79 89 63 83 1 44 4 31 84 15 73 77 19 66 54 6 73 1 67 24 91 11 86 45 96 82 20 89\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['51\\r\\n']}, {'input': '100\\r\\n84 23 50 32 90 71 92 43 58 70 6 82 7 55 85 19 70 89 12 26 29 56 74 30 2 27 4 39 63 67 91 81 11 33 75 10 82 88 39 43 43 80 68 35 55 67 53 62 73 65 86 74 43 51 14 48 42 92 83 57 22 33 24 99 5 27 78 96 7 28 11 15 8 38 85 67 5 92 24 96 57 59 14 95 91 4 9 18 45 33 74 83 64 85 14 51 51 94 29 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '100\\r\\n77 56 56 45 73 55 32 37 39 50 30 95 79 21 44 34 51 43 86 91 39 30 85 15 35 93 100 14 57 31 80 79 38 40 88 4 91 54 7 95 76 26 62 84 17 33 67 47 6 82 69 51 17 2 59 24 11 12 31 90 12 11 55 38 72 49 30 50 42 46 5 97 9 9 30 45 86 23 19 82 40 42 5 40 35 98 35 32 60 60 5 28 84 35 21 49 68 53 68 23\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['48\\r\\n']}, {'input': '100\\r\\n78 38 79 61 45 86 83 83 86 90 74 69 2 84 73 39 2 5 20 71 24 80 54 89 58 34 77 40 39 62 2 47 28 53 97 75 88 98 94 96 33 71 44 90 47 36 19 89 87 98 90 87 5 85 34 79 82 3 42 88 89 63 35 7 89 30 40 48 12 41 56 76 83 60 80 80 39 56 77 4 72 96 30 55 57 51 7 19 11 1 66 1 91 87 11 62 95 85 79 25\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['48\\r\\n']}, {'input': '100\\r\\n5 34 23 20 76 75 19 51 17 82 60 13 83 6 65 16 20 43 66 54 87 10 87 73 50 24 16 98 33 28 80 52 54 82 26 92 14 13 84 92 94 29 61 21 60 20 48 94 24 20 75 70 58 27 68 45 86 89 29 8 67 38 83 48 18 100 11 22 46 84 52 97 70 19 50 75 3 7 52 53 72 41 18 31 1 38 49 53 11 64 99 76 9 87 48 12 100 32 44 71\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['58\\r\\n']}, {'input': '100\\r\\n76 89 68 78 24 72 73 95 98 72 58 15 2 5 56 32 9 65 50 70 94 31 29 54 89 52 31 93 43 56 26 35 72 95 51 55 78 70 11 92 17 5 54 94 81 31 78 95 73 91 95 37 59 9 53 48 65 55 84 8 45 97 64 37 96 34 36 53 66 17 72 48 99 23 27 18 92 84 44 73 60 78 53 29 68 99 19 39 61 40 69 6 77 12 47 29 15 4 8 45\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '100\\r\\n82 40 31 53 8 50 85 93 3 84 54 17 96 59 51 42 18 19 35 84 79 31 17 46 54 82 72 49 35 73 26 89 61 73 3 50 12 29 25 77 88 21 58 24 22 89 96 54 82 29 96 56 77 16 1 68 90 93 20 23 57 22 31 18 92 90 51 14 50 72 31 54 12 50 66 62 2 34 17 45 68 50 87 97 23 71 1 72 17 82 42 15 20 78 4 49 66 59 10 17\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['54\\r\\n']}, {'input': '100\\r\\n32 82 82 24 39 53 48 5 29 24 9 37 91 37 91 95 1 97 84 52 12 56 93 47 22 20 14 17 40 22 79 34 24 2 69 30 69 29 3 89 21 46 60 92 39 29 18 24 49 18 40 22 60 13 77 50 39 64 50 70 99 8 66 31 90 38 20 54 7 21 5 56 41 68 69 20 54 89 69 62 9 53 43 89 81 97 15 2 52 78 89 65 16 61 59 42 56 25 32 52\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['49\\r\\n']}, {'input': '100\\r\\n72 54 23 24 97 14 99 87 15 25 7 23 17 87 72 31 71 87 34 82 51 77 74 85 62 38 24 7 84 48 98 21 29 71 70 84 25 58 67 92 18 44 32 9 81 15 53 29 63 18 86 16 7 31 38 99 70 32 89 16 23 11 66 96 69 82 97 59 6 9 49 80 85 19 6 9 52 51 85 74 53 46 73 55 31 63 78 61 34 80 77 65 87 77 92 52 89 8 52 31\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['44\\r\\n']}, {'input': '100\\r\\n56 88 8 19 7 15 11 54 35 50 19 57 63 72 51 43 50 19 57 90 40 100 8 92 11 96 30 32 59 65 93 47 62 3 50 41 30 50 72 83 61 46 83 60 20 46 33 1 5 18 83 22 34 16 41 95 63 63 7 59 55 95 91 29 64 60 64 81 45 45 10 9 88 37 69 85 21 82 41 76 42 34 47 78 51 83 65 100 13 22 59 76 63 1 26 86 36 94 99 74\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['46\\r\\n']}, {'input': '100\\r\\n27 89 67 60 62 80 43 50 28 88 72 5 94 11 63 91 18 78 99 3 71 26 12 97 74 62 23 24 22 3 100 72 98 7 94 32 12 75 61 88 42 48 10 14 45 9 48 56 73 76 70 70 79 90 35 39 96 37 81 11 19 65 99 39 23 79 34 61 35 74 90 37 73 23 46 21 94 84 73 58 11 89 13 9 10 85 42 78 73 32 53 39 49 90 43 5 28 31 97 75\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '100\\r\\n33 24 97 96 1 14 99 51 13 65 67 20 46 88 42 44 20 49 5 89 98 83 15 40 74 83 58 3 10 79 34 2 69 28 37 100 55 52 14 8 44 94 97 89 6 42 11 28 30 33 55 56 20 57 52 25 75 1 87 42 62 41 37 12 54 85 95 80 42 36 94 96 28 76 54 36 4 17 26 24 62 15 17 79 84 36 92 78 74 91 96 77 54 92 81 91 62 98 37 37\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['43\\r\\n']}, {'input': '100\\r\\n86 24 61 15 11 85 1 31 47 36 23 36 59 34 3 27 16 29 82 28 58 52 52 66 71 61 98 39 60 20 67 41 67 90 73 29 92 17 70 95 58 98 58 32 21 73 46 56 87 72 80 75 40 27 94 31 59 92 93 37 14 99 96 21 97 23 81 91 52 52 96 94 92 28 38 29 52 16 57 27 17 24 91 21 79 55 96 98 95 94 23 78 79 12 77 35 32 75 100 82\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['51\\r\\n']}, {'input': '100\\r\\n88 85 41 37 69 21 7 69 36 5 92 26 64 75 22 46 67 20 70 22 62 66 38 24 47 49 68 30 90 31 67 86 86 82 9 51 43 45 48 42 73 44 31 94 45 60 54 66 20 87 11 94 34 32 87 66 56 28 75 39 37 90 72 93 55 72 31 42 30 71 87 61 4 12 12 81 23 61 56 98 71 32 30 33 96 63 92 16 8 78 47 91 47 54 49 3 81 82 41 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['47\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 1 3 2 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function trim(s) {\n\treturn s.replace(\/^\\s+|\\s+$\/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(\/\\s+\/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i], 10);\n\t};\n\treturn tokens;\n}\n\nfunction solve(height, width) {\n\tvar subHeight = Math.pow(2, Math.floor(Math.log(height) \/ Math.log(2)));\n\twhile (true) {\n\t\tvar subWidth = Math.min(width, Math.floor(5*subHeight\/4));\n\t\tif (subWidth >= Math.ceil(4*subHeight\/5)) {\n\t\t\treturn { height: subHeight, width: subWidth,\n\t\t\t\t\t getArea: function() {\n\t\t\t\t\t\t return this.height * this.width;\n\t\t\t\t\t },\n\t\t\t\t\t toString: function() {\n\t\t\t\t\t\t return this.height+\" \"+this.width;\n\t\t\t\t\t },\n\t\t\t\t\t rotate: function() {\n\t\t\t\t\t\t var temp = this.height;\n\t\t\t\t\t\t this.height = this.width;\n\t\t\t\t\t\t this.width = temp;\n\t\t\t\t\t }\n\t\t\t};\n\t\t}\n\t\tsubHeight \/= 2;\n\t}\n}\n\nfunction main() {\n\tvar data = tokenizeIntegers(readline());\n\tvar height = data[0], width = data[1];\n\n\tvar solutionA = solve(height, width), areaA = solutionA.getArea(),\n\t\tsolutionB = solve(width, height), areaB = solutionB.getArea();\n\tsolutionB.rotate();\n\n\tif (areaA > areaB || (areaA == areaB && solutionA.height > solutionB.height)) {\n\t\tprint(solutionA.toString());\n\t}\n\telse {\n\t\tprint(solutionB.toString());\n\t}\n}\n\nmain();\n","tags":["binary search","implementation"],"lang_cluster":"Javascript","src_uid":"57d2eb75a14f1b66009bdb503fd31f91","code_uid":"4424ee8710da0c3f9dd1655a5fd221c2","difficulty":1700,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"57d2eb75a14f1b66009bdb503fd31f91","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2 2\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['5 4\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['8 10\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['10 8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['40 32\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['80 64\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['640 512\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4096 4806\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['32768 40960\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['327680 262144\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4939191 4194304\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['8388608 9945873\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['83886080 67108864\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['644590722 536870912\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll = readline().split(' ').map(v => parseInt(v))\nlet H = lll[0]\nlet W = lll[1]\n\nlet ph = -1\nwhile (ph++ < 30) {\n  let ch = Math.pow(2, ph)\n  if (ch > H || ch * 0.8 > W) {ph--; break}\n}\nlet ch = Math.pow(2, ph)\n\nlet pw = -1\nwhile (pw++ < 30) {\n  let cw = Math.pow(2, pw)\n  if (cw > W || cw * 0.8 > H) {pw--; break}\n}\nlet cw = Math.pow(2, pw)\n\nlet sh = ch * Math.min(ch * 1.25, W)\nlet sw = cw * Math.min(cw * 1.25, H)\n\nif (sh > sw) {\n  print(ch + ' ' + Math.floor(Math.min(ch * 1.25, W)))\n} else if (sw > sh) {\n  print(Math.floor(Math.min(cw * 1.25, H)) + ' ' + cw)\n} else {\n  print(ch > cw * 1.25 ? ch + ' ' + Math.floor(Math.min(ch * 1.25, W)) : Math.floor(Math.min(cw * 1.25, H)) + ' ' + cw)\n}","tags":["binary search","implementation"],"lang_cluster":"Javascript","src_uid":"57d2eb75a14f1b66009bdb503fd31f91","code_uid":"d44f139dbdd9a13430e9ab7fd5b861e8","difficulty":1700,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"57d2eb75a14f1b66009bdb503fd31f91","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2 2\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['5 4\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['8 10\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['10 8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['40 32\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['80 64\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['640 512\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4096 4806\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['32768 40960\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['327680 262144\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4939191 4194304\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['8388608 9945873\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['41943040 33554432\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['83886080 67108864\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['644590722 536870912\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['671088640 536870912\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"fs = require('fs')\n\n\/*\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nvar indicator = 0, pos = -1;\n\nrl.on('line', (input) => {\n    if (indicator == 0) {\n        pos = parseInt(input);\n        indicator++;\n    }\n    else  {\n        let temp = input.split(' ').map(item => parseInt(item));\n        if (pos == temp[0])\n            pos = temp[1];\n        else if (pos == temp[1])\n            pos = temp[0];\n    }\n\n  }).on('close', function() {\n    console.log(pos);\n  });\n  *\/\n\n  \n fs.readFile('input.txt', 'utf8', function (err,data) {\n    if (err) \n      return console.log(err);\n    \n    \/\/console.log(data);\n    let cont = data.split('\\n').map(item => item.trim());\n    \/\/console.log(cont);\n    let pos = parseInt(cont[0]);\n    for (let i = 1; i < 4; i++) {\n        let temp = cont[i].split(' ').map(item => parseInt(item));\n        if (temp[0]==pos)\n            pos = temp[1];\n        else if (temp[1]==pos)\n            pos = temp[0];    \n        \n    }\n\n    fs.writeFile('output.txt', pos.toString(), function (err) {\n        if (err) \n        return console.log(err);\n       \/\/ console.log('Hello World > helloworld.txt');\n      });\n  });","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"88e6651e1b0481d711e89c8071be1edf","code_uid":"8f7c130dcf88badb08aee5829934978d","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"88e6651e1b0481d711e89c8071be1edf","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['12'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['3\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict'\n\nconst {EOL} = require('os')\n\nlet ipt = ''\nprocess.stdin.on('data', s => ipt += s)\nprocess.stdin.on('end', () => {\n  const ils = ipt.split(EOL).slice(0, -1)\n  let [n, k] = ils[0].split(' ').map(v => parseInt(v))\n  let A = ils[1].split(' ').map(v => parseInt(v))\n  let a = A.length\n  while (k > a && a > 0) {\n    let m = Math.floor(k \/ a)\n    k = k % a\n    for (let i = 0; i < A.length; i++) {\n      if (A[i] > m) {\n        A[i] -= m\n      } else if (A[i] > 0) {\n        k += m - A[i]\n        A[i] = 0\n        a--\n      }\n    }\n  }\n  if (a > 0) {\n    let r = []\n    let i = 0\n    for (; i < A.length && k > 0; i++) {\n      if (A[i] > 0) {\n        A[i]--\n        k--\n      }\n    }\n    for (let j = i; j < A.length; j++) {\n      if (A[j]) r.push(j + 1)\n    }\n    for (let j = 0; j < i; j++) {\n      if (A[j]) r.push(j + 1)\n    }\n    console.log(r.join(' ') || (k ? -1 : ''))\n  } else if (k > 0) {\n    console.log(-1)\n  } else {\n    console.log()\n  }\n})","tags":["binary search","sortings","math"],"lang_cluster":"Javascript","src_uid":"8126f40439f2ea808683d22115421c18","code_uid":"1a9ccc958b2c608bf1d7c8c4692f61e2","difficulty":1800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8126f40439f2ea808683d22115421c18","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['1972'], 'output': ['2 ']}, {'input': '4', 'time': ['30'], 'mem': ['1956'], 'output': ['-1\\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['1976'], 'output': ['6 2 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['1960'], 'output': ['1 ']}, {'input': '1', 'time': ['30'], 'mem': ['1956'], 'output': ['<\/pre><\/div>\\n        <\/div>\\n\\n        <div class=\"file checker-comment-view\">\\n            <div class=\"name\">Checker comment<\/div>\\n            <div class=\"text\"><pre class=\"checkerComment\">ok 0 number(s): \"\"\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['1968'], 'output': ['4 6 2 3 ']}, {'input': '9', 'time': ['0'], 'mem': ['1972'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['1968'], 'output': ['2 ']}, {'input': '5', 'time': ['0'], 'mem': ['1956'], 'output': ['5 ']}, {'input': '5', 'time': ['0'], 'mem': ['1976'], 'output': ['1 4 5 ']}, {'input': '5', 'time': ['0'], 'mem': ['1980'], 'output': ['<\/pre><\/div>\\n        <\/div>\\n\\n        <div class=\"file checker-comment-view\">\\n            <div class=\"name\">Checker comment<\/div>\\n            <div class=\"text\"><pre class=\"checkerComment\">ok 0 number(s): \"\"\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['1956'], 'output': ['2 3 4 5 1 ']}, {'input': '1', 'time': ['0'], 'mem': ['1960'], 'output': ['8 9 10 1 3 4 5 6 7 ']}, {'input': '1', 'time': ['30'], 'mem': ['1960'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['1948'], 'output': ['<\/pre><\/div>\\n        <\/div>\\n\\n        <div class=\"file checker-comment-view\">\\n            <div class=\"name\">Checker comment<\/div>\\n            <div class=\"text\"><pre class=\"checkerComment\">ok 0 number(s): \"\"\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['1960'], 'output': ['<\/pre><\/div>\\n        <\/div>\\n\\n        <div class=\"file checker-comment-view\">\\n            <div class=\"name\">Checker comment<\/div>\\n            <div class=\"text\"><pre class=\"checkerComment\">ok 0 number(s): \"\"\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['1956'], 'output': ['12 13 16 18 19 2 6 8 10 11 ']}, {'input': '2', 'time': ['30'], 'mem': ['1972'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['1960'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['1956'], 'output': ['16 17 18 19 20 1 2 4 5 7 8 9 10 11 12 14 ']}, {'input': '5', 'time': ['0'], 'mem': ['1972'], 'output': ['43 44 45 46 47 48 49 50 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ']}, {'input': '5', 'time': ['0'], 'mem': ['1968'], 'output': ['21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 44 45 46 47 48 49 50 1 2 3 4 5 6 8 9 11 12 13 14 15 17 18 ']}, {'input': '5', 'time': ['0'], 'mem': ['1976'], 'output': ['<\/pre><\/div>\\n        <\/div>\\n\\n        <div class=\"file checker-comment-view\">\\n            <div class=\"name\">Checker comment<\/div>\\n            <div class=\"text\"><pre class=\"checkerComment\">ok 0 number(s): \"\"\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['1976'], 'output': ['33 34 35 36 37 38 39 40 41 42 43 44 45 46 ']}, {'input': '5', 'time': ['0'], 'mem': ['1964'], 'output': ['39 41 42 43 44 47 48 49 50 1 2 3 4 7 9 10 12 13 14 15 16 18 19 21 22 23 25 26 30 31 38 ']}, {'input': '1', 'time': ['0'], 'mem': ['1972'], 'output': ['26 27 28 29 30 31 32 34 37 40 41 42 43 45 46 47 48 49 51 52 53 55 57 59 61 63 64 67 69 72 73 74 75 76 78 79 82 83 85 86 88 89 91 92 93 94 95 96 97 98 101 102 104 109 111 112 113 115 117 118 119 120 121 122 123 124 125 127 129 130 132 136 137 138 139 141 142 143 144 145 147 148 149 1 3 4 5 7 8 9 10 11 13 14 17 20 22 24 25 ']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function trim(s) {\n\treturn s.replace(\/^\\s+|\\s+$\/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(\/\\s+\/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i]);\n\t};\n\treturn tokens;\n}\n\nfunction main() {\n\tvar integers = tokenizeIntegers(readline());\n\tvar stopNum = integers[0], busSpeed = integers[1], runSpeed = integers[2];\n\tvar xs = tokenizeIntegers(readline());\n\tvar integers = tokenizeIntegers(readline());\n\tvar xTarget = integers[0], yTarget = integers[1];\n\n\tfunction getDistance(x0, y0, x1, y1) {\n\t\treturn Math.sqrt(Math.pow(x1-x0, 2) + Math.pow(y1-y0, 2));\n\t}\n\n\tvar records = [];\n\n\tfor (var i = 1; i < xs.length; i += 1) {\n\t\tvar distance = getDistance(xs[i], 0, xTarget, yTarget);\n\t\tvar time = xs[i]\/busSpeed + distance\/runSpeed;\n\t\trecords.push({ distance: distance, time: time, id: i+1 });\n\t}\n\n\trecords.sort(function(a, b) {\n\t\treturn (a.time == b.time ? a.distance - b.distance : a.time - b.time);\n\t});\n\n\tprint(records[0].id);\n}\n\nmain();\n","tags":["implementation","geometry","brute force"],"lang_cluster":"Javascript","src_uid":"15fa49860e978d3b3fb7a20bf9f8aa86","code_uid":"77b7454a6d01ab0c275b3238b8a96621","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"15fa49860e978d3b3fb7a20bf9f8aa86","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['3']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '6', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['4']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['2']}, {'input': '6', 'time': ['0'], 'mem': ['144'], 'output': ['3']}, {'input': '6', 'time': ['0'], 'mem': ['144'], 'output': ['6']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['8']}, {'input': '3', 'time': ['0'], 'mem': ['140'], 'output': ['9']}, {'input': '5', 'time': ['0'], 'mem': ['148'], 'output': ['2']}, {'input': '7', 'time': ['0'], 'mem': ['136'], 'output': ['45']}, {'input': '7', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['23']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '2', 'time': ['0'], 'mem': ['144'], 'output': ['2']}, {'input': '3', 'time': ['0'], 'mem': ['136'], 'output': ['3']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var lll = readline().split(' ')\nvar on = lll[0]\nvar vb = lll[1]\nvar vs = lll[2]\n\nvar os = readline().split(' ')\nlll = readline().split(' ')\nvar ux = lll[0]\nvar uy = lll[1]\n\nvar t = 0\nvar pot\nvar lo\n\nfor (var i = 1; i < on; i++) {\n  var tv = t + st(i)\n  if (pot && pot < tv) {\n    lo = i - 1\n    break\n  } else if (pot && pot == tv) {\n    lo = i\n    break\n  }\n  pot = tv\n  t += bt(i)\n}\n\nif (!lo) lo = os.length - 1\n\nprint(+lo + 1)\n\nfunction st (o) {\n  var ox = os[o]\n  return Math.sqrt((ux - ox) * (ux - ox) + uy * uy) \/ vs\n}\n\nfunction bt (o) {\n  if (o == os.length) return 0\n  var to = os[o]\n  var so = os[o + 1]\n  return (so - to) \/ vb\n}","tags":["implementation","geometry","brute force"],"lang_cluster":"Javascript","src_uid":"15fa49860e978d3b3fb7a20bf9f8aa86","code_uid":"bed237912d6d8887ca98ebf45c259be0","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"15fa49860e978d3b3fb7a20bf9f8aa86","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['3']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '6', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['4']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['2']}, {'input': '6', 'time': ['0'], 'mem': ['144'], 'output': ['3']}, {'input': '6', 'time': ['0'], 'mem': ['144'], 'output': ['6']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['8']}, {'input': '3', 'time': ['0'], 'mem': ['140'], 'output': ['9']}, {'input': '5', 'time': ['0'], 'mem': ['148'], 'output': ['2']}, {'input': '7', 'time': ['0'], 'mem': ['136'], 'output': ['45']}, {'input': '7', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['23']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['2']}, {'input': '2', 'time': ['0'], 'mem': ['144'], 'output': ['2']}, {'input': '3', 'time': ['0'], 'mem': ['136'], 'output': ['3']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll\n\nlet GP = +readline()\n\nconst gs = {}\n\nwhile (GP--) {\n  let N = +readline()\n  let pl = 0\n  while (N--) {\n    const g = readline()\n    gs[g] = gs[g] || {s: 0, p: zeroArr(50)}\n    gs[g].s += sc(pl)\n    gs[g].p[pl]++\n    pl++\n  }\n}\n\n\nlet fbg = Object.keys(gs)[0]\no: for (let gn in gs) {\n  const g = gs[gn]\n  if (g.s > gs[fbg].s) {\n    fbg = gn\n    continue o\n  } else if (g.s < gs[fbg].s) {\n    continue o\n  }\n  for (let i = 0; i < 50; i++) {\n    if (g.p[i] > gs[fbg].p[i]) {\n      fbg = gn\n      continue o\n    } else if (g.p[i] < gs[fbg].p[i]) {\n      continue o\n    }\n  }\n}\n\nlet sbg = Object.keys(gs)[0]\no: for (let gn in gs) {\n  const g = gs[gn]\n  if (g.p[0] > gs[sbg].p[0]) {\n    sbg = gn\n    continue o\n  } else if (g.p[0] < gs[sbg].p[0]) {\n    continue o\n  }\n  if (g.s > gs[sbg].s) {\n    sbg = gn\n    continue\n  } else if (g.s < gs[sbg].s) {\n    continue o\n  }\n  for (let i = 1; i < 50; i++) {\n    if (g.p[i] > gs[sbg].p[i]) {\n      sbg = gn\n      continue o\n    } else if (g.p[i] < gs[sbg].p[i]) {\n      continue o\n    }\n  }\n}\n\nfunction sc (p) {\n  switch (p) {\n    case 0: return 25\n    case 1: return 18\n    case 2: return 15\n    case 3: return 12\n    case 4: return 10\n    case 5: return 8\n    case 6: return 6\n    case 7: return 4\n    case 8: return 2\n    case 9: return 1\n    default: return 0\n  }\n}\n\nprint(fbg)\nprint(sbg)\n\nfunction zeroArr (l) {\n  let a = Array(l)\n  for (let i = 0; i < l; i++) {\n    a[i] = 0\n  }\n  return a\n}","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"bd40f54a1e764ba226d5387fcd6b353f","code_uid":"64588431a97f63ab5757b7b5f958c872","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"bd40f54a1e764ba226d5387fcd6b353f","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['Vettel\\r\\nHamilton\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['156'], 'output': ['Prost\\r\\nProst\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['180'], 'output': ['Trulli\\r\\nTrulli\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['168'], 'output': ['Hawthorn\\r\\nHawthorn\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['Scheckter\\r\\nAlbertoAscari\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['Senna\\r\\nLauda\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['Barichelo\\r\\nBerger\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['168'], 'output': ['Senna\\r\\nSenna\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['164'], 'output': ['Hamilton\\r\\nHamilton\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['196'], 'output': ['JamesHunt\\r\\nJamesHunt\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['A\\r\\nA\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['A\\r\\nA\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['A\\r\\nA\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['16'], 'output': ['A\\r\\nA\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['b\\r\\nb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['b\\r\\nb\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['ab\\r\\nab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['ab\\r\\nab\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['16'], 'output': ['b\\r\\nab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['b\\r\\nab\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['ab\\r\\nb\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n\tsqrt = Math.sqrt,\n\tN = 1e6 + 5,\n\tp = new Int8Array(N);\n\np[0] = p[1] = 1;\nfor (j = 4; j < N; j += 2)\n\tp[j] = 1;\n\nfor (i = 3, l = Math.sqrt(N); i < l; i += 2)\n\tif (!p[i])\n\t\tfor (var j = i * i; j < N; j += i)\n\t\t\tp[j] = 1;\n\nreadline();\nprint(readline().replace(\/\\s*\\d+\/g, function(v) {\n\tv = sqrt(+v);\n\treturn v % 1 === 0 && p[v] === 0 ? 'YES\\n' : 'NO\\n';\n}));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"1c331c56ab779c31f43b7606a8de4b4a","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n\tN = 1e6 + 5,\n\tp = new Int8Array(N);\n\np[0] = p[1] = 1;\nfor (j = 2; j * 2 < N; j++)\n\tp[j * 2] = 1;\nfor (i = 3, l = Math.sqrt(N); i < l; i += 2)\n\tif (!p[i])\n\t\tfor (var j = i * i; j < N; j += i)\n\t\t\tp[j] = 1;\n\nreadline();\nprint(readline().split(' ').map(function(v) {\n\tv = Math.sqrt(v);\n\treturn v % 1 === 0 && p[v] === 0 ? 'YES' : 'NO';\n}).join('\\n'));\n","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"b564eed0940b0af03582caeb00ee2111","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n\tN = 1e6 + 5,\n\tp = new Int8Array(N);\n\np[0] = p[1] = 1;\nfor (j = 2; j * 2 < N; j++)\n\tp[j * 2] = 1;\nfor (i = 3, l = Math.sqrt(N); i < l; i += 2)\n\tif (!p[i])\n\t\tfor (var j = i * i; j < N; j += i)\n\t\t\tp[j] = 1;\n\nreadline();\nprint(readline().split(' ').map(Math.sqrt).map(function(v) {\n\treturn v % 1 === 0 && p[v] === 0 ? 'YES' : 'NO';\n}).join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"868dbc264f8a2982ba25aaa88fe6ce0f","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n  sqrt = Math.sqrt,\n  N = 1e6 + 5,\n  p = new Int8Array(N);\n\np[0] = p[1] = 1;\nfor (j = 4; j < N; j += 2)\n  p[j] = 1;\n\nfor (i = 3, l = Math.sqrt(N); i < l; i += 2)\n  if (!p[i])\n    for (var j = i * i; j < N; j += i)\n      p[j] = 1;\n\nvar n = readline();\nvar a = readline().split(' ');\nvar ans = [];\nfor (var i = 0; i < n; i++) {\n  var v = sqrt(a[i]);\n  ans.push(v % 1 === 0 && p[v] === 0 ? 'YES' : 'NO');\n}\nprint(ans.join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"05d8eca543f3fed8b62e29864c714fde","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n  sqrt = Math.sqrt,\n  N = 1e6 + 5,\n  p = new Int8Array(N);\n\np[0] = p[1] = 1;\nfor (j = 4; j < N; j += 2)\n  p[j] = 1;\n\nfor (i = 3, l = Math.sqrt(N); i < l; i += 2)\n  if (!p[i])\n    for (var j = i * i; j < N; j += i)\n      p[j] = 1;\n\nvar n=readline();\nvar a=readline().split(' ')\nvar ans='';\nfor(var i=0; i<n; i++){\n  var v=sqrt(a[i]);\n  ans += v % 1 === 0 && p[v] === 0 ? 'YES\\n' : 'NO\\n';\n}\nprint(ans)","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"c3f1d2ed4d54eb0b995e71014f277797","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var N = 1e6 + 5;\nvar p = new Int8Array( N );\n\np[0] = p[1] = 1;\n\nfor( var j = 2; j*2 < N; j++ )\n\tp[ j*2 ] = 1;\n\nfor( var i = 3; i < N; i+=2 )\n\tif( !p[i] )\n\t\tfor( var j = i*i; j < N; j+=i )\n\t\t\tp[ j ] = 1;\n\n\nreadline();\nvar ret = readline()\n\t\t\t.split(' ')\n\t\t\t.map(Math.sqrt)\n\t\t\t.map(function(v){\n\t\t\t\treturn v%1===0&&p[v]===0 ? 'YES' : 'NO';\n\t\t\t});\n\nprint(ret.join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"483ffd11c93e7cea33c28a9dfd3b3ba3","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var N = 1e6 + 5;\nvar p = new Int8Array( N );\n\np[0] = p[1] = 1;\n\nfor( var j = 2; j*2 < N; j++ )\n\tp[ j*2 ] = 1;\n\nfor( var i = 3; i < N; i+=2 )\n\tif( !p[i] )\n\t\tfor( var j = 2; j*i < N; j++ )\n\t\t\tp[ j*i ] = 1;\n\n\nreadline();\nvar ret = readline()\n\t\t\t.split(' ')\n\t\t\t.map(Math.sqrt)\n\t\t\t.map(function(v){\n\t\t\t\treturn v%1===0&&p[v]===0 ? 'YES' : 'NO';\n\t\t\t});\n\nprint(ret.join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"314b5c86fcb897b9180f84fd0e388974","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var N = 1e6 + 5;\nvar p = new Int8Array( N );\n\np[0] = p[1] = 1;\n\nfor( var j = 2; j*2 < N; j++ )\n\tp[ j*2 ] = 1;\n\nfor( var i = 3; i < N; i++ )\n\tif( !p[i] )\n\t\tfor( var j = 2; j*i < N; j++ )\n\t\t\tp[ j*i ] = 1;\n\n\nreadline();\nvar ret = readline()\n\t\t\t.split(' ')\n\t\t\t.map(Math.sqrt)\n\t\t\t.map(function(v){\n\t\t\t\treturn p[v]===0 ? 'YES' : 'NO';\n\t\t\t});\n\nprint(ret.join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"764be88bc48dcc37a9413722c027b5c1","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var N = 1e6 + 5;\nvar p = new Int8Array( N );\n\np[0] = p[1] = 1;\n\nfor( var j = 2; j*2 < N; j++ )\n\tp[ j*2 ] = 1;\n\nfor( var i = 3, l=Math.sqrt(N); i < l; i+=2 )\n\tif( !p[i] )\n\t\tfor( var j = i*i; j < N; j+=i )\n\t\t\tp[ j ] = 1;\n\n\nreadline();\nvar ret = readline()\n\t\t\t.split(' ')\n\t\t\t.map(Math.sqrt)\n\t\t\t.map(function(v){\n\t\t\t\treturn v%1===0&&p[v]===0 ? 'YES' : 'NO';\n\t\t\t});\n\nprint(ret.join('\\n'));\n","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"c9c82d8a8e3bd5359a236ed4bd053386","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n\tN = 1e6 + 5,\n\tp = new Int8Array(N),\n\tq = {};\n\np[0] = p[1] = 1;\nq[4] = true;\n\nfor (i = 3; i < N; i += 2)\n\tif (!p[i]) {\n\t\tq[i * i] = true;\n\t\tfor (var j = i * i; j < N; j += i)\n\t\t\tp[j] = 1;\n\t}\n\nreadline();\nprint(readline().split(' ').map(function(v) {\n\treturn q[v] ? 'YES' : 'NO';\n}).join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"15a2cbd8af74e3815bd81bde5d24a89c","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n\tsqrt = Math.sqrt,\n\tN = 1e6 + 5,\n\tp = new Int8Array(N);\n\np[0] = p[1] = 1;\nfor (j = 4; j < N; j += 2)\n\tp[j] = 1;\n\nfor (i = 3, l = Math.sqrt(N); i < l; i += 2)\n\tif (!p[i])\n\t\tfor (var j = i * i; j < N; j += i)\n\t\t\tp[j] = 1;\n\nreadline();\nprint(readline().split(' ').map(function(v) {\n\tv = sqrt(+v);\n\treturn v % 1 === 0 && p[v] === 0 ? 'YES' : 'NO';\n}).join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"7473ae20802ee9311828efad640772e7","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var N = 1e6 + 5;\nvar p = new Int8Array( N );\n\np[0] = p[1] = 1;\n\nfor( var j = 2; j*2 < N; j++ )\n\tp[ j*2 ] = 1;\n\nfor( var i = 3; i < N; i+=2 )\n\tif( !p[i] )\n\t\tfor( var j = 2; j*i < N; j++ )\n\t\t\tp[ j*i ] = 1;\n\n\nreadline();\nvar ret = readline()\n\t\t\t.split(' ')\n\t\t\t.map(Math.sqrt)\n\t\t\t.map(function(v){\n\t\t\t\treturn p[v]===0 ? 'YES' : 'NO';\n\t\t\t});\n\nprint(ret.join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"70d5ffae5c963cc3486e9582cf97cbd8","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false\n});\nlet c = 0;\n\nrl.on('line', (d) => {\n  if (c === 0) {\n    c++;\n    return;\n  }\n\n  const arr = d.split(' ').map(Number);\n  let sum = arr.reduce((a, b) => a + b, 0);\n  let ans = 0;\n\n  arr.forEach(x => (sum - x) % 2 === 0 && ans++);\n\n  console.log(ans);\n\n  c++;\n});\n","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"4c59b4d43b59c8659bf274f3e29d01fe","code_uid":"7103d12585eae4b0d6c15fa106320c3d","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4c59b4d43b59c8659bf274f3e29d01fe","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['50\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['49\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['50\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['39\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['37\\r\\n']}, {'input': '8', 'time': ['30'], 'mem': ['0'], 'output': ['51\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['21\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['37\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['28\\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['0'], 'output': ['47\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['33\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['37\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['35\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['42\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['45\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['40\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['55\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['52\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['51\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['48\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['48\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['58\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['54\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['49\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['44\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['46\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['43\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['51\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['47\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var total = parseInt(readline());\nvar vals = readline().split(\" \").map(Number);\n\nvar ans = [];\n\nfor (var i = 0; i < vals.length; i++) {\n    ans[vals[i] - 1] = i + 1;\n} \n\nprint(ans.join(\" \"));","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"48bb148e2c4d003cad9d57e7b1ab78fb","code_uid":"08d33b1cc0592bf48bbfc92f372be4f3","difficulty":800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48bb148e2c4d003cad9d57e7b1ab78fb","hidden_unit_tests":"[{'input': '4\\r\\n2 3 4 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['4 1 2 3\\r\\n']}, {'input': '3\\r\\n1 3 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 3 2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 2\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 3 2 6 4 5 7 9 8 10\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 3 2 5 6 4 7 9 8 10\\r\\n']}, {'input': '5\\r\\n5 4 3 2 1\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['5 4 3 2 1\\r\\n']}, {'input': '20\\r\\n2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19\\r\\n']}, {'input': '21\\r\\n3 2 1 6 5 4 9 8 7 12 11 10 15 14 13 18 17 16 21 20 19\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3 2 1 6 5 4 9 8 7 12 11 10 15 14 13 18 17 16 21 20 19\\r\\n']}, {'input': '10\\r\\n3 4 5 6 7 8 9 10 1 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['9 10 1 2 3 4 5 6 7 8\\r\\n']}, {'input': '8\\r\\n1 5 3 7 2 6 4 8\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1 5 3 7 2 6 4 8\\r\\n']}, {'input': '50\\r\\n49 22 4 2 20 46 7 32 5 19 48 24 26 15 45 21 44 11 50 43 39 17 31 1 42 34 3 27 36 25 12 30 13 33 28 35 18 6 8 37 38 14 10 9 29 16 40 23 41 47\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['24 4 27 3 9 38 7 39 44 43 18 31 33 42 14 46 22 37 10 5 16 2 48 12 30 13 28 35 45 32 23 8 34 26 36 29 40 41 21 47 49 25 20 17 15 6 50 11 1 19\\r\\n']}, {'input': '34\\r\\n13 20 33 30 15 11 27 4 8 2 29 25 24 7 3 22 18 10 26 16 5 1 32 9 34 6 12 14 28 19 31 21 23 17\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['22 10 15 8 21 26 14 9 24 18 6 27 1 28 5 20 34 17 30 2 32 16 33 13 12 19 7 29 11 4 31 23 3 25\\r\\n']}, {'input': '92\\r\\n23 1 6 4 84 54 44 76 63 34 61 20 48 13 28 78 26 46 90 72 24 55 91 89 53 38 82 5 79 92 29 32 15 64 11 88 60 70 7 66 18 59 8 57 19 16 42 21 80 71 62 27 75 86 36 9 83 73 74 50 43 31 56 30 17 33 40 81 49 12 10 41 22 77 25 68 51 2 47 3 58 69 87 67 39 37 35 65 14 45 52 85\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 78 80 4 28 3 39 43 56 71 35 70 14 89 33 46 65 41 45 12 48 73 1 21 75 17 52 15 31 64 62 32 66 10 87 55 86 26 85 67 72 47 61 7 90 18 79 13 69 60 77 91 25 6 22 63 44 81 42 37 11 51 9 34 88 40 84 76 82 38 50 20 58 59 53 8 74 16 29 49 68 27 57 5 92 54 83 36 24 19 23 30\\r\\n']}, {'input': '49\\r\\n30 24 33 48 7 3 17 2 8 35 10 39 23 40 46 32 18 21 26 22 1 16 47 45 41 28 31 6 12 43 27 11 13 37 19 15 44 5 29 42 4 38 20 34 14 9 25 36 49\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['21 8 6 41 38 28 5 9 46 11 32 29 33 45 36 22 7 17 35 43 18 20 13 2 47 19 31 26 39 1 27 16 3 44 10 48 34 42 12 14 25 40 30 37 24 15 23 4 49\\r\\n']}, {'input': '12\\r\\n3 8 7 4 6 5 2 1 11 9 10 12\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['8 7 1 4 6 5 3 2 10 11 9 12\\r\\n']}, {'input': '78\\r\\n16 56 36 78 21 14 9 77 26 57 70 61 41 47 18 44 5 31 50 74 65 52 6 39 22 62 67 69 43 7 64 29 24 40 48 51 73 54 72 12 19 34 4 25 55 33 17 35 23 53 10 8 27 32 42 68 20 63 3 2 1 71 58 46 13 30 49 11 37 66 38 60 28 75 15 59 45 76\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['61 60 59 43 17 23 30 52 7 51 68 40 65 6 75 1 47 15 41 57 5 25 49 33 44 9 53 73 32 66 18 54 46 42 48 3 69 71 24 34 13 55 29 16 77 64 14 35 67 19 36 22 50 38 45 2 10 63 76 72 12 26 58 31 21 70 27 56 28 11 62 39 37 20 74 78 8 4\\r\\n']}, {'input': '64\\r\\n64 57 40 3 15 8 62 18 33 59 51 19 22 13 4 37 47 45 50 35 63 11 58 42 46 21 7 2 41 48 32 23 28 38 17 12 24 27 49 31 60 6 30 25 61 52 26 54 9 14 29 20 44 39 55 10 34 16 5 56 1 36 53 43\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['61 28 4 15 59 42 27 6 49 56 22 36 14 50 5 58 35 8 12 52 26 13 32 37 44 47 38 33 51 43 40 31 9 57 20 62 16 34 54 3 29 24 64 53 18 25 17 30 39 19 11 46 63 48 55 60 2 23 10 41 45 7 21 1\\r\\n']}, {'input': '49\\r\\n38 20 49 32 14 41 39 45 25 48 40 19 26 43 34 12 10 3 35 42 5 7 46 47 4 2 13 22 16 24 33 15 11 18 29 31 23 9 44 36 6 17 37 1 30 28 8 21 27\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['44 26 18 25 21 41 22 47 38 17 33 16 27 5 32 29 42 34 12 2 48 28 37 30 9 13 49 46 35 45 36 4 31 15 19 40 43 1 7 11 6 20 14 39 8 23 24 10 3\\r\\n']}, {'input': '78\\r\\n17 50 30 48 33 12 42 4 18 53 76 67 38 3 20 72 51 55 60 63 46 10 57 45 54 32 24 62 8 11 35 44 65 74 58 28 2 6 56 52 39 23 47 49 61 1 66 41 15 77 7 27 78 13 14 34 5 31 37 21 40 16 29 69 59 43 64 36 70 19 25 73 71 75 9 68 26 22\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['46 37 14 8 57 38 51 29 75 22 30 6 54 55 49 62 1 9 70 15 60 78 42 27 71 77 52 36 63 3 58 26 5 56 31 68 59 13 41 61 48 7 66 32 24 21 43 4 44 2 17 40 10 25 18 39 23 35 65 19 45 28 20 67 33 47 12 76 64 69 73 16 72 34 74 11 50 53\\r\\n']}, {'input': '29\\r\\n14 21 27 1 4 18 10 17 20 23 2 24 7 9 28 22 8 25 12 15 11 6 16 29 3 26 19 5 13\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4 11 25 5 28 22 13 17 14 7 21 19 29 1 20 23 8 6 27 9 2 16 10 12 18 26 3 15 24\\r\\n']}, {'input': '82\\r\\n6 1 10 75 28 66 61 81 78 63 17 19 58 34 49 12 67 50 41 44 3 15 59 38 51 72 36 11 46 29 18 64 27 23 13 53 56 68 2 25 47 40 69 54 42 5 60 55 4 16 24 79 57 20 7 73 32 80 76 52 82 37 26 31 65 8 39 62 33 71 30 9 77 43 48 74 70 22 14 45 35 21\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2 39 21 49 46 1 55 66 72 3 28 16 35 79 22 50 11 31 12 54 82 78 34 51 40 63 33 5 30 71 64 57 69 14 81 27 62 24 67 42 19 45 74 20 80 29 41 75 15 18 25 60 36 44 48 37 53 13 23 47 7 68 10 32 65 6 17 38 43 77 70 26 56 76 4 59 73 9 52 58 8 61\\r\\n']}, {'input': '82\\r\\n74 18 15 69 71 77 19 26 80 20 66 7 30 82 22 48 21 44 52 65 64 61 35 49 12 8 53 81 54 16 11 9 40 46 13 1 29 58 5 41 55 4 78 60 6 51 56 2 38 36 34 62 63 25 17 67 45 14 32 37 75 79 10 47 27 39 31 68 59 24 50 43 72 70 42 28 76 23 57 3 73 33\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['36 48 80 42 39 45 12 26 32 63 31 25 35 58 3 30 55 2 7 10 17 15 78 70 54 8 65 76 37 13 67 59 82 51 23 50 60 49 66 33 40 75 72 18 57 34 64 16 24 71 46 19 27 29 41 47 79 38 69 44 22 52 53 21 20 11 56 68 4 74 5 73 81 1 61 77 6 43 62 9 28 14\\r\\n']}, {'input': '45\\r\\n2 32 34 13 3 15 16 33 22 12 31 38 42 14 27 7 36 8 4 19 45 41 5 35 10 11 39 20 29 44 17 9 6 40 37 28 25 21 1 30 24 18 43 26 23\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['39 1 5 19 23 33 16 18 32 25 26 10 4 14 6 7 31 42 20 28 38 9 45 41 37 44 15 36 29 40 11 2 8 3 24 17 35 12 27 34 22 13 43 30 21\\r\\n']}, {'input': '45\\r\\n4 32 33 39 43 21 22 35 45 7 14 5 16 9 42 31 24 36 17 29 41 25 37 34 27 20 11 44 3 13 19 2 1 10 26 30 38 18 6 8 15 23 40 28 12\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['33 32 29 1 12 39 10 40 14 34 27 45 30 11 41 13 19 38 31 26 6 7 42 17 22 35 25 44 20 36 16 2 3 24 8 18 23 37 4 43 21 15 5 28 9\\r\\n']}, {'input': '74\\r\\n48 72 40 67 17 4 27 53 11 32 25 9 74 2 41 24 56 22 14 21 33 5 18 55 20 7 29 36 69 13 52 19 38 30 68 59 66 34 63 6 47 45 54 44 62 12 50 71 16 10 8 64 57 73 46 26 49 42 3 23 35 1 61 39 70 60 65 43 15 28 37 51 58 31\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['62 14 59 6 22 40 26 51 12 50 9 46 30 19 69 49 5 23 32 25 20 18 60 16 11 56 7 70 27 34 74 10 21 38 61 28 71 33 64 3 15 58 68 44 42 55 41 1 57 47 72 31 8 43 24 17 53 73 36 66 63 45 39 52 67 37 4 35 29 65 48 2 54 13\\r\\n']}, {'input': '47\\r\\n9 26 27 10 6 34 28 42 39 22 45 21 11 43 14 47 38 15 40 32 46 1 36 29 17 25 2 23 31 5 24 4 7 8 12 19 16 44 37 20 18 33 30 13 35 41 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['22 27 47 32 30 5 33 34 1 4 13 35 44 15 18 37 25 41 36 40 12 10 28 31 26 2 3 7 24 43 29 20 42 6 45 23 39 17 9 19 46 8 14 38 11 21 16\\r\\n']}, {'input': '49\\r\\n14 38 6 29 9 49 36 43 47 3 44 20 34 15 7 11 1 28 12 40 16 37 31 10 42 41 33 21 18 30 5 27 17 35 25 26 45 19 2 13 23 32 4 22 46 48 24 39 8\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['17 39 10 43 31 3 15 49 5 24 16 19 40 1 14 21 33 29 38 12 28 44 41 47 35 36 32 18 4 30 23 42 27 13 34 7 22 2 48 20 26 25 8 11 37 45 9 46 6\\r\\n']}, {'input': '100\\r\\n78 56 31 91 90 95 16 65 58 77 37 89 33 61 10 76 62 47 35 67 69 7 63 83 22 25 49 8 12 30 39 44 57 64 48 42 32 11 70 43 55 50 99 24 85 73 45 14 54 21 98 84 74 2 26 18 9 36 80 53 75 46 66 86 59 93 87 68 94 13 72 28 79 88 92 29 52 82 34 97 19 38 1 41 27 4 40 5 96 100 51 6 20 23 81 15 17 3 60 71\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['83 54 98 86 88 92 22 28 57 15 38 29 70 48 96 7 97 56 81 93 50 25 94 44 26 55 85 72 76 30 3 37 13 79 19 58 11 82 31 87 84 36 40 32 47 62 18 35 27 42 91 77 60 49 41 2 33 9 65 99 14 17 23 34 8 63 20 68 21 39 100 71 46 53 61 16 10 1 73 59 95 78 24 52 45 64 67 74 12 5 4 75 66 69 6 89 80 51 43 90\\r\\n']}, {'input': '22\\r\\n12 8 11 2 16 7 13 6 22 21 20 10 4 14 18 1 5 15 3 19 17 9\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['16 4 19 13 17 8 6 2 22 12 3 1 7 14 18 5 21 15 20 11 10 9\\r\\n']}, {'input': '72\\r\\n16 11 49 51 3 27 60 55 23 40 66 7 53 70 13 5 15 32 18 72 33 30 8 31 46 12 28 67 25 38 50 22 69 34 71 52 58 39 24 35 42 9 41 26 62 1 63 65 36 64 68 61 37 14 45 47 6 57 54 20 17 2 56 59 29 10 4 48 21 43 19 44\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['46 62 5 67 16 57 12 23 42 66 2 26 15 54 17 1 61 19 71 60 69 32 9 39 29 44 6 27 65 22 24 18 21 34 40 49 53 30 38 10 43 41 70 72 55 25 56 68 3 31 4 36 13 59 8 63 58 37 64 7 52 45 47 50 48 11 28 51 33 14 35 20\\r\\n']}, {'input': '63\\r\\n21 56 11 10 62 24 20 42 28 52 38 2 37 43 48 22 7 8 40 14 13 46 53 1 23 4 60 63 51 36 25 12 39 32 49 16 58 44 31 61 33 50 55 54 45 6 47 41 9 57 30 29 26 18 19 27 15 34 3 35 59 5 17\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['24 12 59 26 62 46 17 18 49 4 3 32 21 20 57 36 63 54 55 7 1 16 25 6 31 53 56 9 52 51 39 34 41 58 60 30 13 11 33 19 48 8 14 38 45 22 47 15 35 42 29 10 23 44 43 2 50 37 61 27 40 5 28\\r\\n']}, {'input': '18\\r\\n2 16 8 4 18 12 3 6 5 9 10 15 11 17 14 13 1 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['17 1 7 4 9 8 18 3 10 11 13 6 16 15 12 2 14 5\\r\\n']}, {'input': '47\\r\\n6 9 10 41 25 3 4 37 20 1 36 22 29 27 11 24 43 31 12 17 34 42 38 39 13 2 7 21 18 5 15 35 44 26 33 46 19 40 30 14 28 23 47 32 45 8 16\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10 26 6 7 30 1 27 46 2 3 15 19 25 40 31 47 20 29 37 9 28 12 42 16 5 34 14 41 13 39 18 44 35 21 32 11 8 23 24 38 4 22 17 33 45 36 43\\r\\n']}, {'input': '96\\r\\n41 91 48 88 29 57 1 19 44 43 37 5 10 75 25 63 30 78 76 53 8 92 18 70 39 17 49 60 9 16 3 34 86 59 23 79 55 45 72 51 28 33 96 40 26 54 6 32 89 61 85 74 7 82 52 31 64 66 94 95 11 22 2 73 35 13 42 71 14 47 84 69 50 67 58 12 77 46 38 68 15 36 20 93 27 90 83 56 87 4 21 24 81 62 80 65\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['7 63 31 90 12 47 53 21 29 13 61 76 66 69 81 30 26 23 8 83 91 62 35 92 15 45 85 41 5 17 56 48 42 32 65 82 11 79 25 44 1 67 10 9 38 78 70 3 27 73 40 55 20 46 37 88 6 75 34 28 50 94 16 57 96 58 74 80 72 24 68 39 64 52 14 19 77 18 36 95 93 54 87 71 51 33 89 4 49 86 2 22 84 59 60 43\\r\\n']}, {'input': '73\\r\\n67 24 39 22 23 20 48 34 42 40 19 70 65 69 64 21 53 11 59 15 26 10 30 33 72 29 55 25 56 71 8 9 57 49 41 61 13 12 6 27 66 36 47 50 73 60 2 37 7 4 51 17 1 46 14 62 35 3 45 63 43 58 54 32 31 5 28 44 18 52 68 38 16\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['53 47 58 50 66 39 49 31 32 22 18 38 37 55 20 73 52 69 11 6 16 4 5 2 28 21 40 67 26 23 65 64 24 8 57 42 48 72 3 10 35 9 61 68 59 54 43 7 34 44 51 70 17 63 27 29 33 62 19 46 36 56 60 15 13 41 1 71 14 12 30 25 45\\r\\n']}, {'input': '81\\r\\n25 2 78 40 12 80 69 13 49 43 17 33 23 54 32 61 77 66 27 71 24 26 42 55 60 9 5 30 7 37 45 63 53 11 38 44 68 34 28 52 67 22 57 46 47 50 8 16 79 62 4 36 20 14 73 64 6 76 35 74 58 10 29 81 59 31 19 1 75 39 70 18 41 21 72 65 3 48 15 56 51\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['68 2 77 51 27 57 29 47 26 62 34 5 8 54 79 48 11 72 67 53 74 42 13 21 1 22 19 39 63 28 66 15 12 38 59 52 30 35 70 4 73 23 10 36 31 44 45 78 9 46 81 40 33 14 24 80 43 61 65 25 16 50 32 56 76 18 41 37 7 71 20 75 55 60 69 58 17 3 49 6 64\\r\\n']}, {'input': '12\\r\\n12 3 1 5 11 6 7 10 2 8 9 4\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3 9 2 12 4 6 7 10 11 8 5 1\\r\\n']}, {'input': '47\\r\\n7 21 41 18 40 31 12 28 24 14 43 23 33 10 19 38 26 8 34 15 29 44 5 13 39 25 3 27 20 42 35 9 2 1 30 46 36 32 4 22 37 45 6 47 11 16 17\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['34 33 27 39 23 43 1 18 32 14 45 7 24 10 20 46 47 4 15 29 2 40 12 9 26 17 28 8 21 35 6 38 13 19 31 37 41 16 25 5 3 30 11 22 42 36 44\\r\\n']}, {'input': '8\\r\\n1 3 5 2 4 8 6 7\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1 4 2 5 3 7 8 6\\r\\n']}, {'input': '38\\r\\n28 8 2 33 20 32 26 29 23 31 15 38 11 37 18 21 22 19 4 34 1 35 16 7 17 6 27 30 36 12 9 24 25 13 5 3 10 14\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['21 3 36 19 35 26 24 2 31 37 13 30 34 38 11 23 25 15 18 5 16 17 9 32 33 7 27 1 8 28 10 6 4 20 22 29 14 12\\r\\n']}, {'input': '10\\r\\n2 9 4 6 10 1 7 5 3 8\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['6 1 9 3 8 4 7 10 2 5\\r\\n']}, {'input': '23\\r\\n20 11 15 1 5 12 23 9 2 22 13 19 16 14 7 4 8 21 6 17 18 10 3\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4 9 23 16 5 19 15 17 8 22 2 6 11 14 3 13 20 21 12 1 18 10 7\\r\\n']}, {'input': '10\\r\\n2 4 9 3 6 8 10 5 1 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['9 1 4 2 8 5 10 6 3 7\\r\\n']}, {'input': '55\\r\\n9 48 23 49 11 24 4 22 34 32 17 45 39 13 14 21 19 25 2 31 37 7 55 36 20 51 5 12 54 10 35 40 43 1 46 18 53 41 38 26 29 50 3 42 52 27 8 28 47 33 6 16 30 44 15\\r\\n', 'time': ['62'], 'mem': ['0'], 'output': ['34 19 43 7 27 51 22 47 1 30 5 28 14 15 55 52 11 36 17 25 16 8 3 6 18 40 46 48 41 53 20 10 50 9 31 24 21 39 13 32 38 44 33 54 12 35 49 2 4 42 26 45 37 29 23\\r\\n']}, {'input': '58\\r\\n49 13 12 54 2 38 56 11 33 25 26 19 28 8 23 41 20 36 46 55 15 35 9 7 32 37 58 6 3 14 47 31 40 30 53 44 4 50 29 34 10 43 39 57 5 22 27 45 51 42 24 16 18 21 52 17 48 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['58 5 29 37 45 28 24 14 23 41 8 3 2 30 21 52 56 53 12 17 54 46 15 51 10 11 47 13 39 34 32 25 9 40 22 18 26 6 43 33 16 50 42 36 48 19 31 57 1 38 49 55 35 4 20 7 44 27\\r\\n']}, {'input': '34\\r\\n20 25 2 3 33 29 1 16 14 7 21 9 32 31 6 26 22 4 27 23 24 10 34 12 19 15 5 18 28 17 13 8 11 30\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['7 3 4 18 27 15 10 32 12 22 33 24 31 9 26 8 30 28 25 1 11 17 20 21 2 16 19 29 6 34 14 13 5 23\\r\\n']}, {'input': '53\\r\\n47 29 46 25 23 13 7 31 33 4 38 11 35 16 42 14 15 43 34 39 28 18 6 45 30 1 40 20 2 37 5 32 24 12 44 26 27 3 19 51 36 21 22 9 10 50 41 48 49 53 8 17 52\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['26 29 38 10 31 23 7 51 44 45 12 34 6 16 17 14 52 22 39 28 42 43 5 33 4 36 37 21 2 25 8 32 9 19 13 41 30 11 20 27 47 15 18 35 24 3 1 48 49 46 40 53 50\\r\\n']}, {'input': '99\\r\\n77 87 90 48 53 38 68 6 28 57 35 82 63 71 60 41 3 12 86 65 10 59 22 67 33 74 93 27 24 1 61 43 25 4 51 52 15 88 9 31 30 42 89 49 23 21 29 32 46 73 37 16 5 69 56 26 92 64 20 54 75 14 98 13 94 2 95 7 36 66 58 8 50 78 84 45 11 96 76 62 97 80 40 39 47 85 34 79 83 17 91 72 19 44 70 81 55 99 18\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['30 66 17 34 53 8 68 72 39 21 77 18 64 62 37 52 90 99 93 59 46 23 45 29 33 56 28 9 47 41 40 48 25 87 11 69 51 6 84 83 16 42 32 94 76 49 85 4 44 73 35 36 5 60 97 55 10 71 22 15 31 80 13 58 20 70 24 7 54 95 14 92 50 26 61 79 1 74 88 82 96 12 89 75 86 19 2 38 43 3 91 57 27 65 67 78 81 63 98\\r\\n']}, {'input': '32\\r\\n17 29 2 6 30 8 26 7 1 27 10 9 13 24 31 21 15 19 22 18 4 11 25 28 32 3 23 12 5 14 20 16\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['9 3 26 21 29 4 8 6 12 11 22 28 13 30 17 32 1 20 18 31 16 19 27 14 23 7 10 24 2 5 15 25\\r\\n']}, {'input': '65\\r\\n18 40 1 60 17 19 4 6 12 49 28 58 2 25 13 14 64 56 61 34 62 30 59 51 26 8 33 63 36 48 46 7 43 21 31 27 11 44 29 5 32 23 35 9 53 57 52 50 15 38 42 3 54 65 55 41 20 24 22 47 45 10 39 16 37\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3 13 52 7 40 8 32 26 44 62 37 9 15 16 49 64 5 1 6 57 34 59 42 58 14 25 36 11 39 22 35 41 27 20 43 29 65 50 63 2 56 51 33 38 61 31 60 30 10 48 24 47 45 53 55 18 46 12 23 4 19 21 28 17 54\\r\\n']}, {'input': '71\\r\\n35 50 55 58 25 32 26 40 63 34 44 53 24 18 37 7 64 27 56 65 1 19 2 43 42 14 57 47 22 13 59 61 39 67 30 45 54 38 33 48 6 5 3 69 36 21 41 4 16 46 20 17 15 12 10 70 68 23 60 31 52 29 66 28 51 49 62 11 8 9 71\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['21 23 43 48 42 41 16 69 70 55 68 54 30 26 53 49 52 14 22 51 46 29 58 13 5 7 18 64 62 35 60 6 39 10 1 45 15 38 33 8 47 25 24 11 36 50 28 40 66 2 65 61 12 37 3 19 27 4 31 59 32 67 9 17 20 63 34 57 44 56 71\\r\\n']}, {'input': '74\\r\\n33 8 42 63 64 61 31 74 11 50 68 14 36 25 57 30 7 44 21 15 6 9 23 59 46 3 73 16 62 51 40 60 41 54 5 39 35 28 48 4 58 12 66 69 13 26 71 1 24 19 29 52 37 2 20 43 18 72 17 56 34 38 65 67 27 10 47 70 53 32 45 55 49 22\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['48 54 26 40 35 21 17 2 22 66 9 42 45 12 20 28 59 57 50 55 19 74 23 49 14 46 65 38 51 16 7 70 1 61 37 13 53 62 36 31 33 3 56 18 71 25 67 39 73 10 30 52 69 34 72 60 15 41 24 32 6 29 4 5 63 43 64 11 44 68 47 58 27 8\\r\\n']}, {'input': '96\\r\\n78 10 82 46 38 91 77 69 2 27 58 80 79 44 59 41 6 31 76 11 42 48 51 37 19 87 43 25 52 32 1 39 63 29 21 65 53 74 92 16 15 95 90 83 30 73 71 5 50 17 96 33 86 60 67 64 20 26 61 40 55 88 94 93 9 72 47 57 14 45 22 3 54 68 13 24 4 7 56 81 89 70 49 8 84 28 18 62 35 36 75 23 66 85 34 12\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['31 9 72 77 48 17 78 84 65 2 20 96 75 69 41 40 50 87 25 57 35 71 92 76 28 58 10 86 34 45 18 30 52 95 89 90 24 5 32 60 16 21 27 14 70 4 67 22 83 49 23 29 37 73 61 79 68 11 15 54 59 88 33 56 36 93 55 74 8 82 47 66 46 38 91 19 7 1 13 12 80 3 44 85 94 53 26 62 81 43 6 39 64 63 42 51\\r\\n']}, {'input': '7\\r\\n2 1 5 7 3 4 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 1 5 6 3 7 4\\r\\n']}, {'input': '51\\r\\n8 33 37 2 16 22 24 30 4 9 5 15 27 3 18 39 31 26 10 17 46 41 25 14 6 1 29 48 36 20 51 49 21 43 19 13 38 50 47 34 11 23 28 12 42 7 32 40 44 45 35\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['26 4 14 9 11 25 46 1 10 19 41 44 36 24 12 5 20 15 35 30 33 6 42 7 23 18 13 43 27 8 17 47 2 40 51 29 3 37 16 48 22 45 34 49 50 21 39 28 32 38 31\\r\\n']}, {'input': '27\\r\\n12 14 7 3 20 21 25 13 22 15 23 4 2 24 10 17 19 8 26 11 27 18 9 5 6 1 16\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['26 13 4 12 24 25 3 18 23 15 20 1 8 2 10 27 16 22 17 5 6 9 11 14 7 19 21\\r\\n']}, {'input': '71\\r\\n51 13 20 48 54 23 24 64 14 62 71 67 57 53 3 30 55 43 33 25 39 40 66 6 46 18 5 19 61 16 32 68 70 41 60 44 29 49 27 69 50 38 10 17 45 56 9 21 26 63 28 35 7 59 1 65 2 15 8 11 12 34 37 47 58 22 31 4 36 42 52\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['55 57 15 68 27 24 53 59 47 43 60 61 2 9 58 30 44 26 28 3 48 66 6 7 20 49 39 51 37 16 67 31 19 62 52 69 63 42 21 22 34 70 18 36 45 25 64 4 38 41 1 71 14 5 17 46 13 65 54 35 29 10 50 8 56 23 12 32 40 33 11\\r\\n']}, {'input': '9\\r\\n8 5 2 6 1 9 4 7 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5 3 9 7 2 4 8 1 6\\r\\n']}, {'input': '29\\r\\n10 24 11 5 26 25 2 9 22 15 8 14 29 21 4 1 23 17 3 12 13 16 18 28 19 20 7 6 27\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['16 7 19 15 4 28 27 11 8 1 3 20 21 12 10 22 18 23 25 26 14 9 17 2 6 5 29 24 13\\r\\n']}, {'input': '60\\r\\n39 25 42 4 55 60 16 18 47 1 11 40 7 50 19 35 49 54 12 3 30 38 2 58 17 26 45 6 33 43 37 32 52 36 15 23 27 59 24 20 28 14 8 9 13 29 44 46 41 21 5 48 51 22 31 56 57 53 10 34\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10 23 20 4 51 28 13 43 44 59 11 19 45 42 35 7 25 8 15 40 50 54 36 39 2 26 37 41 46 21 55 32 29 60 16 34 31 22 1 12 49 3 30 47 27 48 9 52 17 14 53 33 58 18 5 56 57 24 38 6\\r\\n']}, {'input': '50\\r\\n37 45 22 5 12 21 28 24 18 47 20 25 8 50 14 2 34 43 11 16 49 41 48 1 19 31 39 46 32 23 15 42 3 35 38 30 44 26 10 9 40 36 7 17 33 4 27 6 13 29\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['24 16 33 46 4 48 43 13 40 39 19 5 49 15 31 20 44 9 25 11 6 3 30 8 12 38 47 7 50 36 26 29 45 17 34 42 1 35 27 41 22 32 18 37 2 28 10 23 21 14\\r\\n']}, {'input': '30\\r\\n8 29 28 16 17 25 27 15 21 11 6 20 2 13 1 30 5 4 24 10 14 3 23 18 26 9 12 22 19 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15 13 22 18 17 11 30 1 26 20 10 27 14 21 8 4 5 24 29 12 9 28 23 19 6 25 7 3 2 16\\r\\n']}, {'input': '46\\r\\n15 2 44 43 38 19 31 42 4 37 29 30 24 45 27 41 8 20 33 7 35 3 18 46 36 26 1 28 21 40 16 22 32 11 14 13 12 9 25 39 10 6 23 17 5 34\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['27 2 22 9 45 42 20 17 38 41 34 37 36 35 1 31 44 23 6 18 29 32 43 13 39 26 15 28 11 12 7 33 19 46 21 25 10 5 40 30 16 8 4 3 14 24\\r\\n']}, {'input': '9\\r\\n4 8 6 5 3 9 2 7 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['9 7 5 1 4 3 8 2 6\\r\\n']}, {'input': '46\\r\\n31 30 33 23 45 7 36 8 11 3 32 39 41 20 1 28 6 27 18 24 17 5 16 37 26 13 22 14 2 38 15 46 9 4 19 21 12 44 10 35 25 34 42 43 40 29\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15 29 10 34 22 17 6 8 33 39 9 37 26 28 31 23 21 19 35 14 36 27 4 20 41 25 18 16 46 2 1 11 3 42 40 7 24 30 12 45 13 43 44 38 5 32\\r\\n']}, {'input': '66\\r\\n27 12 37 48 46 21 34 58 38 28 66 2 64 32 44 31 13 36 40 15 19 11 22 5 30 29 6 7 61 39 20 42 23 54 51 33 50 9 60 8 57 45 49 10 62 41 59 3 55 63 52 24 25 26 43 56 65 4 16 14 1 35 18 17 53 47\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['61 12 48 58 24 27 28 40 38 44 22 2 17 60 20 59 64 63 21 31 6 23 33 52 53 54 1 10 26 25 16 14 36 7 62 18 3 9 30 19 46 32 55 15 42 5 66 4 43 37 35 51 65 34 49 56 41 8 47 39 29 45 50 13 57 11\\r\\n']}, {'input': '13\\r\\n3 12 9 2 8 5 13 4 11 1 10 7 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['10 4 1 8 6 13 12 5 3 11 9 2 7\\r\\n']}, {'input': '80\\r\\n21 25 56 50 20 61 7 74 51 69 8 2 46 57 45 71 14 52 17 43 9 30 70 78 31 10 38 13 23 15 37 79 6 16 77 73 80 4 49 48 18 28 26 58 33 41 64 22 54 72 59 60 40 63 53 27 1 5 75 67 62 34 19 39 68 65 44 55 3 32 11 42 76 12 35 47 66 36 24 29\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['57 12 69 38 58 33 7 11 21 26 71 74 28 17 30 34 19 41 63 5 1 48 29 79 2 43 56 42 80 22 25 70 45 62 75 78 31 27 64 53 46 72 20 67 15 13 76 40 39 4 9 18 55 49 68 3 14 44 51 52 6 61 54 47 66 77 60 65 10 23 16 50 36 8 59 73 35 24 32 37\\r\\n']}, {'input': '63\\r\\n9 49 53 25 40 46 43 51 54 22 58 16 23 26 10 47 5 27 2 8 61 59 19 35 63 56 28 20 34 4 62 38 6 55 36 31 57 15 29 33 1 48 50 37 7 30 18 42 32 52 12 41 14 21 45 11 24 17 39 13 44 60 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['41 19 63 30 17 33 45 20 1 15 56 51 60 53 38 12 58 47 23 28 54 10 13 57 4 14 18 27 39 46 36 49 40 29 24 35 44 32 59 5 52 48 7 61 55 6 16 42 2 43 8 50 3 9 34 26 37 11 22 62 21 31 25\\r\\n']}, {'input': '26\\r\\n11 4 19 13 17 9 2 24 6 5 22 23 14 15 3 25 16 8 18 10 21 1 12 26 7 20\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['22 7 15 2 10 9 25 18 6 20 1 23 4 13 14 17 5 19 3 26 21 11 12 8 16 24\\r\\n']}, {'input': '69\\r\\n40 22 11 66 4 27 31 29 64 53 37 55 51 2 7 36 18 52 6 1 30 21 17 20 14 9 59 62 49 68 3 50 65 57 44 5 67 46 33 13 34 15 24 48 63 58 38 25 41 35 16 54 32 10 60 61 39 12 69 8 23 45 26 47 56 43 28 19 42\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['20 14 31 5 36 19 15 60 26 54 3 58 40 25 42 51 23 17 68 24 22 2 61 43 48 63 6 67 8 21 7 53 39 41 50 16 11 47 57 1 49 69 66 35 62 38 64 44 29 32 13 18 10 52 12 65 34 46 27 55 56 28 45 9 33 4 37 30 59\\r\\n']}, {'input': '6\\r\\n4 3 6 5 1 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5 6 2 1 4 3\\r\\n']}, {'input': '9\\r\\n7 8 5 3 1 4 2 9 6\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['5 7 4 6 3 9 1 2 8\\r\\n']}, {'input': '41\\r\\n27 24 16 30 25 8 32 2 26 20 39 33 41 22 40 14 36 9 28 4 34 11 31 23 19 18 17 35 3 10 6 13 5 15 29 38 7 21 1 12 37\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['39 8 29 20 33 31 37 6 18 30 22 40 32 16 34 3 27 26 25 10 38 14 24 2 5 9 1 19 35 4 23 7 12 21 28 17 41 36 11 15 13\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '20\\r\\n2 6 4 18 7 10 17 13 16 8 14 9 20 5 19 12 1 3 15 11\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['17 1 18 3 14 2 5 10 12 6 20 16 8 11 19 9 7 4 15 13\\r\\n']}, {'input': '2\\r\\n2 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2 1\\r\\n']}, {'input': '60\\r\\n2 4 31 51 11 7 34 20 3 14 18 23 48 54 15 36 38 60 49 40 5 33 41 26 55 58 10 8 13 9 27 30 37 1 21 59 44 57 35 19 46 43 42 45 12 22 39 32 24 16 6 56 53 52 25 17 47 29 50 28\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['34 1 9 2 21 51 6 28 30 27 5 45 29 10 15 50 56 11 40 8 35 46 12 49 55 24 31 60 58 32 3 48 22 7 39 16 33 17 47 20 23 43 42 37 44 41 57 13 19 59 4 54 53 14 25 52 38 26 36 18\\r\\n']}, {'input': '14\\r\\n14 6 3 12 11 2 7 1 10 9 8 5 4 13\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['8 6 3 13 12 2 7 11 10 9 5 4 14 1\\r\\n']}, {'input': '81\\r\\n13 43 79 8 7 21 73 46 63 4 62 78 56 11 70 68 61 53 60 49 16 27 59 47 69 5 22 44 77 57 52 48 1 9 72 81 28 55 58 33 51 18 31 17 41 20 42 3 32 54 19 2 75 34 64 10 65 50 30 29 67 12 71 66 74 15 26 23 6 38 25 35 37 24 80 76 40 45 39 36 14\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['33 52 48 10 26 69 5 4 34 56 14 62 1 81 66 21 44 42 51 46 6 27 68 74 71 67 22 37 60 59 43 49 40 54 72 80 73 70 79 77 45 47 2 28 78 8 24 32 20 58 41 31 18 50 38 13 30 39 23 19 17 11 9 55 57 64 61 16 25 15 63 35 7 65 53 76 29 12 3 75 36\\r\\n']}, {'input': '42\\r\\n41 11 10 8 21 37 32 19 31 25 1 15 36 5 6 27 4 3 13 7 16 17 2 23 34 24 38 28 12 20 30 42 18 26 39 35 33 40 9 14 22 29\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['11 23 18 17 14 15 20 4 39 3 2 29 19 40 12 21 22 33 8 30 5 41 24 26 10 34 16 28 42 31 9 7 37 25 36 13 6 27 35 38 1 32\\r\\n']}, {'input': '97\\r\\n20 6 76 42 4 18 35 59 39 63 27 7 66 47 61 52 15 36 88 93 19 33 10 92 1 34 46 86 78 57 51 94 77 29 26 73 41 2 58 97 43 65 17 74 21 49 25 3 91 82 95 12 96 13 84 90 69 24 72 37 16 55 54 71 64 62 48 89 11 70 80 67 30 40 44 85 53 83 79 9 56 45 75 87 22 14 81 68 8 38 60 50 28 23 31 32 5\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['25 38 48 5 97 2 12 89 80 23 69 52 54 86 17 61 43 6 21 1 45 85 94 58 47 35 11 93 34 73 95 96 22 26 7 18 60 90 9 74 37 4 41 75 82 27 14 67 46 92 31 16 77 63 62 81 30 39 8 91 15 66 10 65 42 13 72 88 57 70 64 59 36 44 83 3 33 29 79 71 87 50 78 55 76 28 84 19 68 56 49 24 20 32 51 53 40\\r\\n']}, {'input': '62\\r\\n15 27 46 6 8 51 14 56 23 48 42 49 52 22 20 31 29 12 47 3 62 34 37 35 32 57 19 25 5 60 61 38 18 10 11 55 45 53 17 30 9 36 4 50 41 16 44 28 40 59 24 1 13 39 26 7 33 58 2 43 21 54\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['52 59 20 43 29 4 56 5 41 34 35 18 53 7 1 46 39 33 27 15 61 14 9 51 28 55 2 48 17 40 16 25 57 22 24 42 23 32 54 49 45 11 60 47 37 3 19 10 12 44 6 13 38 62 36 8 26 58 50 30 31 21\\r\\n']}, {'input': '61\\r\\n35 27 4 61 52 32 41 46 14 37 17 54 55 31 11 26 44 49 15 30 9 50 45 39 7 38 53 3 58 40 13 56 18 19 28 6 43 5 21 42 20 34 2 25 36 12 33 57 16 60 1 8 59 10 22 23 24 48 51 47 29\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['51 43 28 3 38 36 25 52 21 54 15 46 31 9 19 49 11 33 34 41 39 55 56 57 44 16 2 35 61 20 14 6 47 42 1 45 10 26 24 30 7 40 37 17 23 8 60 58 18 22 59 5 27 12 13 32 48 29 53 50 4\\r\\n']}, {'input': '59\\r\\n31 26 36 15 17 19 10 53 11 34 13 46 55 9 44 7 8 37 32 52 47 25 51 22 35 39 41 4 43 24 5 27 20 57 6 38 3 28 21 40 50 18 14 56 33 45 12 2 49 59 54 29 16 48 42 58 1 30 23\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['57 48 37 28 31 35 16 17 14 7 9 47 11 43 4 53 5 42 6 33 39 24 59 30 22 2 32 38 52 58 1 19 45 10 25 3 18 36 26 40 27 55 29 15 46 12 21 54 49 41 23 20 8 51 13 44 34 56 50\\r\\n']}, {'input': '10\\r\\n2 10 7 4 1 5 8 6 3 9\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['5 1 9 4 6 8 3 7 10 2\\r\\n']}, {'input': '14\\r\\n14 2 1 8 6 12 11 10 9 7 3 4 5 13\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3 2 11 12 13 5 10 4 9 8 7 6 14 1\\r\\n']}, {'input': '43\\r\\n28 38 15 14 31 42 27 30 19 33 43 26 22 29 18 32 3 13 1 8 35 34 4 12 11 17 41 21 5 25 39 37 20 23 7 24 16 10 40 9 6 36 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['19 43 17 23 29 41 35 20 40 38 25 24 18 4 3 37 26 15 9 33 28 13 34 36 30 12 7 1 14 8 5 16 10 22 21 42 32 2 31 39 27 6 11\\r\\n']}, {'input': '86\\r\\n39 11 20 31 28 76 29 64 35 21 41 71 12 82 5 37 80 73 38 26 79 75 23 15 59 45 47 6 3 62 50 49 51 22 2 65 86 60 70 42 74 17 1 30 55 44 8 66 81 27 57 77 43 13 54 32 72 46 48 56 14 34 78 52 36 85 24 19 69 83 25 61 7 4 84 33 63 58 18 40 68 10 67 9 16 53\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['43 35 29 74 15 28 73 47 84 82 2 13 54 61 24 85 42 79 68 3 10 34 23 67 71 20 50 5 7 44 4 56 76 62 9 65 16 19 1 80 11 40 53 46 26 58 27 59 32 31 33 64 86 55 45 60 51 78 25 38 72 30 77 8 36 48 83 81 69 39 12 57 18 41 22 6 52 63 21 17 49 14 70 75 66 37\\r\\n']}, {'input': '99\\r\\n65 78 56 98 33 24 61 40 29 93 1 64 57 22 25 52 67 95 50 3 31 15 90 68 71 83 38 36 6 46 89 26 4 87 14 88 72 37 23 43 63 12 80 96 5 34 73 86 9 48 92 62 99 10 16 20 66 27 28 2 82 70 30 94 49 8 84 69 18 60 58 59 44 39 21 7 91 76 54 19 75 85 74 47 55 32 97 77 51 13 35 79 45 42 11 41 17 81 53\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['11 60 20 33 45 29 76 66 49 54 95 42 90 35 22 55 97 69 80 56 75 14 39 6 15 32 58 59 9 63 21 86 5 46 91 28 38 27 74 8 96 94 40 73 93 30 84 50 65 19 89 16 99 79 85 3 13 71 72 70 7 52 41 12 1 57 17 24 68 62 25 37 47 83 81 78 88 2 92 43 98 61 26 67 82 48 34 36 31 23 77 51 10 64 18 44 87 4 53\\r\\n']}, {'input': '100\\r\\n42 23 48 88 36 6 18 70 96 1 34 40 46 22 39 55 85 93 45 67 71 75 59 9 21 3 86 63 65 68 20 38 73 31 84 90 50 51 56 95 72 33 49 19 83 76 54 74 100 30 17 98 15 94 4 97 5 99 81 27 92 32 89 12 13 91 87 29 60 11 52 43 35 58 10 25 16 80 28 2 44 61 8 82 66 69 41 24 57 62 78 37 79 77 53 7 14 47 26 64\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['10 80 26 55 57 6 96 83 24 75 70 64 65 97 53 77 51 7 44 31 25 14 2 88 76 99 60 79 68 50 34 62 42 11 73 5 92 32 15 12 87 1 72 81 19 13 98 3 43 37 38 71 95 47 16 39 89 74 23 69 82 90 28 100 29 85 20 30 86 8 21 41 33 48 22 46 94 91 93 78 59 84 45 35 17 27 67 4 63 36 66 61 18 54 40 9 56 52 58 49\\r\\n']}, {'input': '99\\r\\n8 68 94 75 71 60 57 58 6 11 5 48 65 41 49 12 46 72 95 59 13 70 74 7 84 62 17 36 55 76 38 79 2 85 23 10 32 99 87 50 83 28 54 91 53 51 1 3 97 81 21 89 93 78 61 26 82 96 4 98 25 40 31 44 24 47 30 52 14 16 39 27 9 29 45 18 67 63 37 43 90 66 19 69 88 22 92 77 34 42 73 80 56 64 20 35 15 33 86\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['47 33 48 59 11 9 24 1 73 36 10 16 21 69 97 70 27 76 83 95 51 86 35 65 61 56 72 42 74 67 63 37 98 89 96 28 79 31 71 62 14 90 80 64 75 17 66 12 15 40 46 68 45 43 29 93 7 8 20 6 55 26 78 94 13 82 77 2 84 22 5 18 91 23 4 30 88 54 32 92 50 57 41 25 34 99 39 85 52 81 44 87 53 3 19 58 49 60 38\\r\\n']}, {'input': '99\\r\\n12 99 88 13 7 19 74 47 23 90 16 29 26 11 58 60 64 98 37 18 82 67 72 46 51 85 17 92 87 20 77 36 78 71 57 35 80 54 73 15 14 62 97 45 31 79 94 56 76 96 28 63 8 44 38 86 49 2 52 66 61 59 10 43 55 50 22 34 83 53 95 40 81 21 30 42 27 3 5 41 1 70 69 25 93 48 65 6 24 89 91 33 39 68 9 4 32 84 75\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['81 58 78 96 79 88 5 53 95 63 14 1 4 41 40 11 27 20 6 30 74 67 9 89 84 13 77 51 12 75 45 97 92 68 36 32 19 55 93 72 80 76 64 54 44 24 8 86 57 66 25 59 70 38 65 48 35 15 62 16 61 42 52 17 87 60 22 94 83 82 34 23 39 7 99 49 31 33 46 37 73 21 69 98 26 56 29 3 90 10 91 28 85 47 71 50 43 18 2\\r\\n']}, {'input': '99\\r\\n20 79 26 75 99 69 98 47 93 62 18 42 43 38 90 66 67 8 13 84 76 58 81 60 64 46 56 23 78 17 86 36 19 52 85 39 48 27 96 49 37 95 5 31 10 24 12 1 80 35 92 33 16 68 57 54 32 29 45 88 72 77 4 87 97 89 59 3 21 22 61 94 83 15 44 34 70 91 55 9 51 50 73 11 14 6 40 7 63 25 2 82 41 65 28 74 71 30 53\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['48 91 68 63 43 86 88 18 80 45 84 47 19 85 74 53 30 11 33 1 69 70 28 46 90 3 38 95 58 98 44 57 52 76 50 32 41 14 36 87 93 12 13 75 59 26 8 37 40 82 81 34 99 56 79 27 55 22 67 24 71 10 89 25 94 16 17 54 6 77 97 61 83 96 4 21 62 29 2 49 23 92 73 20 35 31 64 60 66 15 78 51 9 72 42 39 65 7 5\\r\\n']}, {'input': '99\\r\\n74 20 9 1 60 85 65 13 4 25 40 99 5 53 64 3 36 31 73 44 55 50 45 63 98 51 68 6 47 37 71 82 88 34 84 18 19 12 93 58 86 7 11 46 90 17 33 27 81 69 42 59 56 32 95 52 76 61 96 62 78 43 66 21 49 97 75 14 41 72 89 16 30 79 22 23 15 83 91 38 48 2 87 26 28 80 94 70 54 92 57 10 8 35 67 77 29 24 39\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['4 82 16 9 13 28 42 93 3 92 43 38 8 68 77 72 46 36 37 2 64 75 76 98 10 84 48 85 97 73 18 54 47 34 94 17 30 80 99 11 69 51 62 20 23 44 29 81 65 22 26 56 14 89 21 53 91 40 52 5 58 60 24 15 7 63 95 27 50 88 31 70 19 1 67 57 96 61 74 86 49 32 78 35 6 41 83 33 71 45 79 90 39 87 55 59 66 25 12\\r\\n']}, {'input': '99\\r\\n50 94 2 18 69 90 59 83 75 68 77 97 39 78 25 7 16 9 49 4 42 89 44 48 17 96 61 70 3 10 5 81 56 57 88 6 98 1 46 67 92 37 11 30 85 41 8 36 51 29 20 71 19 79 74 93 43 34 55 40 38 21 64 63 32 24 72 14 12 86 82 15 65 23 66 22 28 53 13 26 95 99 91 52 76 27 60 45 47 33 73 84 31 35 54 80 58 62 87\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['38 3 29 20 31 36 16 47 18 30 43 69 79 68 72 17 25 4 53 51 62 76 74 66 15 80 86 77 50 44 93 65 90 58 94 48 42 61 13 60 46 21 57 23 88 39 89 24 19 1 49 84 78 95 59 33 34 97 7 87 27 98 64 63 73 75 40 10 5 28 52 67 91 55 9 85 11 14 54 96 32 71 8 92 45 70 99 35 22 6 83 41 56 2 81 26 12 37 82\\r\\n']}, {'input': '99\\r\\n19 93 14 34 39 37 33 15 52 88 7 43 69 27 9 77 94 31 48 22 63 70 79 17 50 6 81 8 76 58 23 74 86 11 57 62 41 87 75 51 12 18 68 56 95 3 80 83 84 29 24 61 71 78 59 96 20 85 90 28 45 36 38 97 1 49 40 98 44 67 13 73 72 91 47 10 30 54 35 42 4 2 92 26 64 60 53 21 5 82 46 32 55 66 16 89 99 65 25\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['65 82 46 81 89 26 11 28 15 76 34 41 71 3 8 95 24 42 1 57 88 20 31 51 99 84 14 60 50 77 18 92 7 4 79 62 6 63 5 67 37 80 12 69 61 91 75 19 66 25 40 9 87 78 93 44 35 30 55 86 52 36 21 85 98 94 70 43 13 22 53 73 72 32 39 29 16 54 23 47 27 90 48 49 58 33 38 10 96 59 74 83 2 17 45 56 64 68 97\\r\\n']}, {'input': '99\\r\\n86 25 50 51 62 39 41 67 44 20 45 14 80 88 66 7 36 59 13 84 78 58 96 75 2 43 48 47 69 12 19 98 22 38 28 55 11 76 68 46 53 70 85 34 16 33 91 30 8 40 74 60 94 82 87 32 37 4 5 10 89 73 90 29 35 26 23 57 27 65 24 3 9 83 77 72 6 31 15 92 93 79 64 18 63 42 56 1 52 97 17 81 71 21 49 99 54 95 61\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['88 25 72 58 59 77 16 49 73 60 37 30 19 12 79 45 91 84 31 10 94 33 67 71 2 66 69 35 64 48 78 56 46 44 65 17 57 34 6 50 7 86 26 9 11 40 28 27 95 3 4 89 41 97 36 87 68 22 18 52 99 5 85 83 70 15 8 39 29 42 93 76 62 51 24 38 75 21 82 13 92 54 74 20 43 1 55 14 61 63 47 80 81 53 98 23 90 32 96\\r\\n']}, {'input': '100\\r\\n66 44 99 15 43 79 28 33 88 90 49 68 82 38 9 74 4 58 29 81 31 94 10 42 89 21 63 40 62 61 18 6 84 72 48 25 67 69 71 85 98 34 83 70 65 78 91 77 93 41 23 24 87 11 55 12 59 73 36 97 7 14 26 39 30 27 45 20 50 17 53 2 57 47 95 56 75 19 37 96 16 35 8 3 76 60 13 86 5 32 64 80 46 51 54 100 1 22 52 92\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['97 72 84 17 89 32 61 83 15 23 54 56 87 62 4 81 70 31 78 68 26 98 51 52 36 63 66 7 19 65 21 90 8 42 82 59 79 14 64 28 50 24 5 2 67 93 74 35 11 69 94 99 71 95 55 76 73 18 57 86 30 29 27 91 45 1 37 12 38 44 39 34 58 16 77 85 48 46 6 92 20 13 43 33 40 88 53 9 25 10 47 100 49 22 75 80 60 41 3 96\\r\\n']}, {'input': '99\\r\\n3 73 32 37 25 15 93 63 85 8 91 78 80 5 39 48 46 7 83 70 23 96 9 29 77 53 30 20 56 50 13 45 21 76 87 99 65 31 16 18 14 72 51 28 43 2 81 34 38 40 66 54 74 26 71 4 61 17 58 24 22 33 49 36 42 11 12 55 60 27 62 90 79 92 94 68 1 52 84 41 86 35 69 75 47 10 64 88 97 98 67 19 89 95 59 82 57 44 6\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['77 46 1 56 14 99 18 10 23 86 66 67 31 41 6 39 58 40 92 28 33 61 21 60 5 54 70 44 24 27 38 3 62 48 82 64 4 49 15 50 80 65 45 98 32 17 85 16 63 30 43 78 26 52 68 29 97 59 95 69 57 71 8 87 37 51 91 76 83 20 55 42 2 53 84 34 25 12 73 13 47 96 19 79 9 81 35 88 93 72 11 74 7 75 94 22 89 90 36\\r\\n']}, {'input': '100\\r\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"readline();\nn = readline().split(' ');\nvar f = []\nfor(i= 0 ; i < n.length ; i++)\n{ f[parseInt(n[i])] = i + 1;}\nprint(f.join(' '))\n\n\t \n ","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"48bb148e2c4d003cad9d57e7b1ab78fb","code_uid":"23ed5dfe51f32defb614a83b19cb330d","difficulty":800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48bb148e2c4d003cad9d57e7b1ab78fb","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4 1 2 3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1 3 2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1 2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1 3 2 5 6 4 7 9 8 10\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['5 4 3 2 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3 2 1 6 5 4 9 8 7 12 11 10 15 14 13 18 17 16 21 20 19\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9 10 1 2 3 4 5 6 7 8\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['1 5 3 7 2 6 4 8\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['24 4 27 3 9 38 7 39 44 43 18 31 33 42 14 46 22 37 10 5 16 2 48 12 30 13 28 35 45 32 23 8 34 26 36 29 40 41 21 47 49 25 20 17 15 6 50 11 1 19\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['22 10 15 8 21 26 14 9 24 18 6 27 1 28 5 20 34 17 30 2 32 16 33 13 12 19 7 29 11 4 31 23 3 25\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['2 78 80 4 28 3 39 43 56 71 35 70 14 89 33 46 65 41 45 12 48 73 1 21 75 17 52 15 31 64 62 32 66 10 87 55 86 26 85 67 72 47 61 7 90 18 79 13 69 60 77 91 25 6 22 63 44 81 42 37 11 51 9 34 88 40 84 76 82 38 50 20 58 59 53 8 74 16 29 49 68 27 57 5 92 54 83 36 24 19 23 30\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['21 8 6 41 38 28 5 9 46 11 32 29 33 45 36 22 7 17 35 43 18 20 13 2 47 19 31 26 39 1 27 16 3 44 10 48 34 42 12 14 25 40 30 37 24 15 23 4 49\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['8 7 1 4 6 5 3 2 10 11 9 12\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['61 60 59 43 17 23 30 52 7 51 68 40 65 6 75 1 47 15 41 57 5 25 49 33 44 9 53 73 32 66 18 54 46 42 48 3 69 71 24 34 13 55 29 16 77 64 14 35 67 19 36 22 50 38 45 2 10 63 76 72 12 26 58 31 21 70 27 56 28 11 62 39 37 20 74 78 8 4\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['61 28 4 15 59 42 27 6 49 56 22 36 14 50 5 58 35 8 12 52 26 13 32 37 44 47 38 33 51 43 40 31 9 57 20 62 16 34 54 3 29 24 64 53 18 25 17 30 39 19 11 46 63 48 55 60 2 23 10 41 45 7 21 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['44 26 18 25 21 41 22 47 38 17 33 16 27 5 32 29 42 34 12 2 48 28 37 30 9 13 49 46 35 45 36 4 31 15 19 40 43 1 7 11 6 20 14 39 8 23 24 10 3\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['46 37 14 8 57 38 51 29 75 22 30 6 54 55 49 62 1 9 70 15 60 78 42 27 71 77 52 36 63 3 58 26 5 56 31 68 59 13 41 61 48 7 66 32 24 21 43 4 44 2 17 40 10 25 18 39 23 35 65 19 45 28 20 67 33 47 12 76 64 69 73 16 72 34 74 11 50 53\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['4 11 25 5 28 22 13 17 14 7 21 19 29 1 20 23 8 6 27 9 2 16 10 12 18 26 3 15 24\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['2 39 21 49 46 1 55 66 72 3 28 16 35 79 22 50 11 31 12 54 82 78 34 51 40 63 33 5 30 71 64 57 69 14 81 27 62 24 67 42 19 45 74 20 80 29 41 75 15 18 25 60 36 44 48 37 53 13 23 47 7 68 10 32 65 6 17 38 43 77 70 26 56 76 4 59 73 9 52 58 8 61\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['36 48 80 42 39 45 12 26 32 63 31 25 35 58 3 30 55 2 7 10 17 15 78 70 54 8 65 76 37 13 67 59 82 51 23 50 60 49 66 33 40 75 72 18 57 34 64 16 24 71 46 19 27 29 41 47 79 38 69 44 22 52 53 21 20 11 56 68 4 74 5 73 81 1 61 77 6 43 62 9 28 14\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['39 1 5 19 23 33 16 18 32 25 26 10 4 14 6 7 31 42 20 28 38 9 45 41 37 44 15 36 29 40 11 2 8 3 24 17 35 12 27 34 22 13 43 30 21\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['33 32 29 1 12 39 10 40 14 34 27 45 30 11 41 13 19 38 31 26 6 7 42 17 22 35 25 44 20 36 16 2 3 24 8 18 23 37 4 43 21 15 5 28 9\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['62 14 59 6 22 40 26 51 12 50 9 46 30 19 69 49 5 23 32 25 20 18 60 16 11 56 7 70 27 34 74 10 21 38 61 28 71 33 64 3 15 58 68 44 42 55 41 1 57 47 72 31 8 43 24 17 53 73 36 66 63 45 39 52 67 37 4 35 29 65 48 2 54 13\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['22 27 47 32 30 5 33 34 1 4 13 35 44 15 18 37 25 41 36 40 12 10 28 31 26 2 3 7 24 43 29 20 42 6 45 23 39 17 9 19 46 8 14 38 11 21 16\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17 39 10 43 31 3 15 49 5 24 16 19 40 1 14 21 33 29 38 12 28 44 41 47 35 36 32 18 4 30 23 42 27 13 34 7 22 2 48 20 26 25 8 11 37 45 9 46 6\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['83 54 98 86 88 92 22 28 57 15 38 29 70 48 96 7 97 56 81 93 50 25 94 44 26 55 85 72 76 30 3 37 13 79 19 58 11 82 31 87 84 36 40 32 47 62 18 35 27 42 91 77 60 49 41 2 33 9 65 99 14 17 23 34 8 63 20 68 21 39 100 71 46 53 61 16 10 1 73 59 95 78 24 52 45 64 67 74 12 5 4 75 66 69 6 89 80 51 43 90\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['16 4 19 13 17 8 6 2 22 12 3 1 7 14 18 5 21 15 20 11 10 9\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['46 62 5 67 16 57 12 23 42 66 2 26 15 54 17 1 61 19 71 60 69 32 9 39 29 44 6 27 65 22 24 18 21 34 40 49 53 30 38 10 43 41 70 72 55 25 56 68 3 31 4 36 13 59 8 63 58 37 64 7 52 45 47 50 48 11 28 51 33 14 35 20\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['24 12 59 26 62 46 17 18 49 4 3 32 21 20 57 36 63 54 55 7 1 16 25 6 31 53 56 9 52 51 39 34 41 58 60 30 13 11 33 19 48 8 14 38 45 22 47 15 35 42 29 10 23 44 43 2 50 37 61 27 40 5 28\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['17 1 7 4 9 8 18 3 10 11 13 6 16 15 12 2 14 5\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10 26 6 7 30 1 27 46 2 3 15 19 25 40 31 47 20 29 37 9 28 12 42 16 5 34 14 41 13 39 18 44 35 21 32 11 8 23 24 38 4 22 17 33 45 36 43\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['7 63 31 90 12 47 53 21 29 13 61 76 66 69 81 30 26 23 8 83 91 62 35 92 15 45 85 41 5 17 56 48 42 32 65 82 11 79 25 44 1 67 10 9 38 78 70 3 27 73 40 55 20 46 37 88 6 75 34 28 50 94 16 57 96 58 74 80 72 24 68 39 64 52 14 19 77 18 36 95 93 54 87 71 51 33 89 4 49 86 2 22 84 59 60 43\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['53 47 58 50 66 39 49 31 32 22 18 38 37 55 20 73 52 69 11 6 16 4 5 2 28 21 40 67 26 23 65 64 24 8 57 42 48 72 3 10 35 9 61 68 59 54 43 7 34 44 51 70 17 63 27 29 33 62 19 46 36 56 60 15 13 41 1 71 14 12 30 25 45\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['68 2 77 51 27 57 29 47 26 62 34 5 8 54 79 48 11 72 67 53 74 42 13 21 1 22 19 39 63 28 66 15 12 38 59 52 30 35 70 4 73 23 10 36 31 44 45 78 9 46 81 40 33 14 24 80 43 61 65 25 16 50 32 56 76 18 41 37 7 71 20 75 55 60 69 58 17 3 49 6 64\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3 9 2 12 4 6 7 10 11 8 5 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['34 33 27 39 23 43 1 18 32 14 45 7 24 10 20 46 47 4 15 29 2 40 12 9 26 17 28 8 21 35 6 38 13 19 31 37 41 16 25 5 3 30 11 22 42 36 44\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['1 4 2 5 3 7 8 6\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['21 3 36 19 35 26 24 2 31 37 13 30 34 38 11 23 25 15 18 5 16 17 9 32 33 7 27 1 8 28 10 6 4 20 22 29 14 12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6 1 9 3 8 4 7 10 2 5\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['4 9 23 16 5 19 15 17 8 22 2 6 11 14 3 13 20 21 12 1 18 10 7\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9 1 4 2 8 5 10 6 3 7\\r\\n']}, {'input': '5', 'time': ['62'], 'mem': ['0'], 'output': ['34 19 43 7 27 51 22 47 1 30 5 28 14 15 55 52 11 36 17 25 16 8 3 6 18 40 46 48 41 53 20 10 50 9 31 24 21 39 13 32 38 44 33 54 12 35 49 2 4 42 26 45 37 29 23\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['58 5 29 37 45 28 24 14 23 41 8 3 2 30 21 52 56 53 12 17 54 46 15 51 10 11 47 13 39 34 32 25 9 40 22 18 26 6 43 33 16 50 42 36 48 19 31 57 1 38 49 55 35 4 20 7 44 27\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['7 3 4 18 27 15 10 32 12 22 33 24 31 9 26 8 30 28 25 1 11 17 20 21 2 16 19 29 6 34 14 13 5 23\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['26 29 38 10 31 23 7 51 44 45 12 34 6 16 17 14 52 22 39 28 42 43 5 33 4 36 37 21 2 25 8 32 9 19 13 41 30 11 20 27 47 15 18 35 24 3 1 48 49 46 40 53 50\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['30 66 17 34 53 8 68 72 39 21 77 18 64 62 37 52 90 99 93 59 46 23 45 29 33 56 28 9 47 41 40 48 25 87 11 69 51 6 84 83 16 42 32 94 76 49 85 4 44 73 35 36 5 60 97 55 10 71 22 15 31 80 13 58 20 70 24 7 54 95 14 92 50 26 61 79 1 74 88 82 96 12 89 75 86 19 2 38 43 3 91 57 27 65 67 78 81 63 98\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['9 3 26 21 29 4 8 6 12 11 22 28 13 30 17 32 1 20 18 31 16 19 27 14 23 7 10 24 2 5 15 25\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['3 13 52 7 40 8 32 26 44 62 37 9 15 16 49 64 5 1 6 57 34 59 42 58 14 25 36 11 39 22 35 41 27 20 43 29 65 50 63 2 56 51 33 38 61 31 60 30 10 48 24 47 45 53 55 18 46 12 23 4 19 21 28 17 54\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['21 23 43 48 42 41 16 69 70 55 68 54 30 26 53 49 52 14 22 51 46 29 58 13 5 7 18 64 62 35 60 6 39 10 1 45 15 38 33 8 47 25 24 11 36 50 28 40 66 2 65 61 12 37 3 19 27 4 31 59 32 67 9 17 20 63 34 57 44 56 71\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['48 54 26 40 35 21 17 2 22 66 9 42 45 12 20 28 59 57 50 55 19 74 23 49 14 46 65 38 51 16 7 70 1 61 37 13 53 62 36 31 33 3 56 18 71 25 67 39 73 10 30 52 69 34 72 60 15 41 24 32 6 29 4 5 63 43 64 11 44 68 47 58 27 8\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['31 9 72 77 48 17 78 84 65 2 20 96 75 69 41 40 50 87 25 57 35 71 92 76 28 58 10 86 34 45 18 30 52 95 89 90 24 5 32 60 16 21 27 14 70 4 67 22 83 49 23 29 37 73 61 79 68 11 15 54 59 88 33 56 36 93 55 74 8 82 47 66 46 38 91 19 7 1 13 12 80 3 44 85 94 53 26 62 81 43 6 39 64 63 42 51\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2 1 5 6 3 7 4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['26 4 14 9 11 25 46 1 10 19 41 44 36 24 12 5 20 15 35 30 33 6 42 7 23 18 13 43 27 8 17 47 2 40 51 29 3 37 16 48 22 45 34 49 50 21 39 28 32 38 31\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['26 13 4 12 24 25 3 18 23 15 20 1 8 2 10 27 16 22 17 5 6 9 11 14 7 19 21\\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['0'], 'output': ['55 57 15 68 27 24 53 59 47 43 60 61 2 9 58 30 44 26 28 3 48 66 6 7 20 49 39 51 37 16 67 31 19 62 52 69 63 42 21 22 34 70 18 36 45 25 64 4 38 41 1 71 14 5 17 46 13 65 54 35 29 10 50 8 56 23 12 32 40 33 11\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['5 3 9 7 2 4 8 1 6\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['16 7 19 15 4 28 27 11 8 1 3 20 21 12 10 22 18 23 25 26 14 9 17 2 6 5 29 24 13\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['10 23 20 4 51 28 13 43 44 59 11 19 45 42 35 7 25 8 15 40 50 54 36 39 2 26 37 41 46 21 55 32 29 60 16 34 31 22 1 12 49 3 30 47 27 48 9 52 17 14 53 33 58 18 5 56 57 24 38 6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['24 16 33 46 4 48 43 13 40 39 19 5 49 15 31 20 44 9 25 11 6 3 30 8 12 38 47 7 50 36 26 29 45 17 34 42 1 35 27 41 22 32 18 37 2 28 10 23 21 14\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['15 13 22 18 17 11 30 1 26 20 10 27 14 21 8 4 5 24 29 12 9 28 23 19 6 25 7 3 2 16\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['27 2 22 9 45 42 20 17 38 41 34 37 36 35 1 31 44 23 6 18 29 32 43 13 39 26 15 28 11 12 7 33 19 46 21 25 10 5 40 30 16 8 4 3 14 24\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['9 7 5 1 4 3 8 2 6\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['15 29 10 34 22 17 6 8 33 39 9 37 26 28 31 23 21 19 35 14 36 27 4 20 41 25 18 16 46 2 1 11 3 42 40 7 24 30 12 45 13 43 44 38 5 32\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['61 12 48 58 24 27 28 40 38 44 22 2 17 60 20 59 64 63 21 31 6 23 33 52 53 54 1 10 26 25 16 14 36 7 62 18 3 9 30 19 46 32 55 15 42 5 66 4 43 37 35 51 65 34 49 56 41 8 47 39 29 45 50 13 57 11\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['10 4 1 8 6 13 12 5 3 11 9 2 7\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['57 12 69 38 58 33 7 11 21 26 71 74 28 17 30 34 19 41 63 5 1 48 29 79 2 43 56 42 80 22 25 70 45 62 75 78 31 27 64 53 46 72 20 67 15 13 76 40 39 4 9 18 55 49 68 3 14 44 51 52 6 61 54 47 66 77 60 65 10 23 16 50 36 8 59 73 35 24 32 37\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['41 19 63 30 17 33 45 20 1 15 56 51 60 53 38 12 58 47 23 28 54 10 13 57 4 14 18 27 39 46 36 49 40 29 24 35 44 32 59 5 52 48 7 61 55 6 16 42 2 43 8 50 3 9 34 26 37 11 22 62 21 31 25\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['22 7 15 2 10 9 25 18 6 20 1 23 4 13 14 17 5 19 3 26 21 11 12 8 16 24\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['20 14 31 5 36 19 15 60 26 54 3 58 40 25 42 51 23 17 68 24 22 2 61 43 48 63 6 67 8 21 7 53 39 41 50 16 11 47 57 1 49 69 66 35 62 38 64 44 29 32 13 18 10 52 12 65 34 46 27 55 56 28 45 9 33 4 37 30 59\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['5 6 2 1 4 3\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['5 7 4 6 3 9 1 2 8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['39 8 29 20 33 31 37 6 18 30 22 40 32 16 34 3 27 26 25 10 38 14 24 2 5 9 1 19 35 4 23 7 12 21 28 17 41 36 11 15 13\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['17 1 18 3 14 2 5 10 12 6 20 16 8 11 19 9 7 4 15 13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2 1\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['34 1 9 2 21 51 6 28 30 27 5 45 29 10 15 50 56 11 40 8 35 46 12 49 55 24 31 60 58 32 3 48 22 7 39 16 33 17 47 20 23 43 42 37 44 41 57 13 19 59 4 54 53 14 25 52 38 26 36 18\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8 6 3 13 12 2 7 11 10 9 5 4 14 1\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['33 52 48 10 26 69 5 4 34 56 14 62 1 81 66 21 44 42 51 46 6 27 68 74 71 67 22 37 60 59 43 49 40 54 72 80 73 70 79 77 45 47 2 28 78 8 24 32 20 58 41 31 18 50 38 13 30 39 23 19 17 11 9 55 57 64 61 16 25 15 63 35 7 65 53 76 29 12 3 75 36\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['11 23 18 17 14 15 20 4 39 3 2 29 19 40 12 21 22 33 8 30 5 41 24 26 10 34 16 28 42 31 9 7 37 25 36 13 6 27 35 38 1 32\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['25 38 48 5 97 2 12 89 80 23 69 52 54 86 17 61 43 6 21 1 45 85 94 58 47 35 11 93 34 73 95 96 22 26 7 18 60 90 9 74 37 4 41 75 82 27 14 67 46 92 31 16 77 63 62 81 30 39 8 91 15 66 10 65 42 13 72 88 57 70 64 59 36 44 83 3 33 29 79 71 87 50 78 55 76 28 84 19 68 56 49 24 20 32 51 53 40\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['52 59 20 43 29 4 56 5 41 34 35 18 53 7 1 46 39 33 27 15 61 14 9 51 28 55 2 48 17 40 16 25 57 22 24 42 23 32 54 49 45 11 60 47 37 3 19 10 12 44 6 13 38 62 36 8 26 58 50 30 31 21\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['51 43 28 3 38 36 25 52 21 54 15 46 31 9 19 49 11 33 34 41 39 55 56 57 44 16 2 35 61 20 14 6 47 42 1 45 10 26 24 30 7 40 37 17 23 8 60 58 18 22 59 5 27 12 13 32 48 29 53 50 4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['57 48 37 28 31 35 16 17 14 7 9 47 11 43 4 53 5 42 6 33 39 24 59 30 22 2 32 38 52 58 1 19 45 10 25 3 18 36 26 40 27 55 29 15 46 12 21 54 49 41 23 20 8 51 13 44 34 56 50\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5 1 9 4 6 8 3 7 10 2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3 2 11 12 13 5 10 4 9 8 7 6 14 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['19 43 17 23 29 41 35 20 40 38 25 24 18 4 3 37 26 15 9 33 28 13 34 36 30 12 7 1 14 8 5 16 10 22 21 42 32 2 31 39 27 6 11\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['43 35 29 74 15 28 73 47 84 82 2 13 54 61 24 85 42 79 68 3 10 34 23 67 71 20 50 5 7 44 4 56 76 62 9 65 16 19 1 80 11 40 53 46 26 58 27 59 32 31 33 64 86 55 45 60 51 78 25 38 72 30 77 8 36 48 83 81 69 39 12 57 18 41 22 6 52 63 21 17 49 14 70 75 66 37\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['11 60 20 33 45 29 76 66 49 54 95 42 90 35 22 55 97 69 80 56 75 14 39 6 15 32 58 59 9 63 21 86 5 46 91 28 38 27 74 8 96 94 40 73 93 30 84 50 65 19 89 16 99 79 85 3 13 71 72 70 7 52 41 12 1 57 17 24 68 62 25 37 47 83 81 78 88 2 92 43 98 61 26 67 82 48 34 36 31 23 77 51 10 64 18 44 87 4 53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['10 80 26 55 57 6 96 83 24 75 70 64 65 97 53 77 51 7 44 31 25 14 2 88 76 99 60 79 68 50 34 62 42 11 73 5 92 32 15 12 87 1 72 81 19 13 98 3 43 37 38 71 95 47 16 39 89 74 23 69 82 90 28 100 29 85 20 30 86 8 21 41 33 48 22 46 94 91 93 78 59 84 45 35 17 27 67 4 63 36 66 61 18 54 40 9 56 52 58 49\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['47 33 48 59 11 9 24 1 73 36 10 16 21 69 97 70 27 76 83 95 51 86 35 65 61 56 72 42 74 67 63 37 98 89 96 28 79 31 71 62 14 90 80 64 75 17 66 12 15 40 46 68 45 43 29 93 7 8 20 6 55 26 78 94 13 82 77 2 84 22 5 18 91 23 4 30 88 54 32 92 50 57 41 25 34 99 39 85 52 81 44 87 53 3 19 58 49 60 38\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['81 58 78 96 79 88 5 53 95 63 14 1 4 41 40 11 27 20 6 30 74 67 9 89 84 13 77 51 12 75 45 97 92 68 36 32 19 55 93 72 80 76 64 54 44 24 8 86 57 66 25 59 70 38 65 48 35 15 62 16 61 42 52 17 87 60 22 94 83 82 34 23 39 7 99 49 31 33 46 37 73 21 69 98 26 56 29 3 90 10 91 28 85 47 71 50 43 18 2\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['48 91 68 63 43 86 88 18 80 45 84 47 19 85 74 53 30 11 33 1 69 70 28 46 90 3 38 95 58 98 44 57 52 76 50 32 41 14 36 87 93 12 13 75 59 26 8 37 40 82 81 34 99 56 79 27 55 22 67 24 71 10 89 25 94 16 17 54 6 77 97 61 83 96 4 21 62 29 2 49 23 92 73 20 35 31 64 60 66 15 78 51 9 72 42 39 65 7 5\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4 82 16 9 13 28 42 93 3 92 43 38 8 68 77 72 46 36 37 2 64 75 76 98 10 84 48 85 97 73 18 54 47 34 94 17 30 80 99 11 69 51 62 20 23 44 29 81 65 22 26 56 14 89 21 53 91 40 52 5 58 60 24 15 7 63 95 27 50 88 31 70 19 1 67 57 96 61 74 86 49 32 78 35 6 41 83 33 71 45 79 90 39 87 55 59 66 25 12\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['38 3 29 20 31 36 16 47 18 30 43 69 79 68 72 17 25 4 53 51 62 76 74 66 15 80 86 77 50 44 93 65 90 58 94 48 42 61 13 60 46 21 57 23 88 39 89 24 19 1 49 84 78 95 59 33 34 97 7 87 27 98 64 63 73 75 40 10 5 28 52 67 91 55 9 85 11 14 54 96 32 71 8 92 45 70 99 35 22 6 83 41 56 2 81 26 12 37 82\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['65 82 46 81 89 26 11 28 15 76 34 41 71 3 8 95 24 42 1 57 88 20 31 51 99 84 14 60 50 77 18 92 7 4 79 62 6 63 5 67 37 80 12 69 61 91 75 19 66 25 40 9 87 78 93 44 35 30 55 86 52 36 21 85 98 94 70 43 13 22 53 73 72 32 39 29 16 54 23 47 27 90 48 49 58 33 38 10 96 59 74 83 2 17 45 56 64 68 97\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['88 25 72 58 59 77 16 49 73 60 37 30 19 12 79 45 91 84 31 10 94 33 67 71 2 66 69 35 64 48 78 56 46 44 65 17 57 34 6 50 7 86 26 9 11 40 28 27 95 3 4 89 41 97 36 87 68 22 18 52 99 5 85 83 70 15 8 39 29 42 93 76 62 51 24 38 75 21 82 13 92 54 74 20 43 1 55 14 61 63 47 80 81 53 98 23 90 32 96\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['97 72 84 17 89 32 61 83 15 23 54 56 87 62 4 81 70 31 78 68 26 98 51 52 36 63 66 7 19 65 21 90 8 42 82 59 79 14 64 28 50 24 5 2 67 93 74 35 11 69 94 99 71 95 55 76 73 18 57 86 30 29 27 91 45 1 37 12 38 44 39 34 58 16 77 85 48 46 6 92 20 13 43 33 40 88 53 9 25 10 47 100 49 22 75 80 60 41 3 96\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['77 46 1 56 14 99 18 10 23 86 66 67 31 41 6 39 58 40 92 28 33 61 21 60 5 54 70 44 24 27 38 3 62 48 82 64 4 49 15 50 80 65 45 98 32 17 85 16 63 30 43 78 26 52 68 29 97 59 95 69 57 71 8 87 37 51 91 76 83 20 55 42 2 53 84 34 25 12 73 13 47 96 19 79 9 81 35 88 93 72 11 74 7 75 94 22 89 90 36\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\/\/var input = \"4\\n2 3 4 1\";\n\/\/var index = 0;\n\/\/\n\/\/function readline(){\n\/\/    var data = input.split('\\n');\n\/\/    if(index < data.length)\n\/\/        return data[index++];\n\/\/}\n\/\/\n\/\/function print(output){\n\/\/    console.log(output);\n\/\/}\n\nfunction main(){\n    readline();\n    var arr = readline().split(' ');\n    var ans = new Array(arr.length + 1);\n    var str = \"\";\n    for(var i = 0; i < arr.length; i++)\n        ans[arr[i]] = i + 1;\n    for(var i = 1; i < ans.length; i++)\n        str += ans[i] + \" \";\n    print(str);\n}\nmain();","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"48bb148e2c4d003cad9d57e7b1ab78fb","code_uid":"442c460d379bd6360049f6f44d122ba4","difficulty":800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48bb148e2c4d003cad9d57e7b1ab78fb","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['4 1 2 3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1 3 2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1 2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1 3 2 5 6 4 7 9 8 10\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['5 4 3 2 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3 2 1 6 5 4 9 8 7 12 11 10 15 14 13 18 17 16 21 20 19\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9 10 1 2 3 4 5 6 7 8\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['1 5 3 7 2 6 4 8\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['24 4 27 3 9 38 7 39 44 43 18 31 33 42 14 46 22 37 10 5 16 2 48 12 30 13 28 35 45 32 23 8 34 26 36 29 40 41 21 47 49 25 20 17 15 6 50 11 1 19\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['22 10 15 8 21 26 14 9 24 18 6 27 1 28 5 20 34 17 30 2 32 16 33 13 12 19 7 29 11 4 31 23 3 25\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['2 78 80 4 28 3 39 43 56 71 35 70 14 89 33 46 65 41 45 12 48 73 1 21 75 17 52 15 31 64 62 32 66 10 87 55 86 26 85 67 72 47 61 7 90 18 79 13 69 60 77 91 25 6 22 63 44 81 42 37 11 51 9 34 88 40 84 76 82 38 50 20 58 59 53 8 74 16 29 49 68 27 57 5 92 54 83 36 24 19 23 30\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['21 8 6 41 38 28 5 9 46 11 32 29 33 45 36 22 7 17 35 43 18 20 13 2 47 19 31 26 39 1 27 16 3 44 10 48 34 42 12 14 25 40 30 37 24 15 23 4 49\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['8 7 1 4 6 5 3 2 10 11 9 12\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['61 60 59 43 17 23 30 52 7 51 68 40 65 6 75 1 47 15 41 57 5 25 49 33 44 9 53 73 32 66 18 54 46 42 48 3 69 71 24 34 13 55 29 16 77 64 14 35 67 19 36 22 50 38 45 2 10 63 76 72 12 26 58 31 21 70 27 56 28 11 62 39 37 20 74 78 8 4\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['61 28 4 15 59 42 27 6 49 56 22 36 14 50 5 58 35 8 12 52 26 13 32 37 44 47 38 33 51 43 40 31 9 57 20 62 16 34 54 3 29 24 64 53 18 25 17 30 39 19 11 46 63 48 55 60 2 23 10 41 45 7 21 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['44 26 18 25 21 41 22 47 38 17 33 16 27 5 32 29 42 34 12 2 48 28 37 30 9 13 49 46 35 45 36 4 31 15 19 40 43 1 7 11 6 20 14 39 8 23 24 10 3\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['46 37 14 8 57 38 51 29 75 22 30 6 54 55 49 62 1 9 70 15 60 78 42 27 71 77 52 36 63 3 58 26 5 56 31 68 59 13 41 61 48 7 66 32 24 21 43 4 44 2 17 40 10 25 18 39 23 35 65 19 45 28 20 67 33 47 12 76 64 69 73 16 72 34 74 11 50 53\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['4 11 25 5 28 22 13 17 14 7 21 19 29 1 20 23 8 6 27 9 2 16 10 12 18 26 3 15 24\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['2 39 21 49 46 1 55 66 72 3 28 16 35 79 22 50 11 31 12 54 82 78 34 51 40 63 33 5 30 71 64 57 69 14 81 27 62 24 67 42 19 45 74 20 80 29 41 75 15 18 25 60 36 44 48 37 53 13 23 47 7 68 10 32 65 6 17 38 43 77 70 26 56 76 4 59 73 9 52 58 8 61\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['36 48 80 42 39 45 12 26 32 63 31 25 35 58 3 30 55 2 7 10 17 15 78 70 54 8 65 76 37 13 67 59 82 51 23 50 60 49 66 33 40 75 72 18 57 34 64 16 24 71 46 19 27 29 41 47 79 38 69 44 22 52 53 21 20 11 56 68 4 74 5 73 81 1 61 77 6 43 62 9 28 14\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['39 1 5 19 23 33 16 18 32 25 26 10 4 14 6 7 31 42 20 28 38 9 45 41 37 44 15 36 29 40 11 2 8 3 24 17 35 12 27 34 22 13 43 30 21\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['33 32 29 1 12 39 10 40 14 34 27 45 30 11 41 13 19 38 31 26 6 7 42 17 22 35 25 44 20 36 16 2 3 24 8 18 23 37 4 43 21 15 5 28 9\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['62 14 59 6 22 40 26 51 12 50 9 46 30 19 69 49 5 23 32 25 20 18 60 16 11 56 7 70 27 34 74 10 21 38 61 28 71 33 64 3 15 58 68 44 42 55 41 1 57 47 72 31 8 43 24 17 53 73 36 66 63 45 39 52 67 37 4 35 29 65 48 2 54 13\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['22 27 47 32 30 5 33 34 1 4 13 35 44 15 18 37 25 41 36 40 12 10 28 31 26 2 3 7 24 43 29 20 42 6 45 23 39 17 9 19 46 8 14 38 11 21 16\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17 39 10 43 31 3 15 49 5 24 16 19 40 1 14 21 33 29 38 12 28 44 41 47 35 36 32 18 4 30 23 42 27 13 34 7 22 2 48 20 26 25 8 11 37 45 9 46 6\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['83 54 98 86 88 92 22 28 57 15 38 29 70 48 96 7 97 56 81 93 50 25 94 44 26 55 85 72 76 30 3 37 13 79 19 58 11 82 31 87 84 36 40 32 47 62 18 35 27 42 91 77 60 49 41 2 33 9 65 99 14 17 23 34 8 63 20 68 21 39 100 71 46 53 61 16 10 1 73 59 95 78 24 52 45 64 67 74 12 5 4 75 66 69 6 89 80 51 43 90\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['16 4 19 13 17 8 6 2 22 12 3 1 7 14 18 5 21 15 20 11 10 9\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['46 62 5 67 16 57 12 23 42 66 2 26 15 54 17 1 61 19 71 60 69 32 9 39 29 44 6 27 65 22 24 18 21 34 40 49 53 30 38 10 43 41 70 72 55 25 56 68 3 31 4 36 13 59 8 63 58 37 64 7 52 45 47 50 48 11 28 51 33 14 35 20\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['24 12 59 26 62 46 17 18 49 4 3 32 21 20 57 36 63 54 55 7 1 16 25 6 31 53 56 9 52 51 39 34 41 58 60 30 13 11 33 19 48 8 14 38 45 22 47 15 35 42 29 10 23 44 43 2 50 37 61 27 40 5 28\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['17 1 7 4 9 8 18 3 10 11 13 6 16 15 12 2 14 5\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['10 26 6 7 30 1 27 46 2 3 15 19 25 40 31 47 20 29 37 9 28 12 42 16 5 34 14 41 13 39 18 44 35 21 32 11 8 23 24 38 4 22 17 33 45 36 43\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['7 63 31 90 12 47 53 21 29 13 61 76 66 69 81 30 26 23 8 83 91 62 35 92 15 45 85 41 5 17 56 48 42 32 65 82 11 79 25 44 1 67 10 9 38 78 70 3 27 73 40 55 20 46 37 88 6 75 34 28 50 94 16 57 96 58 74 80 72 24 68 39 64 52 14 19 77 18 36 95 93 54 87 71 51 33 89 4 49 86 2 22 84 59 60 43\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['53 47 58 50 66 39 49 31 32 22 18 38 37 55 20 73 52 69 11 6 16 4 5 2 28 21 40 67 26 23 65 64 24 8 57 42 48 72 3 10 35 9 61 68 59 54 43 7 34 44 51 70 17 63 27 29 33 62 19 46 36 56 60 15 13 41 1 71 14 12 30 25 45\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['68 2 77 51 27 57 29 47 26 62 34 5 8 54 79 48 11 72 67 53 74 42 13 21 1 22 19 39 63 28 66 15 12 38 59 52 30 35 70 4 73 23 10 36 31 44 45 78 9 46 81 40 33 14 24 80 43 61 65 25 16 50 32 56 76 18 41 37 7 71 20 75 55 60 69 58 17 3 49 6 64\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3 9 2 12 4 6 7 10 11 8 5 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['34 33 27 39 23 43 1 18 32 14 45 7 24 10 20 46 47 4 15 29 2 40 12 9 26 17 28 8 21 35 6 38 13 19 31 37 41 16 25 5 3 30 11 22 42 36 44\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['1 4 2 5 3 7 8 6\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['21 3 36 19 35 26 24 2 31 37 13 30 34 38 11 23 25 15 18 5 16 17 9 32 33 7 27 1 8 28 10 6 4 20 22 29 14 12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['6 1 9 3 8 4 7 10 2 5\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['4 9 23 16 5 19 15 17 8 22 2 6 11 14 3 13 20 21 12 1 18 10 7\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9 1 4 2 8 5 10 6 3 7\\r\\n']}, {'input': '5', 'time': ['62'], 'mem': ['0'], 'output': ['34 19 43 7 27 51 22 47 1 30 5 28 14 15 55 52 11 36 17 25 16 8 3 6 18 40 46 48 41 53 20 10 50 9 31 24 21 39 13 32 38 44 33 54 12 35 49 2 4 42 26 45 37 29 23\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['58 5 29 37 45 28 24 14 23 41 8 3 2 30 21 52 56 53 12 17 54 46 15 51 10 11 47 13 39 34 32 25 9 40 22 18 26 6 43 33 16 50 42 36 48 19 31 57 1 38 49 55 35 4 20 7 44 27\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['7 3 4 18 27 15 10 32 12 22 33 24 31 9 26 8 30 28 25 1 11 17 20 21 2 16 19 29 6 34 14 13 5 23\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['26 29 38 10 31 23 7 51 44 45 12 34 6 16 17 14 52 22 39 28 42 43 5 33 4 36 37 21 2 25 8 32 9 19 13 41 30 11 20 27 47 15 18 35 24 3 1 48 49 46 40 53 50\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['30 66 17 34 53 8 68 72 39 21 77 18 64 62 37 52 90 99 93 59 46 23 45 29 33 56 28 9 47 41 40 48 25 87 11 69 51 6 84 83 16 42 32 94 76 49 85 4 44 73 35 36 5 60 97 55 10 71 22 15 31 80 13 58 20 70 24 7 54 95 14 92 50 26 61 79 1 74 88 82 96 12 89 75 86 19 2 38 43 3 91 57 27 65 67 78 81 63 98\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['9 3 26 21 29 4 8 6 12 11 22 28 13 30 17 32 1 20 18 31 16 19 27 14 23 7 10 24 2 5 15 25\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['3 13 52 7 40 8 32 26 44 62 37 9 15 16 49 64 5 1 6 57 34 59 42 58 14 25 36 11 39 22 35 41 27 20 43 29 65 50 63 2 56 51 33 38 61 31 60 30 10 48 24 47 45 53 55 18 46 12 23 4 19 21 28 17 54\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['21 23 43 48 42 41 16 69 70 55 68 54 30 26 53 49 52 14 22 51 46 29 58 13 5 7 18 64 62 35 60 6 39 10 1 45 15 38 33 8 47 25 24 11 36 50 28 40 66 2 65 61 12 37 3 19 27 4 31 59 32 67 9 17 20 63 34 57 44 56 71\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['48 54 26 40 35 21 17 2 22 66 9 42 45 12 20 28 59 57 50 55 19 74 23 49 14 46 65 38 51 16 7 70 1 61 37 13 53 62 36 31 33 3 56 18 71 25 67 39 73 10 30 52 69 34 72 60 15 41 24 32 6 29 4 5 63 43 64 11 44 68 47 58 27 8\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['31 9 72 77 48 17 78 84 65 2 20 96 75 69 41 40 50 87 25 57 35 71 92 76 28 58 10 86 34 45 18 30 52 95 89 90 24 5 32 60 16 21 27 14 70 4 67 22 83 49 23 29 37 73 61 79 68 11 15 54 59 88 33 56 36 93 55 74 8 82 47 66 46 38 91 19 7 1 13 12 80 3 44 85 94 53 26 62 81 43 6 39 64 63 42 51\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2 1 5 6 3 7 4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['26 4 14 9 11 25 46 1 10 19 41 44 36 24 12 5 20 15 35 30 33 6 42 7 23 18 13 43 27 8 17 47 2 40 51 29 3 37 16 48 22 45 34 49 50 21 39 28 32 38 31\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['26 13 4 12 24 25 3 18 23 15 20 1 8 2 10 27 16 22 17 5 6 9 11 14 7 19 21\\r\\n']}, {'input': '7', 'time': ['30'], 'mem': ['0'], 'output': ['55 57 15 68 27 24 53 59 47 43 60 61 2 9 58 30 44 26 28 3 48 66 6 7 20 49 39 51 37 16 67 31 19 62 52 69 63 42 21 22 34 70 18 36 45 25 64 4 38 41 1 71 14 5 17 46 13 65 54 35 29 10 50 8 56 23 12 32 40 33 11\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['5 3 9 7 2 4 8 1 6\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['16 7 19 15 4 28 27 11 8 1 3 20 21 12 10 22 18 23 25 26 14 9 17 2 6 5 29 24 13\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['10 23 20 4 51 28 13 43 44 59 11 19 45 42 35 7 25 8 15 40 50 54 36 39 2 26 37 41 46 21 55 32 29 60 16 34 31 22 1 12 49 3 30 47 27 48 9 52 17 14 53 33 58 18 5 56 57 24 38 6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['24 16 33 46 4 48 43 13 40 39 19 5 49 15 31 20 44 9 25 11 6 3 30 8 12 38 47 7 50 36 26 29 45 17 34 42 1 35 27 41 22 32 18 37 2 28 10 23 21 14\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['15 13 22 18 17 11 30 1 26 20 10 27 14 21 8 4 5 24 29 12 9 28 23 19 6 25 7 3 2 16\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['27 2 22 9 45 42 20 17 38 41 34 37 36 35 1 31 44 23 6 18 29 32 43 13 39 26 15 28 11 12 7 33 19 46 21 25 10 5 40 30 16 8 4 3 14 24\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['9 7 5 1 4 3 8 2 6\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['15 29 10 34 22 17 6 8 33 39 9 37 26 28 31 23 21 19 35 14 36 27 4 20 41 25 18 16 46 2 1 11 3 42 40 7 24 30 12 45 13 43 44 38 5 32\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['61 12 48 58 24 27 28 40 38 44 22 2 17 60 20 59 64 63 21 31 6 23 33 52 53 54 1 10 26 25 16 14 36 7 62 18 3 9 30 19 46 32 55 15 42 5 66 4 43 37 35 51 65 34 49 56 41 8 47 39 29 45 50 13 57 11\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['10 4 1 8 6 13 12 5 3 11 9 2 7\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['57 12 69 38 58 33 7 11 21 26 71 74 28 17 30 34 19 41 63 5 1 48 29 79 2 43 56 42 80 22 25 70 45 62 75 78 31 27 64 53 46 72 20 67 15 13 76 40 39 4 9 18 55 49 68 3 14 44 51 52 6 61 54 47 66 77 60 65 10 23 16 50 36 8 59 73 35 24 32 37\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['41 19 63 30 17 33 45 20 1 15 56 51 60 53 38 12 58 47 23 28 54 10 13 57 4 14 18 27 39 46 36 49 40 29 24 35 44 32 59 5 52 48 7 61 55 6 16 42 2 43 8 50 3 9 34 26 37 11 22 62 21 31 25\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['22 7 15 2 10 9 25 18 6 20 1 23 4 13 14 17 5 19 3 26 21 11 12 8 16 24\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['20 14 31 5 36 19 15 60 26 54 3 58 40 25 42 51 23 17 68 24 22 2 61 43 48 63 6 67 8 21 7 53 39 41 50 16 11 47 57 1 49 69 66 35 62 38 64 44 29 32 13 18 10 52 12 65 34 46 27 55 56 28 45 9 33 4 37 30 59\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['5 6 2 1 4 3\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['5 7 4 6 3 9 1 2 8\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['39 8 29 20 33 31 37 6 18 30 22 40 32 16 34 3 27 26 25 10 38 14 24 2 5 9 1 19 35 4 23 7 12 21 28 17 41 36 11 15 13\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['17 1 18 3 14 2 5 10 12 6 20 16 8 11 19 9 7 4 15 13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2 1\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['34 1 9 2 21 51 6 28 30 27 5 45 29 10 15 50 56 11 40 8 35 46 12 49 55 24 31 60 58 32 3 48 22 7 39 16 33 17 47 20 23 43 42 37 44 41 57 13 19 59 4 54 53 14 25 52 38 26 36 18\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['8 6 3 13 12 2 7 11 10 9 5 4 14 1\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['33 52 48 10 26 69 5 4 34 56 14 62 1 81 66 21 44 42 51 46 6 27 68 74 71 67 22 37 60 59 43 49 40 54 72 80 73 70 79 77 45 47 2 28 78 8 24 32 20 58 41 31 18 50 38 13 30 39 23 19 17 11 9 55 57 64 61 16 25 15 63 35 7 65 53 76 29 12 3 75 36\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['11 23 18 17 14 15 20 4 39 3 2 29 19 40 12 21 22 33 8 30 5 41 24 26 10 34 16 28 42 31 9 7 37 25 36 13 6 27 35 38 1 32\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['25 38 48 5 97 2 12 89 80 23 69 52 54 86 17 61 43 6 21 1 45 85 94 58 47 35 11 93 34 73 95 96 22 26 7 18 60 90 9 74 37 4 41 75 82 27 14 67 46 92 31 16 77 63 62 81 30 39 8 91 15 66 10 65 42 13 72 88 57 70 64 59 36 44 83 3 33 29 79 71 87 50 78 55 76 28 84 19 68 56 49 24 20 32 51 53 40\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['52 59 20 43 29 4 56 5 41 34 35 18 53 7 1 46 39 33 27 15 61 14 9 51 28 55 2 48 17 40 16 25 57 22 24 42 23 32 54 49 45 11 60 47 37 3 19 10 12 44 6 13 38 62 36 8 26 58 50 30 31 21\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['51 43 28 3 38 36 25 52 21 54 15 46 31 9 19 49 11 33 34 41 39 55 56 57 44 16 2 35 61 20 14 6 47 42 1 45 10 26 24 30 7 40 37 17 23 8 60 58 18 22 59 5 27 12 13 32 48 29 53 50 4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['57 48 37 28 31 35 16 17 14 7 9 47 11 43 4 53 5 42 6 33 39 24 59 30 22 2 32 38 52 58 1 19 45 10 25 3 18 36 26 40 27 55 29 15 46 12 21 54 49 41 23 20 8 51 13 44 34 56 50\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5 1 9 4 6 8 3 7 10 2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3 2 11 12 13 5 10 4 9 8 7 6 14 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['19 43 17 23 29 41 35 20 40 38 25 24 18 4 3 37 26 15 9 33 28 13 34 36 30 12 7 1 14 8 5 16 10 22 21 42 32 2 31 39 27 6 11\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['43 35 29 74 15 28 73 47 84 82 2 13 54 61 24 85 42 79 68 3 10 34 23 67 71 20 50 5 7 44 4 56 76 62 9 65 16 19 1 80 11 40 53 46 26 58 27 59 32 31 33 64 86 55 45 60 51 78 25 38 72 30 77 8 36 48 83 81 69 39 12 57 18 41 22 6 52 63 21 17 49 14 70 75 66 37\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['11 60 20 33 45 29 76 66 49 54 95 42 90 35 22 55 97 69 80 56 75 14 39 6 15 32 58 59 9 63 21 86 5 46 91 28 38 27 74 8 96 94 40 73 93 30 84 50 65 19 89 16 99 79 85 3 13 71 72 70 7 52 41 12 1 57 17 24 68 62 25 37 47 83 81 78 88 2 92 43 98 61 26 67 82 48 34 36 31 23 77 51 10 64 18 44 87 4 53\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['10 80 26 55 57 6 96 83 24 75 70 64 65 97 53 77 51 7 44 31 25 14 2 88 76 99 60 79 68 50 34 62 42 11 73 5 92 32 15 12 87 1 72 81 19 13 98 3 43 37 38 71 95 47 16 39 89 74 23 69 82 90 28 100 29 85 20 30 86 8 21 41 33 48 22 46 94 91 93 78 59 84 45 35 17 27 67 4 63 36 66 61 18 54 40 9 56 52 58 49\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['47 33 48 59 11 9 24 1 73 36 10 16 21 69 97 70 27 76 83 95 51 86 35 65 61 56 72 42 74 67 63 37 98 89 96 28 79 31 71 62 14 90 80 64 75 17 66 12 15 40 46 68 45 43 29 93 7 8 20 6 55 26 78 94 13 82 77 2 84 22 5 18 91 23 4 30 88 54 32 92 50 57 41 25 34 99 39 85 52 81 44 87 53 3 19 58 49 60 38\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['81 58 78 96 79 88 5 53 95 63 14 1 4 41 40 11 27 20 6 30 74 67 9 89 84 13 77 51 12 75 45 97 92 68 36 32 19 55 93 72 80 76 64 54 44 24 8 86 57 66 25 59 70 38 65 48 35 15 62 16 61 42 52 17 87 60 22 94 83 82 34 23 39 7 99 49 31 33 46 37 73 21 69 98 26 56 29 3 90 10 91 28 85 47 71 50 43 18 2\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['48 91 68 63 43 86 88 18 80 45 84 47 19 85 74 53 30 11 33 1 69 70 28 46 90 3 38 95 58 98 44 57 52 76 50 32 41 14 36 87 93 12 13 75 59 26 8 37 40 82 81 34 99 56 79 27 55 22 67 24 71 10 89 25 94 16 17 54 6 77 97 61 83 96 4 21 62 29 2 49 23 92 73 20 35 31 64 60 66 15 78 51 9 72 42 39 65 7 5\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4 82 16 9 13 28 42 93 3 92 43 38 8 68 77 72 46 36 37 2 64 75 76 98 10 84 48 85 97 73 18 54 47 34 94 17 30 80 99 11 69 51 62 20 23 44 29 81 65 22 26 56 14 89 21 53 91 40 52 5 58 60 24 15 7 63 95 27 50 88 31 70 19 1 67 57 96 61 74 86 49 32 78 35 6 41 83 33 71 45 79 90 39 87 55 59 66 25 12\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['38 3 29 20 31 36 16 47 18 30 43 69 79 68 72 17 25 4 53 51 62 76 74 66 15 80 86 77 50 44 93 65 90 58 94 48 42 61 13 60 46 21 57 23 88 39 89 24 19 1 49 84 78 95 59 33 34 97 7 87 27 98 64 63 73 75 40 10 5 28 52 67 91 55 9 85 11 14 54 96 32 71 8 92 45 70 99 35 22 6 83 41 56 2 81 26 12 37 82\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['65 82 46 81 89 26 11 28 15 76 34 41 71 3 8 95 24 42 1 57 88 20 31 51 99 84 14 60 50 77 18 92 7 4 79 62 6 63 5 67 37 80 12 69 61 91 75 19 66 25 40 9 87 78 93 44 35 30 55 86 52 36 21 85 98 94 70 43 13 22 53 73 72 32 39 29 16 54 23 47 27 90 48 49 58 33 38 10 96 59 74 83 2 17 45 56 64 68 97\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['88 25 72 58 59 77 16 49 73 60 37 30 19 12 79 45 91 84 31 10 94 33 67 71 2 66 69 35 64 48 78 56 46 44 65 17 57 34 6 50 7 86 26 9 11 40 28 27 95 3 4 89 41 97 36 87 68 22 18 52 99 5 85 83 70 15 8 39 29 42 93 76 62 51 24 38 75 21 82 13 92 54 74 20 43 1 55 14 61 63 47 80 81 53 98 23 90 32 96\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['97 72 84 17 89 32 61 83 15 23 54 56 87 62 4 81 70 31 78 68 26 98 51 52 36 63 66 7 19 65 21 90 8 42 82 59 79 14 64 28 50 24 5 2 67 93 74 35 11 69 94 99 71 95 55 76 73 18 57 86 30 29 27 91 45 1 37 12 38 44 39 34 58 16 77 85 48 46 6 92 20 13 43 33 40 88 53 9 25 10 47 100 49 22 75 80 60 41 3 96\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['77 46 1 56 14 99 18 10 23 86 66 67 31 41 6 39 58 40 92 28 33 61 21 60 5 54 70 44 24 27 38 3 62 48 82 64 4 49 15 50 80 65 45 98 32 17 85 16 63 30 43 78 26 52 68 29 97 59 95 69 57 71 8 87 37 51 91 76 83 20 55 42 2 53 84 34 25 12 73 13 47 96 19 79 9 81 35 88 93 72 11 74 7 75 94 22 89 90 36\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = \"\";\nlet currentLine = 0;\nprocess.stdin.on(\"data\", (data) => {\n  inputString += data;\n});\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((str) => str.trim());\n  main();\n});\nfunction readLine() {\n  return inputString[currentLine++];\n}\n\n\/\/ utils\nconst MOD = 1e9 + 7;\nconst mod = (n) => ((n % MOD) + MOD) % MOD;\nconst add = (a, b) => mod(mod(a) + mod(b));\nconst sub = (a, b) => mod(mod(a) - mod(b));\nfunction mul() {\n  for (var a = arguments, r = a[0], i = a.length; --i; )\n    r = ((((r >> 16) * a[i]) % MOD) * 65536 + (r & 65535) * a[i]) % MOD;\n  return r;\n}\nfunction inv(b) {\n  for (var a = MOD, u = 0, v = 1, t; b; v = t)\n    (t = (a \/ b) | 0), (a -= t * b), (u -= t * v), (t = a), (a = b), (b = t), (t = u), (u = v);\n  u %= MOD;\n  return u < 0 ? u + MOD : u;\n}\nfunction pow(base, n) {\n  if (n === 0) return 1;\n  let p = pow(base, Math.floor(n \/ 2));\n  let res = mul(mod(p), mod(p));\n  if (n % 2 === 1) res = mul(mod(res), base);\n  return res;\n}\nfunction highestOneBit(i) {\n  i |= i >> 1;\n  i |= i >> 2;\n  i |= i >> 4;\n  i |= i >> 8;\n  i |= i >> 16;\n  return i - (i >>> 1);\n}\nfunction permutation(arr, len, store = \"\", permutations = []) {\n  if (store.length === len) {\n    permutations.push(store);\n    return;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    const newArr = [...arr];\n    const newChar = newArr.splice(i, 1);\n    permutation(newArr, len, store.concat(newChar), permutations);\n  }\n  return permutations;\n}\n\nfunction main() {\n  const [len, k] = readLine()\n    .split(\" \")\n    .map((n) => parseInt(n));\n  const arr = readLine()\n    .split(\" \")\n    .map((n) => parseInt(n));\n  let [ok, count] = [true, 0];\n  const target = arr[k - 1];\n\n  for (let i = k; i < len; i++) {\n    if (arr[i] !== target) {\n      ok = false;\n      break;\n    }\n  }\n\n  let same = true;\n  for (let i = k - 2; i >= 0; i--) {\n    if (arr[i] === target && same) continue;\n    else {\n      same = false;\n      count++;\n    }\n  }\n\n  if (!ok) console.log(-1);\n  else {\n    console.log(count);\n  }\n}\n","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"bcee233ddb1509a14f2bd9fd5ec58798","code_uid":"2a94d67e89562514498808e844d28e5d","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"bcee233ddb1509a14f2bd9fd5ec58798","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['12'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['9\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['10\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['19\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = parseInt(readline(), 10), forceX = 0, forceY = 0, forceZ = 0, points = [];\n    \nfor(var i=0; i<n; i++) {\n    points.push(readline().split(' ').map(el => parseInt(el, 10)));\n    forceX += points[i][0];\n    forceY += points[i][1];\n    forceZ += points[i][2];\n}\n\nprint((forceX === 0 && forceY === 0 && forceZ === 0) ? 'YES' : 'NO');","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"24280383ae27384c1a3cc176629c8692","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = readline();\n\nvar powers = {\n    x: 0,\n    y: 0,\n    z: 0\n};\n\nfor(var i = 0; i < n; i++){\n    var arr = readline().split(' ');\n    powers.x += Number(arr[0]);\n    powers.y += Number(arr[1]);\n    powers.z += Number(arr[2]);\n}\n\nif ( powers.x == 0 && powers.y == 0 && powers.z == 0 ) {\n    print('YES');\n} else {\n    print('NO');\n}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"55d860881fff6259f689fee05385817e","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = parseInt(readline());\nvar matrix = [];\n\nwhile(n--)\n\tmatrix.push(readline().split(\" \").map(function convert(value) {return +value; }));\n\nvectorSum = matrix.reduce(function(vectorSum, curForse) {\n\tvectorSum[0] += curForse[0];\n\tvectorSum[1] += curForse[1];\n\tvectorSum[2] += curForse[2];\n\treturn vectorSum;\n}, [0, 0, 0]);\n\nprint((vectorSum[0] === 0 && vectorSum[1] === 0 && vectorSum[2] === 0) ? 'YES' : 'NO');\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"2b3d9814f2620a57aa4a2fc55183e068","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"  var n = readline();\n    var a = [0,0,0];\n  for(var k=0; k <n; k++){\n    var forces = readline().split(' ');\n    for(var j=0; j< forces.length; j++){\n    a[j] += parseInt(forces[j]);\n  }\n  }\n  \n\nvar end = (a[0] === 0 && a[1] === 0 && a[2] === 0) ? 'YES' : 'NO';\n\nprint(end);","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"b51faa04eeac6d3a7ad6cedfa4345c5e","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var vectorsCount = parseInt(readline());\nvar point = {\n    x: 0,\n    y: 0,\n    z: 0\n}\n\nfor (var i = 0; i < vectorsCount; i++) {\n    var vector = readline().split(\" \").map(x => parseInt(x));\n    point.x += vector[0];\n    point.y += vector[1];\n    point.z += vector[2];\n}\n\nprint(point.x === 0 && point.y === 0 && point.z === 0 ? \"YES\" : \"NO\");\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"ee792be163c602681d4cd7c06246bd67","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"(function main() {\n    \n    var count = parseInt(readline());\n\n    var a = 0,\n        b = 0,\n        c = 0;\n\n    for ( var i = 0; i < count; i++ ) {\n\n        var vec = readline().trim().split(' ').map(Number);\n\n        a += vec[0];\n        b += vec[1];\n        c += vec[2];\n    }\n\n    if ( (a === 0) && (b === 0) && (c === 0) ) {\n        print(\"YES\");\n    } else {\n        print(\"NO\");\n    }\n\n    return 0;\n})();","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"0713c70d2f22eb05e9730dc5c0838ec2","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = Number(readline());\n\nvar count = 0;\nvar v = [0, 0, 0];\n\nwhile (n > 0) {\n    var s = readline().split(' ').map(function(each) {return Number(each);});\n    v[0] += s[0];\n    v[1] += s[1];\n    v[2] += s[2];\n\n    --n;\n}\n\nif (v[0] === 0 && v[1] === 0 && v[2] === 0) {\n    print(\"YES\");\n} else {\n    print(\"NO\");\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"a14bf12f40eaa7a57e5e871a3ae0b1d4","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function InputReader() {\n    this.inputTokens = [];\n    this.inputIndex = -1;\n    this.nTokens = 0;\n\n    this.readLine = function() {\n        this.inputTokens = readline().split(\" \");\n        this.nTokens = this.inputTokens.length;\n        this.inputIndex = 0;\n    }\n\n    this.next = function() {\n        if ((this.nTokens == 0) || (this.inputIndex == this.nTokens)) {\n            this.readLine();\n        }\n        var res = this.inputTokens[this.inputIndex];\n        this.inputIndex++;\n        return res;\n    }\n\n    this.nextInt = function() {\n        return parseInt(this.next());\n    }\n\n    this.nextFloat = function() {\n        return parseFloat(this.next());\n    }\n\n    this.nextChar = function() {\n        return this.next().charAt(0);\n    }\n}\n\nvar inp = new InputReader();\nvar n = inp.nextInt();\nvar x = 0;\nvar y = 0;\nvar z = 0;\nfor (var i = 0; i < n; i++) {\n    var xi = inp.nextInt();\n    var yi = inp.nextInt();\n    var zi = inp.nextInt();\n    x += xi;\n    y += yi;\n    z += zi;\n}\nif ((x == 0) && (y == 0) && (z == 0)) {\n    write(\"YES\\n\");\n}\nelse {\n    write(\"NO\\n\");\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"0bc93d9d1352a93fce138afe75c5828f","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"no = readline();\nvar vector;\nvar x = 0;\nvar y = 0;\nvar z = 0;\nfor (var i = 0; i < no; i++) {\n         vector = readline().split(' ');\n         x += parseInt(vector[0]);\n         y += parseInt(vector[1]);\n         z += parseInt(vector[2]);\n}\nif(!x && !y && !z)\n         write(\"YES\\n\");\nelse\n         write(\"NO\\n\");\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"4b196fac5d130708dc7a3e72160b22b5","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = +readline();\nvar x = 0;\nvar y = 0;\nvar z = 0;\nfor (var i=0; i<n; i++){\n\tvar p = readline().split(' ').map(Number);\n\tx += p[0];\n\ty += p[1];\n\tz += p[2];\n}\nif (x==0 && y==0 && z==0) print ('YES');\nelse print ('NO');\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"ac0644336fdb55f0d09d29a3632d8014","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n3 = readline()\nvar n = readline().split(\" \").map(function(x){return parseInt(x)})\nres = n\n\nfunction sum(a,b) {\n    a[0] = a[0] + b[0]\n    a[1] = a[1] + b[1]\n    a[2] = a[2] + b[2]\n    return a\n}\n\nfor(var i = 0; i < n3 - 1; i++) {\n    var n1 = readline().split(\" \").map(function(x){return parseInt(x)});\n    res = sum(n,n1)\n}\n\n(res[0]==0&&res[1]==0&&res[2]==0)?res = \"YES\":res = \"NO\"\n\nprint(res)","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"4ac84c153c910376540c95fb60f9b283","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\/\/ A guy named Vasya attends the final grade of a high school. One day Vasya decided to watch a match of his favorite hockey team. And, as the boy loves hockey very much, even more than physics, he forgot to do the homework. Specifically, he forgot to complete his physics tasks. Next day the teacher got very angry at Vasya and decided to teach him a lesson. He gave the lazy student a seemingly easy task: You are given an idle body in space and the forces that affect it. The body can be considered as a material point with coordinates (0; 0; 0).\n\n\/\/ Vasya had only to answer whether it is in equilibrium. \"Piece of cake\" \u2014 thought Vasya, we need only to check if the sum of all vectors is equal to 0.\n\n\/\/So, Vasya began to solve the problem. But later it turned out that there can be lots and lots of these forces, and Vasya can not cope without your help. Help him. Write a program that determines whether a body is idle or is moving by the given vectors of forces.\n\n\/\/ Input\n\/\/ The first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100), then follow n lines containing three integers each: the xi coordinate, the yi coordinate and the zi coordinate of the force vector, applied to the body (\u2009-\u2009100\u2009\u2264\u2009xi,\u2009yi,\u2009zi\u2009\u2264\u2009100).\n\n\/\/ Output\n\/\/ Print the word \"YES\" if the body is in equilibrium, or the word \"NO\" if it is not.\n    \nvar n = readline()\n\nvar vec = []\nfor (i=0; i<n; i++){\n    vec.push(readline().split(' '))\n}\n\nvar sumJ = 0\nvar sumD = 0\nvar sumT = 0\nfor (i=0; i<n; i++) {\n     sumJ += +vec[i][0];\n     sumD += +vec[i][1];\n     sumT += +vec[i][2]\n}\n\nif (sumJ === 0 && sumD === 0 && sumT === 0){\n    print(\"YES\")\n}else {\n    print(\"NO\")\n}\n\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"26ad436bcd93d22a58c30cd6367afa04","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = parseInt(readline());\n\nvar x = 0, y = 0, z = 0;\n\nfor (var i = 0; i < n; i++) {\n    \n    var numbers = readline().split(\" \");\n    \n    x += parseInt(numbers[0]);\n    y += parseInt(numbers[1]);\n    z += parseInt(numbers[2]);\n}\n\nprint((x === 0 && y === 0 && z === 0) ? 'YES' : 'NO');","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"1d2a429971af01ea65bc7e089b7a78e5","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var inp = parseInt(readline());\nvar x = 0;var y = 0;var z = 0;\n\nfor(var i=0;i<inp;i++)\n{\nvar noop = readline().split(\" \");\n\nx+=(+noop[0]);z+=(+noop[1]);y+=(+noop[2]);\n}\n\nif((x===0)&&(y===0)&&(z===0)){print(\"YES\")}\n\telse{print(\"NO\")}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"6c1b2a185bc5e5ab2c8ecbc12ef225a1","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var x = readline();\n \nvar xsum = 0;\nvar ysum = 0;\nvar zsum = 0;\n \nfor(var i = 0; i < parseInt(x); i++) {\n    var numbers = readline().split(\" \").map(function (x) {return parseInt(x);});\n    xsum += numbers[0];\n    ysum += numbers[1];\n    zsum += numbers[2];\n}\n \nif(xsum == 0 && ysum == 0 && zsum == 0) {\n    print(\"YES\");\n} else {\n    print(\"NO\");\n}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"4925421c1d3597b6f7dc71284116b767","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"n = readline();\nvar sum1 = 0;\nvar sum2 = 0;\nvar sum3 = 0;\nwhile(n--){\n\tk = readline().split(' ')\n   sum1  =  sum1 +  parseInt(k[0]);\n   sum2  =  sum2 +  parseInt(k[1]);\n   sum3  =  sum3 +  parseInt(k[2]);\n}\nif (sum1 == 0 && sum2 == 0 && sum3 == 0) { print(\"YES\") } \nelse{ print(\"NO\")}","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"3b899da5920fe9949ba390b4ce2cbb08","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = readline();\nvar vector = [];\nvar sumX = 0,\n  sumY = 0,\n  sumZ = 0;\n\nfor (i = 0; i < n; i++) {\n  vector.push(readline().split(\" \"));\n  sumX += +vector[i][0];\n  sumY += +vector[i][1];\n  sumZ += +vector[i][2];\n}\n\nif (sumX === 0 && sumY === 0 && sumZ === 0) {\n  print(\"YES\");\n} else {\n  print(\"NO\");\n}\n","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"48e6d847c436576151a6bdc50be09da1","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"n = readline();\n\nvar sumX = 0, sumY = 0, sumZ = 0;\n\nfor (var i = 0; i < n; i++) {\n\tvect = readline().split(' ').map(Number);\n\n\tsumX = sumX + vect[0];\n\tsumY = sumY + vect[1];\n\tsumZ = sumZ + vect[2];\n};\n\nif (sumX == 0 && sumY == 0 && sumZ == 0) {\n\tprint('YES');\n} else {\n\tprint('NO');\n};","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"db70be4a357039c6ac59d9bf8c931e1e","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var print = this.print || require('lol-io').print\nvar write = this.write || require('lol-io').write\nvar readline = this.readline || require('lol-io').readline\n\n\nvar s=parseInt(readline().split(' ')[0]);\nvar arr=[];\nfor(var i=0;i<s;i++){\n    arr[i]=readline().split(' ').map(i=>parseInt(i));\n}\n\/\/console.log(arr)\nvar result=\"YES\";\nvar f=0;\nvar se=0;\nvar th=0;\nfor(var i=0;i<s;i++){\n    f+=arr[i][0]\n    se+=arr[i][1];\n    th+=arr[i][2];\n}\nif(f!=0||se!=0||th!=0){\n   result=\"NO\"\n}\nprint(result)","tags":["implementation","math"],"lang_cluster":"Javascript","src_uid":"8ea24f3339b2ec67a769243dc68a47b2","code_uid":"ed2c0c1a4ad49059d067643f978e8d37","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8ea24f3339b2ec67a769243dc68a47b2","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['YES']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['YES']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['NO']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nvar ans = \"YES\", indicator = 0, myMap = {};\n\nrl.on('line', (input) => {\n\n    if (indicator == 0) {\n        \/*\n        input.forEach(element => {\n            if (element != ' ') {\n\n                if (element in myMap)\n                    myMap[element]++;\n                else myMap[element] = 1;\n            }\n        });*\/\n        for (let i = 0; i < input.length; i++) {\n            if (input[i] == ' ')\n                continue;\n\n            if (input[i] in myMap)\n                myMap[input[i]]++;\n            else myMap[input[i]] = 1;\n\n        }\n        indicator++;\n    }\n    else {\n\n        for (let i = 0; i < input.length; i++) {\n            if (input[i] == ' ')\n                continue;\n            if (myMap[input[i]] > 0)\n                myMap[input[i]]--;\n            else {\n                ans = \"NO\";\n                break;\n            }\n        }\n        console.log(ans);\n        rl.close();\n    }\n});","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"b1ef19d7027dc82d76859d64a6f43439","code_uid":"f8ec9b69a411abfd174bf72d3722fd07","difficulty":1100,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"b1ef19d7027dc82d76859d64a6f43439","hidden_unit_tests":"[{'input': 'I', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'I', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'I', 'time': ['0'], 'mem': ['132'], 'output': ['NO\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'H', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': 'F', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'H', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'H', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'F', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['148'], 'output': ['YES\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'O', 'time': ['0'], 'mem': ['136'], 'output': ['YES\\r\\n']}, {'input': 'N', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'g', 'time': ['0'], 'mem': ['136'], 'output': ['YES\\r\\n']}, {'input': 'R', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'h', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'y', 'time': ['0'], 'mem': ['144'], 'output': ['NO\\r\\n']}, {'input': 'j', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'A', 'time': ['0'], 'mem': ['148'], 'output': ['NO\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['144'], 'output': ['NO\\r\\n']}, {'input': 'B', 'time': ['0'], 'mem': ['136'], 'output': ['NO\\r\\n']}, {'input': 'K', 'time': ['30'], 'mem': ['144'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = \"\";\nlet currentLine = 0;\nprocess.stdin.on(\"data\", (data) => {\n  inputString += data;\n});\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((str) => str.trim());\n  main();\n});\nfunction readLine() {\n  return inputString[currentLine++];\n}\n\n\/\/ utils\nconst MOD = 1e9 + 7;\nconst mod = (n) => ((n % MOD) + MOD) % MOD;\nconst add = (a, b) => mod(mod(a) + mod(b));\nconst sub = (a, b) => mod(mod(a) - mod(b));\nfunction mul() {\n  for (var a = arguments, r = a[0], i = a.length; --i; )\n    r = ((((r >> 16) * a[i]) % MOD) * 65536 + (r & 65535) * a[i]) % MOD;\n  return r;\n}\nfunction inv(b) {\n  for (var a = MOD, u = 0, v = 1, t; b; v = t)\n    (t = (a \/ b) | 0), (a -= t * b), (u -= t * v), (t = a), (a = b), (b = t), (t = u), (u = v);\n  u %= MOD;\n  return u < 0 ? u + MOD : u;\n}\nfunction pow(base, n) {\n  if (n === 0) return 1;\n  let p = pow(base, Math.floor(n \/ 2));\n  let res = mul(mod(p), mod(p));\n  if (n % 2 === 1) res = mul(mod(res), base);\n  return res;\n}\nfunction highestOneBit(i) {\n  i |= i >> 1;\n  i |= i >> 2;\n  i |= i >> 4;\n  i |= i >> 8;\n  i |= i >> 16;\n  return i - (i >>> 1);\n}\nfunction permutation(arr, len, store = \"\", permutations = []) {\n  if (store.length === len) {\n    permutations.push(store);\n    return;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    const newArr = [...arr];\n    const newChar = newArr.splice(i, 1);\n    permutation(newArr, len, store.concat(newChar), permutations);\n  }\n  return permutations;\n}\n\nfunction main() {\n  const str1 = readLine();\n  const str2 = readLine().split(\" \").join(\"\").trim();\n  const map = {};\n  let ok = true;\n\n  for (let i = 0; i < str1.length; i++) {\n    const char = str1[i];\n    if ((char >= \"a\" && char <= \"z\") || (char >= \"A\" && char <= \"Z\")) {\n      map[char] = (map[char] || 0) + 1;\n    }\n  }\n\n  for (let i = 0; i < str2.length; i++) {\n    const char = str2[i];\n    if (!map[char] || map[char] === 0) {\n      console.log(\"NO\");\n      ok = false;\n      break;\n    }\n    map[char]--;\n  }\n\n  ok && console.log(\"YES\");\n}\n","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"b1ef19d7027dc82d76859d64a6f43439","code_uid":"c73b7a5bddd358594a496f5c9b87a929","difficulty":1100,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"b1ef19d7027dc82d76859d64a6f43439","hidden_unit_tests":"[{'input': 'I', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'I', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'I', 'time': ['0'], 'mem': ['132'], 'output': ['NO\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'H', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': 'F', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'H', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'H', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'F', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['148'], 'output': ['YES\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'O', 'time': ['0'], 'mem': ['136'], 'output': ['YES\\r\\n']}, {'input': 'N', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'g', 'time': ['0'], 'mem': ['136'], 'output': ['YES\\r\\n']}, {'input': 'R', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'h', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'y', 'time': ['0'], 'mem': ['144'], 'output': ['NO\\r\\n']}, {'input': 'j', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'A', 'time': ['0'], 'mem': ['148'], 'output': ['NO\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['144'], 'output': ['NO\\r\\n']}, {'input': 'B', 'time': ['0'], 'mem': ['136'], 'output': ['NO\\r\\n']}, {'input': 'K', 'time': ['30'], 'mem': ['144'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = '';\nlet currentLine = 0;\nprocess.stdin.on('data', data => {\n\tinputString += data;\n});\nprocess.stdin.on('end', function () {\n\tinputString = inputString\n\t\t.trim()\n\t\t.split('\\n')\n\t\t.map(str => str.trim());\n\tmain();\n});\n\nfunction readLine() {\n\treturn inputString[currentLine++];\n}\n\nfunction main() {\n\tlet h = readLine().split('');\n\tlet str = readLine().split('');\n\n\tlet c = 0;\n\n\tfor (let i = 0, l = str.length; i < l; i++) {\n\t\tlet index = h.indexOf(str[i]);\n\t\tif (index > -1) {\n\t\t\tc++;\n\t\t\tif (str[i] !== ' ') h.splice(index, 1);\n\t\t}\n\t}\n\n\tif (c === str.length) console.log('YES');\n\telse console.log('NO');\n}\n","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"b1ef19d7027dc82d76859d64a6f43439","code_uid":"dc8aed816dad72f1cc6c8b613a903c7b","difficulty":1100,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"b1ef19d7027dc82d76859d64a6f43439","hidden_unit_tests":"[{'input': 'I', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'I', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'I', 'time': ['0'], 'mem': ['132'], 'output': ['NO\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'H', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': 'F', 'time': ['0'], 'mem': ['0'], 'output': ['NO\\r\\n']}, {'input': 'H', 'time': ['30'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'H', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'G', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'F', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['140'], 'output': ['YES\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['148'], 'output': ['YES\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n']}, {'input': 'O', 'time': ['0'], 'mem': ['136'], 'output': ['YES\\r\\n']}, {'input': 'N', 'time': ['0'], 'mem': ['0'], 'output': ['YES\\r\\n']}, {'input': 'g', 'time': ['0'], 'mem': ['136'], 'output': ['YES\\r\\n']}, {'input': 'R', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'h', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'y', 'time': ['0'], 'mem': ['144'], 'output': ['NO\\r\\n']}, {'input': 'j', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['140'], 'output': ['NO\\r\\n']}, {'input': 'A', 'time': ['0'], 'mem': ['148'], 'output': ['NO\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['144'], 'output': ['NO\\r\\n']}, {'input': 'B', 'time': ['0'], 'mem': ['136'], 'output': ['NO\\r\\n']}, {'input': 'K', 'time': ['30'], 'mem': ['144'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = \"\";\nlet currentLine = 0;\nprocess.stdin.on(\"data\", (data) => {\n  inputString += data;\n});\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((str) => str.trim());\n  main();\n});\nfunction readLine() {\n  return inputString[currentLine++];\n}\nfunction main() {\n  const len = +readLine();\n  const arr = readLine()\n    .split(\" \")\n    .map((n) => parseInt(n));\n  let [minIndex, maxIndex] = [-1, -1];\n  let [min, max] = [Number.MAX_SAFE_INTEGER, Number.MIN_SAFE_INTEGER];\n\n  for (let i = 0; i < len; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      maxIndex = i;\n    }\n    if (arr[i] <= min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  const moves = maxIndex + (len - 1 - minIndex);\n  if (moves > len - 2) {\n    console.log(moves - 1);\n  } else {\n    console.log(moves);\n  }\n}\n","tags":["implementation"],"lang_cluster":"Javascript","src_uid":"ef9ff63d225811868e786e800ce49c92","code_uid":"8db69689a98f4eebe5d812e35c807139","difficulty":800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"ef9ff63d225811868e786e800ce49c92","hidden_unit_tests":"[{'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['47\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['50\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['73\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '8', 'time': ['30'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['8'], 'output': ['104\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['33\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['145\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['76\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['15\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['104\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['100\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['107\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['50\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['59\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['99\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['197\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var l=readline().split(' ');\nvar n=+l[0];\nvar m=+l[1];\nvar a=readline().split(' ').map(function(v){return +v;});\na.sort(function(a, b){\n\treturn a-b;\n});\n\nvar ans=0;\nfor(var i=0; i<m; i++){\n\tif(a[i]<0){\n\t\tans+=- a[i] ;\n\t}\n}\nprint(ans);","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"544a56ecd64b404726ecb80a7fc71cb3","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = readline().split(' ').map(function(x) {return parseInt(x);});\nvar a = readline().split(' ').map(function(x) {return parseInt(x);}).sort(function(a, b){return a - b;});\nvar res = 0, carried = 0;\n\nfor(var i = 0; i < n[0]; ++i)\n\tif(a[i] >= 0 || carried >= n[1])\n\t\tbreak;\n\telse\n\t{\n\t\tres -= a[i];\n\t\t++carried;\n\t}\nwrite(res);","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"01c1bdf6ea26c0d95874085b7e260a36","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":";(function () {\n\tprint(function (n, m) {\n\t\tvar s = readline().split(' ').map(Number).filter(function (e) { return e < 0; }).sort(function (a, b) { return a - b; }),\n\t\t\tl = 0, k = 0;\n\n\t\tfor (var i = 0, _i = Math.min(m, s.length); i < _i; i++) {\n\t\t\tl += -s[i];\t\t\t\n\t\t}\n\n\t\treturn l;\n\t}.apply(null, readline().split(' ').map(Number)));\n}.call(this));","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"ad252da5f5109d8cb1bb47848d93552b","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function trim(s) {\n\treturn s.replace(\/^\\s+|\\s+$\/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(\/\\s+\/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i]);\n\t};\n\treturn tokens;\n}\n\nfunction main() {\n\tvar integers = tokenizeIntegers(readline());\n\tvar itemNum = integers[0], capacity = integers[1];\n\n\tvar weights = tokenizeIntegers(readline());\n\tweights.sort(function(a, b) {\n\t\treturn a-b;\n\t});\n\n\tvar total = 0;\n\tfor (var i = 0; i < capacity; ++i) {\n\t\tif (weights[i] >= 0) {\n\t\t\tbreak;\n\t\t}\n\t\ttotal -= weights[i];\n\t}\n\tprint(total);\n}\n\nmain();\n","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"a4e779cad4c21c8a2277942dc1c6b825","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll = readline().split(' ').map(v => parseInt(v))\nlet N = lll[0]\nlet M = lll[1]\nlet res = readline().split(' ').map(v => parseInt(v))\n  .filter(v => v < 0)\n  .sort((a, b) => a - b)\n  .slice(0, M)\n  .reduce((r, v) => r + v, 0)\n\nprint(-res)","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"2a5d0706548c0df9793b7d692291b0b7","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"  var inp = readline().split(' ').map(v => parseInt(v));\n  var n = inp[0];\n  var max = inp[1];\n  var sorted = readline().split(' ')\n\t\t\t .map(e=>Number(e))\n\t\t\t .filter(x=> x < 0)\n\t\t\t .sort(function(a,b){return a - b});\n  var sum = 0;\n  \n  for (var i=0; i<sorted.length;i++){\n    if (i==max){\n        break;\n    }  \n    if(sorted[i] < 0){\n      sum = sorted[i] + sum; \n    }\n   \n  }\n  print(-1*sum);","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"d86638b73aad42a26cc21359619eb63d","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var a = readline().split(' ').map(e=>Number(e));\nvar b = readline().split(' ').map(e=>Number(e)).sort((a,b)=>a-b).filter(e=>{return(e < 0)}).slice(0,a[1]);\n\nif (b.length === 0){\n\tprint(0);\n} else {\n\tprint(-(b.reduce((prev,next)=>prev+next)));\n}","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"2f031174a3372b02547f865bebbc1f0a","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var t = readline().split(' ').map(cur => Number(cur));\nvar inp = readline().split(' ').map(cur => Number(cur)).sort((a,b) => {\nreturn a-b;    \n});\nvar sum = 0;\nfor (var i = 0; i < t[1]; i++){\n    if(inp[i] <= 0)\n    sum-= inp[i];\n}  \nprint(sum);\n","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"724ccc2df340daa39288f148dc587654","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\t\/\/this code is written by ashraf\n\nvar n = readline().split(' ');\nvar ll = readline().split(\" \").sort((a,b)=>a-b);\nvar llsort = [];\nfor(var i=0;i<ll.length;i++){if((+ll[i])<=0){llsort.push(ll[i])}}\n\n\n\nif(llsort.length==0){print(0)}else{\n\n\n\nvar ashraf =0\nif(llsort.length<n[1]) {n[1] =llsort.length}\n\nfor(var x = 0;x<n[1];x++){\n ashraf =ashraf+parseInt(llsort[x]) ;\n\n}\nashraf = ashraf *-1\nprint(ashraf)\n}","tags":["sortings","greedy"],"lang_cluster":"Javascript","src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","code_uid":"9ea2c302e205fc2575546d592c6b6092","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"9a56288d8bd4e4e7ef3329e102f745a5","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['7\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1495\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['6\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['929\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['835\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['649\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['19441\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['16984\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['21743\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['81283\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['75068\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"print(function(n, a) {\n\n\tif (n % 2 === 1) a.push(0);\n\t\n\treturn Math.PI * a.sort(function(a, b) {\n\t\treturn b - a;\n\t}).map(function(v) {\n\t\treturn v * v;\n\t}).reduce(function(sum, v, i, a) {\n\t\tif (i % 2 === 0) return sum + v - a[i + 1];\n\t\treturn sum;\n\t}, 0);\n\n}(+readline(), readline().split(' ').map(Number)));","tags":["sortings","geometry"],"lang_cluster":"Javascript","src_uid":"48b9c68380d3bd64bbc69d921a098641","code_uid":"29440c5773f7dc99bfe091268a45d627","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48b9c68380d3bd64bbc69d921a098641","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3.1415926536\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['40.8407044967\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31.4159265359\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31111.1920484997\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['172.7875959474\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3141592.6535897931\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['113.0973355292\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['298608.3817237098\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['397266.9574170437\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['431023.3704798660\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['823521.3902487604\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1100144.9065826489\\r\\n']}, {'input': '8', 'time': ['30'], 'mem': ['0'], 'output': ['895488.9947571954\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1241695.6467754442\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1469640.1849419588\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['495517.1260654109\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1877274.3981158488\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['1780774.0965755312\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1510006.5089479341\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1528494.7817143100\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['1741821.4892636713\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1818821.9252031571\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1272941.9273080483\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2045673.1891262225\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1573959.9105970615\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1479184.3434235646\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1258248.6984672088\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1495219.0323274869\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1577239.7333274092\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1624269.3753516484\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1615601.7212203942\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1806742.5014501044\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1611115.5269110680\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1569819.2914796301\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['2042921.1539616778\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['1310703.8710041976\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['1686117.9099228707\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['1419726.5608617242\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1556458.0979239127\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1775109.8050211088\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1447969.4788174964\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1597889.4218394549\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1567230.6191330721\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['298608.3817237098\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"print(function(n, a) {\n\n\ta = a.sort(function(a, b) {\n\t\treturn a - b;\n\t}).map(function(v) {\n\t\treturn v * v;\n\t});\n\n\tvar sum = 0;\n\tfor (var i = n; i >= 1; i -= 2) {\n\t\tsum += a[i] - a[i - 1];\n\t}\n\n\treturn sum * Math.PI;\n\n}(+readline(), ('0 ' + readline()).split(' ').map(Number)));","tags":["sortings","geometry"],"lang_cluster":"Javascript","src_uid":"48b9c68380d3bd64bbc69d921a098641","code_uid":"9c3a0c65d6671f413273bf566ee1adb2","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48b9c68380d3bd64bbc69d921a098641","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3.1415926536\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['40.8407044967\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31.4159265359\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31111.1920484997\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['172.7875959474\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3141592.6535897931\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['113.0973355292\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['298608.3817237098\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['397266.9574170437\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['431023.3704798660\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['823521.3902487604\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1100144.9065826489\\r\\n']}, {'input': '8', 'time': ['30'], 'mem': ['0'], 'output': ['895488.9947571954\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1241695.6467754442\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1469640.1849419588\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['495517.1260654109\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1877274.3981158488\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['1780774.0965755312\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1510006.5089479341\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1528494.7817143100\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['1741821.4892636713\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1818821.9252031571\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1272941.9273080483\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2045673.1891262225\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1573959.9105970615\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1479184.3434235646\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1258248.6984672088\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1495219.0323274869\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1577239.7333274092\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1624269.3753516484\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1615601.7212203942\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1806742.5014501044\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1611115.5269110680\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1569819.2914796301\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['2042921.1539616778\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['1310703.8710041976\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['1686117.9099228707\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['1419726.5608617242\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1556458.0979239127\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1775109.8050211088\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1447969.4788174964\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1597889.4218394549\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1567230.6191330721\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['298608.3817237098\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":";(function () {\n\tprint(function () {\n\t\tvar n = +readline(), t = 0,\n\t\t\ta = readline().split(' ').map(Number).sort(function (a, b) { return a - b; });\n\n\t\tif ((n%2) === 1) a.unshift(0);\n\n\t\tfor (var i = a.length - 1; i > 0; i -= 2)\n\t\t\tt += Math.PI * (Math.pow(a[i], 2) - Math.pow(a[i - 1], 2));\n\n\t\treturn t;\n\t}());\n}).call(this);\n","tags":["sortings","geometry"],"lang_cluster":"Javascript","src_uid":"48b9c68380d3bd64bbc69d921a098641","code_uid":"e648c16be027d6e2a849ffa1254c5db8","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48b9c68380d3bd64bbc69d921a098641","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3.1415926536\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['40.8407044967\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31.4159265359\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31111.1920484997\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['172.7875959474\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3141592.6535897931\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['113.0973355292\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['298608.3817237098\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['397266.9574170437\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['431023.3704798660\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['823521.3902487604\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1100144.9065826489\\r\\n']}, {'input': '8', 'time': ['30'], 'mem': ['0'], 'output': ['895488.9947571954\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1241695.6467754442\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1469640.1849419588\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['495517.1260654109\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1877274.3981158488\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['1780774.0965755312\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1510006.5089479341\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1528494.7817143100\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['1741821.4892636713\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1818821.9252031571\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1272941.9273080483\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2045673.1891262225\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1573959.9105970615\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1479184.3434235646\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1258248.6984672088\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1495219.0323274869\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1577239.7333274092\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1624269.3753516484\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1615601.7212203942\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1806742.5014501044\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1611115.5269110680\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1569819.2914796301\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['2042921.1539616778\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['1310703.8710041976\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['1686117.9099228707\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['1419726.5608617242\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1556458.0979239127\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1775109.8050211088\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1447969.4788174964\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1597889.4218394549\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1567230.6191330721\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['298608.3817237098\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = Number(readline());\nvar radi = readline().split(' ').map(function (e) { return Number(e); });\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nradi.sort(compareNumbers);\n\nvar pi = 3.1415926536;\nvar ans = 0;\n\nfor (var i=n - 1; i >= 0; i -= 2) {\n\tans += pi * (radi[i] * radi[i]);\n\tif (i > 0) ans -= pi * (radi[i-1]*radi[i-1]);\n}\n\nprint(ans);","tags":["sortings","geometry"],"lang_cluster":"Javascript","src_uid":"48b9c68380d3bd64bbc69d921a098641","code_uid":"f7bda3c1c2d7de325032dd693eb8b16c","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"48b9c68380d3bd64bbc69d921a098641","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3.1415926536\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['40.8407044967\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31.4159265359\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['31111.1920484997\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['172.7875959474\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3141592.6535897931\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['113.0973355292\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['298608.3817237098\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['0'], 'output': ['397266.9574170437\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['431023.3704798660\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['823521.3902487604\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1100144.9065826489\\r\\n']}, {'input': '8', 'time': ['30'], 'mem': ['0'], 'output': ['895488.9947571954\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1241695.6467754442\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1469640.1849419588\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['495517.1260654109\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1877274.3981158488\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['1780774.0965755312\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1510006.5089479341\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['1528494.7817143100\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['8'], 'output': ['1741821.4892636713\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1818821.9252031571\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1272941.9273080483\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2045673.1891262225\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1573959.9105970615\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1479184.3434235646\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['1258248.6984672088\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1495219.0323274869\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1577239.7333274092\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1624269.3753516484\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1615601.7212203942\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1806742.5014501044\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['1611115.5269110680\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['1569819.2914796301\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['2042921.1539616778\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['4'], 'output': ['1310703.8710041976\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['1686117.9099228707\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['8'], 'output': ['1419726.5608617242\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1556458.0979239127\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1775109.8050211088\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1447969.4788174964\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1597889.4218394549\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1567230.6191330721\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['298608.3817237098\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\n\/*\nvar indicator = 0, cont = new Map(), maxScore = 0, winner = \"\";\n\nrl.on('line', (input) => {\n    if (indicator == 0)\n        indicator++;\n    else {\n        if (cont.has(input))\n            cont.set(input, cont.get(input)+1);\n        else \n            cont.set(input, 1);\n        \n        if (maxScore < cont.get(input)) {\n            maxScore = cont.get(input);\n            winner = input;\n        }\n            \n    }    \n\n  }).on('close',()=> {\n      console.log(winner);\n  \/\/    console.log(cont);\n  });\n*\/\n\nvar indicator = 0, team1Name = \"\", team2Name = \"\", score1 = 0, score2 = 0;\n\nrl.on('line', (input)=> {\n    if (indicator == 0)\n        indicator++;\n    else {\n        if (input == team1Name)\n            score1++;\n        else if (input == team2Name)\n            score2++;\n        else if (team1Name == \"\") {\n            team1Name = input;\n            score1++;\n        }\n        else {\n            team2Name = input;\n            score2++;\n        }        \n    }    \n}).on('close', function() {\n    console.log((score1 > score2) ? team1Name : team2Name);\n});\n","tags":["strings"],"lang_cluster":"Javascript","src_uid":"e3dcb1cf2186bf7e67fd8da20c1242a9","code_uid":"69e9663bcc7eba8cc4bfb20faf39afbe","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"e3dcb1cf2186bf7e67fd8da20c1242a9","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['ABC\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['A\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['XTSJEP\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['XZYDJAEDZ\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['QCCYXL\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['EERWBC\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['HNCGYL\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['ZZWZTG\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['A\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['PHBTW\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['PKUZYTFYWN\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['HH\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['W\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['XBCP\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['PYPAS\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NC\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['VOCI\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['HA\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['G\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['WL\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nvar indicator = 0, cont = new Map(), maxScore = 0, winner = \"\";\n\nrl.on('line', (input) => {\n    if (indicator == 0)\n        indicator++;\n    else {\n        if (cont.has(input))\n            cont.set(input, cont.get(input)+1);\n        else \n            cont.set(input, 1);\n        \n        if (maxScore < cont.get(input)) {\n            maxScore = cont.get(input);\n            winner = input;\n        }\n            \n    }    \n\n  }).on('close',()=> {\n      console.log(winner);\n    \/\/  console.log(cont);\n  });\n","tags":["strings"],"lang_cluster":"Javascript","src_uid":"e3dcb1cf2186bf7e67fd8da20c1242a9","code_uid":"5b71a0c52111841b528681bee04cebe6","difficulty":1000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"e3dcb1cf2186bf7e67fd8da20c1242a9","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['ABC\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['A\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['XTSJEP\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['XZYDJAEDZ\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['QCCYXL\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['EERWBC\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['HNCGYL\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['ZZWZTG\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['A\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['PHBTW\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['PKUZYTFYWN\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['HH\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['W\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['XBCP\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['PYPAS\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['NC\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['VOCI\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['HA\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['G\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['WL\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll = readline().split(' ').map(v => parseInt(v))\nlet N = lll[0]\nlet H = lll[1]\nlet R = lll[2]\nlet h = H\nlet d = 0\n\nlet ss = []\n\nwhile (lll = readline()) {\n  ss.push(lll.split(' ').map(v => parseInt(v)))\n}\n\nlet fail = false\nlet t = 0\nlet uss = []\nlet i = 0\nwhile (h > 0) {\n  h = Math.min(h - d + R, H)\n  let bs = gbs()\n  let bsi = ss.indexOf(bs)\n  if (bs && h > 0) {\n    d += bs[1]\n    bs[0] = -1\n    uss.push([t, bsi + 1])\n  } else if (h == H) {\n    fail = true\n    break\n  }\n  t++\n}\n\nif (fail) {\n  print('NO')\n} else {\n  print('YES')\n  print(t - 1 + ' ' + uss.length)\n  uss.forEach(v => print(v.join(' ')))\n}\n\nfunction gbs () {\n  let lim = h \/ H * 100\n  return ss.filter(s => s[0] >= lim)\n    .sort((a, b) => b[1] - a[1])\n    [0]\n}","tags":["implementation","greedy"],"lang_cluster":"Javascript","src_uid":"e9c486e2d942700e0644dff29b6e3be6","code_uid":"e2a7f6a6043023700143e4daf913f504","difficulty":1800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"e9c486e2d942700e0644dff29b6e3be6","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['YES\\r\\n19 2\\r\\n0 1\\r\\n10 2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['152'], 'output': ['YES\\r\\n21 6\\r\\n0 10\\r\\n15 9\\r\\n17 1\\r\\n18 2\\r\\n19 6\\r\\n20 5\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['148'], 'output': ['YES\\r\\n7 7\\r\\n0 18\\r\\n1 15\\r\\n2 20\\r\\n3 5\\r\\n4 6\\r\\n5 2\\r\\n6 4\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['148'], 'output': ['YES\\r\\n3 3\\r\\n0 31\\r\\n1 14\\r\\n2 16\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['152'], 'output': ['YES\\r\\n8 8\\r\\n0 11\\r\\n1 41\\r\\n2 32\\r\\n3 46\\r\\n4 19\\r\\n5 13\\r\\n6 34\\r\\n7 43\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['152'], 'output': ['YES\\r\\n34 34\\r\\n0 29\\r\\n1 38\\r\\n2 46\\r\\n3 53\\r\\n4 56\\r\\n5 60\\r\\n6 70\\r\\n7 64\\r\\n8 52\\r\\n9 3\\r\\n10 1\\r\\n11 9\\r\\n12 14\\r\\n13 19\\r\\n14 55\\r\\n15 4\\r\\n16 10\\r\\n17 57\\r\\n18 63\\r\\n19 6\\r\\n20 8\\r\\n21 18\\r\\n22 12\\r\\n23 31\\r\\n24 42\\r\\n25 49\\r\\n26 20\\r\\n27 16\\r\\n28 30\\r\\n29 36\\r\\n30 11\\r\\n31 24\\r\\n32 41\\r\\n33 7\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['12'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['152'], 'output': ['YES\\r\\n509 10\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['YES\\r\\n12 11\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n']}, {'input': '3', 'time': ['15'], 'mem': ['8'], 'output': ['YES\\r\\n102 3\\r\\n0 2\\r\\n1 1\\r\\n101 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['YES\\r\\n51 2\\r\\n0 1\\r\\n1 2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['12'], 'output': ['YES\\r\\n1001 2\\r\\n0 1\\r\\n1 2\\r\\n']}, {'input': '6', 'time': ['15'], 'mem': ['152'], 'output': ['YES\\r\\n148 6\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n']}, {'input': '3', 'time': ['15'], 'mem': ['4'], 'output': ['YES\\r\\n102 3\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['15'], 'mem': ['12'], 'output': ['NO\\r\\n']}, {'input': '3', 'time': ['15'], 'mem': ['16'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll = readline().split(' ').map(v => parseInt(v))\n\nlet bo = lll[0]\nlet bn = lll[1]\nlet n = lll[2]\n\nlet res = 'No solution'\n;(function () {\n  for (let i = -1000; i <= 1000; i++) {\n    if (bo * Math.pow(i, n) == bn) return res = i\n  }\n})()\n\nprint(res)","tags":["brute force","math"],"lang_cluster":"Javascript","src_uid":"8a9adc116abbd387a6a64dd754436f8a","code_uid":"ffc5789a5b1ea5182e7b17f00ec9d496","difficulty":1400,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"8a9adc116abbd387a6a64dd754436f8a","hidden_unit_tests":"[{'input': '2', 'time': ['30'], 'mem': ['4'], 'output': ['3']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['-2']}, {'input': '0', 'time': ['0'], 'mem': ['4'], 'output': ['5']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '0', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1000']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['2']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['243']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['1']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['1']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['1']}, {'input': '-', 'time': ['0'], 'mem': ['8'], 'output': ['1']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['-1']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '0', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['-1']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['-1']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['0']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['25']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['112']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['No solution']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['4']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['No solution']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['243']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['No solution']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1000']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['10']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['3']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1000']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['10']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3']}, {'input': '7', 'time': ['30'], 'mem': ['4'], 'output': ['2']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['2']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1000']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['10']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['5']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['3']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['2']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['2']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['-1']}]","all_passed":0}
{"lang":"JavaScript","source_code":"\nvar s=readline();\nvar m=false;\ns=s.replace('-', function(){m=true;return'';});\ns=s.split('.');\ns[0] = s[0].split(\/(?=(?:\\d\\d\\d)+$)\/).join(',');\ns[1] = ((s[1]||'')+'00').slice(0, 2);\ns = s.join('.');\nif(m){\n\tprint( '($'+s+')' );\n}else{\n\tprint('$'+s);\n}","tags":["implementation","strings"],"lang_cluster":"Javascript","src_uid":"c704c5fb9e054fab1caeab534849901d","code_uid":"a5440c8721bcb6a0218bcb8210f7bc73","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c704c5fb9e054fab1caeab534849901d","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['$2,012.00']}, {'input': '0', 'time': ['0'], 'mem': ['0'], 'output': ['$0.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($0.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($12,345,678.90)']}, {'input': '0', 'time': ['0'], 'mem': ['8'], 'output': ['$0.99']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($999,999,999.99)']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['$4.30']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['($3,136.00)']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['$47.84']}, {'input': '0', 'time': ['0'], 'mem': ['0'], 'output': ['$0.00']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($1.00)']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['$5.39']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($359,789.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($999,999.00)']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['$50,117.75']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($2,717.85)']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['$446,900,763.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($92.04)']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$1,000,000,000.00']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['($4,097,961.50)']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($83,348,637.91)']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['$741,968,647.01']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['$8,590,210,736.20']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($337,322,633.10)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($9,389,724,657.70)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($337,807,291,537,795.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($1,000,000,000,000,000.00)']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$1,000,000,000,000,000,000.00']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['$64,852,365,412,711,705.40']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($14,193,044,875,680,849,641.00)']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['($9,087,207,850,675,188,568.44)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($999,999,999,999,999,999,999,999.00)']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['$95,464,737,206,897,655,595,566.87']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['$20,486,447,414,118.91']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($195,688,513,344,900,667,321,324,887,161.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($467,854,663,215,578,391,335,472,070.52)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($9,946,519,009,668,593,136,622,791,780,335,166,786,329.96)']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($39,243,277,445,578,948,100,023,610,303,161,362.21)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($1,120,451,303,595,201,012,675,538,441,508,298,946,450,567,446.20)']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['($667,416,497,168,265,603,150,839,581,334,265,910,632,362,977,345.00)']}, {'input': '-', 'time': ['0'], 'mem': ['8'], 'output': ['($5,896,634,442,314,348,289,084,387,258,044,853,039,981,310,264,175.00)']}, {'input': '6', 'time': ['0'], 'mem': ['4'], 'output': ['$645,862,132,625,704,263,852,654,466,816,044,056,725,411,814,537,812.80']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['$20,302,284,249,108,248,013,254,029,284,738,266,163,210,459,601,273.43']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($335,585,948,391,999,514,421,347,454,725,980,775,593,710,083,728,376.23)']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['$8,069,847,002,922,332,743,537,016,743,686,274,581,681,180,388,843,128,677,728.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($1,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000.00)']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['($9,426,928,046,528,138,766,008,648,709,237,083,850,143,959,438,752.99)']}, {'input': '7', 'time': ['0'], 'mem': ['4'], 'output': ['$7,847,469,828,916,401,598,273,845,389,736,502,122,924,911,071,339,770,925.27']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['$6,612,569,248,276,041,501,392,573,128,342,394,934.33']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($78,441,689,173,753,107,674,674,252,785,635,804,718,172,761,356,557,153,691,194.62)']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($26,420,799,441,242,046,176,813,573,049,397,911,227,605,022,448,441,841.79)']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$1,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($440,176,280,332,493,569,864,975,483,046,616,452,663,067,706,833,582,934,195,268,991.00)']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['$45,068,840,874,548,394,281,603,568,826,222,223,550,419,177,965,629,777,875,090,709,223.00']}, {'input': '6', 'time': ['30'], 'mem': ['4'], 'output': ['$694,057,847,299,426,980,275,391,007,402,296,515,925,594,191,675,094,941,155,586,653,678.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($957,970,608,566,623,530,128,907,769,981,235,852,029,999,876,705,137,521,027,635,757.98)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($31,237,099,946,005,389,291,000,524,337,411,657,445,033,712,616,943,108,265,479,899,943,319,776,753.00)']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$129,213,728,483,376,896,322,034,359,636,257,815,625,283,844,448,760,915,618,261,775,174,758,145,181.40']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['$42,436,883,801,797,921,017,002,508,329,344,377,731,225,676,938,894,736,357,215,113,693,696,441,876.74']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($412,877,493,852,539,226,130,846,658,848,085,431,323,015,500,045,621,801.18)']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($574,893,403,412,500,337,461,904,214,575,009,975,847,859,132,644,288,548,328,404,148,513,112,616,299,380,872,537.00)']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['$5,533,548,446,182,725,508,036,320,768,515,297,517,684,533,355,269,108,005,785,922,527,441,026,147,032,711,096,226.86']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($388,992,510,982,960,799,226,860,251,113,727,086.40)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($1,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($5,918,197,227,517,459,215,086,434,488,069,169,077,399,840,893,456,742,554,562,785,165,395,986,123,057,440,893,145,094.76)']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['$6,478,564,388,953,796,549,388,720,554,132,845,507,729,109,849,868,298,957,775,985,580,270,942,075,809,511,904,097,608,680.20']}, {'input': '-', 'time': ['30'], 'mem': ['0'], 'output': ['($6,608,605,342,368,730,994,322,893,748,034,318,039,589,361,759,849,416,904,183,711,274,389,684,094,202,666,590,051,634,245,034,124.00)']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['$96,923,618,713,643,049,034,901,616,201,059,739,110,612,607,940,570,171,931,128,836,281,408,507,843,006,798,661,841,666,493,086.61']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($517,546,026,888,198,271,507,158,769,760,866,655,703,910,236,108,772,942,356,185,789,408,213,495,267,854,245,076,096,353,651,979.80)']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['$9,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999.00)']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($815,237,564,329,654,906,966,710,129,877,160,169,011,275,185,850,610,159,260,306,644,937,525,319,275,278,007,248,384,181,194,947.28)']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$1,609,444,903,206,838,610,558,177,906,619,581,955,157,825,950,595,724,445,549,624,361,368,550,861,446,891,019,160,980,179,056,621,441.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($35,537,407,322,675,227,867,508,928,547,215,513,270,324,784,786,663,652,634,725,025,510,744,878,530,809,034,357,724,640,012,675.56)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($1,925,998,064,032,579,186,735,317,615,389,112,142,155,311,850,475,835,576,562,145,669,565,982,488,184,005,786,899,836,428,580,775.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($151,277,365,498,121,078,756,232,179,307,020,255,183,838,049,147,325,207,397,719,920,725,067,524,511,168,597,227,357,027,671,262,974.00)']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($94,567,610,568,172,711,079,874,848,395,505,663,034,158,058,453,541,356,405,687,412,896,214,661,991,252,184,312,404,537,628,616.98)']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['$5,552,014,028,917,125,934,664,874,618,128,879,449,020,166,415,278,427,980,290,619,767,043,458,191,075,263,555,779,358,121.76']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['$2,550,200,914,539,395,142,436,748,539,585,175,024,948,346,405,871,252,468,705,518,320,188,561,734,542,212,313,710,731,590,053,887.14']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$169,111,053,680,418,810,505,586,659,748,530,205,695,340,474,893,994,150,913,915,241,455,549,545,588,046,718,243,429,009,096,899.72']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($8,302,081,723,264,231,257,651,127,829,066,891,591,565,707,300,162,037,272,443,063,737,275,775,635,240,827,533,455,570,038,921,755.80)']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($292,248,618,257,633,380,305,171,416,004,365,379,539,463,749,949,334,547,640,267,733,391,588,708,052,597,413,502,241,817,581,110.84)']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['$8,087,188,987,747,615,879,025,660,857,396,187,057,475,326,352,182,448,073,610,839,965,896,456,538,717,186,544,887,072,170,343,027,939.00']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['$762,519,263,820,550,209,316,662,292,240,308,083,373,767,394,981,759,714.03']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($81,065,814,290,895,584,254,457,019,744,497,055,053,248,932,892,817,738,718,849,487,679,519,028,041,818,854,925,725,440,291,395.39)']}, {'input': '-', 'time': ['0'], 'mem': ['8'], 'output': ['($32,941,712,101,597,478,543,219,921,523,193,493,949,615,291,911,649,974,076,128,866,311,848,385,268,672,190,709,108,207,764,990.55)']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['$2,089,113,443,991,831,781,611,590,658,416,581,830,404,242,017.85']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($93,446,155,923,266,881,322,196,606,839,694,485,100,712,773,936,897,171,033,382,798,807,975,023,881,552,872,455,711,005,123,932.74)']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['$960,516,596,871,944,593,730,108,478,032,758,053,821,336,372,808,735,358,607,440,437,077,013,969,634,756,697,387,966,042,842,288.50']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['$7,542,946,645,993,289,345,871,768,107,036,410,651,745,989,844,030,221,776,852,993,379,463,784,193,885,567,707,317,993,804,499,615,689.00']}, {'input': '-', 'time': ['0'], 'mem': ['4'], 'output': ['($62,833,497,045,916,718,064,314,002,220,718,776,776,624,697,240,820,362,462,669,558,147,156,815,011,509,869,423,334,004,968,891.07)']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['$369,983,878,656,471,317,107,141,313,973,936,685,655,559,201,630,341,263,457,253,892,446,495.82']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$1,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000.00']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($7,200,722,479,435,658,295,856,375,503,813,639,375,609,209,638,447,823,589,904,775,057,990,210,002,452,424,572,601,761,458,228,411.30)']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['$1.62']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['$9,094,697,811,219,913,240,397,316,094,992,038,813,655,777,565,859,532,452.35']}, {'input': '-', 'time': ['0'], 'mem': ['0'], 'output': ['($241,995,182,456,075,514,870,952,227,695,034,085,165,209,475,359,259,147,742,565,065,759,917,424,411,707,290,789,641,890,279,251.11)']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['$2,567,340,036,354,357,844,391,998,756,110,821,468,858,185,018,763,415,770,617,907,336,824,217,629,234,299,240,638,243,305,079,104,961.00']}]","all_passed":0}
{"lang":"Node.js","source_code":"(()=>{\"use strict\";var t={675:(t,e)=>{Object.defineProperty(e,\"__esModule\",{value:!0}),Array.prototype.sortAsc=function(){return this.sort(((t,e)=>t-e))},Array.prototype.sortDesc=function(){return this.sort(((t,e)=>e-t))},Array.prototype.max=function(){return Math.max(...this)},Array.prototype.min=function(){return Math.min(...this)},Array.prototype.sum=function(){let t=0;for(let e=0;e<this.length;++e)t+=this[e];return t},Array.prototype.avg=function(){return this.sum()\/this.length}},312:function(t,e,r){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\"__esModule\",{value:!0});const o=n(r(747));let u=\"\",i=[],s=0,l=\"\";const a=\"local\"===process.argv[2],f=t=>{if(a)return i=o.default.readFileSync(\"input.txt\").toString().trim().split(\"\\n\").map((t=>t.trim())),t(),void o.default.writeFileSync(\"output.txt\",l);process.stdin.resume(),process.stdin.setEncoding(\"utf-8\"),process.stdin.on(\"data\",(t=>{u+=t})),process.stdin.on(\"end\",(e=>{i=u.trim().split(\"\\n\").map((t=>t.trim())),t(),console.log(l)}))};function p(){return i[s++]}function c(){return p().split(\" \").map((t=>parseFloat(t)))}function d(){return p().split(\"\")}e.default={runMain:f,runEachTest:t=>{f((()=>{let[e]=c();for(;e>0;)t(),e--}))},readline:p,nextNumbers:c,nextNumbersMatrix:function(t){let e=[];for(let r=0;r<t;++r)e.push(c());return e},nextCharacters:d,nextCharacterMatrix:function(t){let e=[];for(let r=0;r<t;++r)e.push(d());return e},nextIntervalArray:function(t){let e=[];for(let r=0;r<t;++r){const[t,r]=c();e.push({a:t,b:r})}return e},put:function(t){l+=t},puts:function(t){l+=t+\"\\n\"},debug:function(t){a&&console.log(t)}}},965:function(t,e,r){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\"__esModule\",{value:!0}),r(675);const o=n(r(312));o.default.runMain((function(){let t=o.default.readline(),e=[],r=\"\",n=\"\",u=!1;for(let i=0;i<t.length;++i){if(\"@\"==t[i]&&0==r.length)return void o.default.put(\"No solution\");if(\"@\"==t[i]&&i==t.length-1)return void o.default.put(\"No solution\");if(\"@\"!=t[i]||0!=n.length)if(\"@\"!=t[i])u?n+=t[i]:r+=t[i];else{if(n.length<2)return void o.default.put(\"No solution\");e.push(r+\"@\"+n.substr(0,n.length-1)),r=n[n.length-1],n=\"\"}else{if(\"@\"==t[i-1])return void o.default.put(\"No solution\");u=!0}}u&&0!=n.length?(e.push(r+\"@\"+n),o.default.put(e.join(\",\"))):o.default.put(\"No solution\")}))},747:t=>{t.exports=require(\"fs\")}},e={};!function r(n){if(e[n])return e[n].exports;var o=e[n]={exports:{}};return t[n].call(o.exports,o,o.exports,r),o.exports}(965)})();","tags":["implementation","greedy","strings"],"lang_cluster":"Javascript","src_uid":"71b4674e91e0bc5521c416cfc570a090","code_uid":"62bcb2818d23521930b2ea9cd8c39282","difficulty":1500,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"71b4674e91e0bc5521c416cfc570a090","hidden_unit_tests":"[{'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['a@a,a@a\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['aba@c,aba@daba\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['asd@q,wasd@q,wasd@q,wasd@q,wasd@qw\\r\\n']}, {'input': 'q', 'time': ['0'], 'mem': ['0'], 'output': ['qwer@ty\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'g', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'r', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'w', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['15'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'j', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'n', 'time': ['0'], 'mem': ['0'], 'output': ['n@m\\r\\n']}, {'input': 'k', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'f', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'q', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'w', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['4'], 'output': ['e@vb\\r\\n']}, {'input': 't', 'time': ['0'], 'mem': ['4'], 'output': ['tg@q\\r\\n']}, {'input': 'j', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'w', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'd', 'time': ['0'], 'mem': ['8'], 'output': ['duk@r,ufrxjzqbwkfrzf@s,jp@m,dpyrokdfmcmexxtjqaalruvtzwfsqabi@t,jkxilrhkwzfeuqm@lpwnxgebirdvwplsvrtxvhmzv\\r\\n']}, {'input': 'u', 'time': ['0'], 'mem': ['8'], 'output': ['umegsn@q,lmkpkyrmuclefdpfhzuhyjcoqthnvpwzhkwrdvlzfbrqpzlg@e,bzycyaofyyetwcepe@nxjwyeaqbuxxbohfzrnmebuy\\r\\n']}, {'input': 'l', 'time': ['0'], 'mem': ['0'], 'output': ['l@s,nuoytgflrtuexpx@t,xzhhdwbakfhfro@s,yxistypegfvdmurvuubrj@grsznzhcotagqueuxtnjgfaywzkbglwwiptjyocxcs\\r\\n']}, {'input': 'c', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'u', 'time': ['0'], 'mem': ['0'], 'output': ['ukpcivvjubgalr@b,dxangokpaxzxuxe@q,lemwpvywfudffafsqlmmhhalaaolktmgmhmrwvkdcvwxcfbytnz@jgmbhpwqcmecnxc\\r\\n']}, {'input': 'm', 'time': ['15'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'w', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'v', 'time': ['15'], 'mem': ['8'], 'output': ['No solution\\r\\n']}, {'input': 'm', 'time': ['0'], 'mem': ['0'], 'output': ['mhxapzklriiincpnysmegjzaxdngifbowkzivvgisqbekprdmdoqezdsrsrwwmht@hwywjqflvqdevpqisncwbftlttfkgsyetop\\r\\n']}, {'input': 'd', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['15'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['0'], 'output': ['e@ierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghd\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['4'], 'output': ['erierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtg@d\\r\\n']}, {'input': 'e', 'time': ['15'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['15'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': '@', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['8'], 'output': ['No solution\\r\\n']}, {'input': 'e', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['a@r,ierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderirjtghderierjtghderierjtghderierjthderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtghderierjtgh@a\\r\\n']}, {'input': 'd', 'time': ['0'], 'mem': ['0'], 'output': ['d@n,t@o,m@z,z@u,t@t,r@t,a@a,p@o,u@s,y@s,v@f,g@e,l@r,p@q,r@n,l@j\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['0'], 'output': ['a@m,c@k,s@g,u@r,l@g,q@z,q@i,z@d,a@u,q@m,i@n,f@z,s@h,i@w,e@e,j@k,e@v,b@a,z@y,z@y,l@r,r@g,h@u,m@n,v@q,e@q,q@d,e@d,y@o,p@g,t@v,x@a,k@q\\r\\n']}, {'input': 'c', 'time': ['0'], 'mem': ['4'], 'output': ['c@i,r@x,f@a,p@f,k@s,p@w,m@e,c@q,w@v,g@b,y@i,u@t,r@w,u@p,v@l,j@d,d@t,c@q,j@o,k@h,m@b,s@u,l@e,z@c,g@h,t@x,f@a,g@t,r@h,z@a,p@t,x@l,y@d,g@h,u@n,d@u,v@i,l@i,i@c,n@n,c@n,b@c,y@k,p@d,k@x,a@d,a@t,a@y,r@y,v@q,g@d,b@j,e@w,z@r,n@y,h@x,i@m,j@k,c@u,j@y,u@c,f@p,s@a,o@f,o@l,e@d\\r\\n']}, {'input': 'm', 'time': ['0'], 'mem': ['0'], 'output': ['m@u,s@r,u@m,g@r,q@e,d@o,t@g,t@f,o@g,s@l,m@c,x@a,u@r,q@z,t@z,k@j,r@x,d@o,a@p,y@k,f@l,k@z,r@k,o@l,j@w,v@f,l@y,l@g,k@c,x@p,x@k,l@i,c@s,r@x,n@h,m@x,s@k,m@t,k@u,i@y,a@p,a@x,x@z,e@p,y@i,r@x,j@c,r@d,q@l,r@c,m@z,u@l,t@b,x@k,q@k,x@f,r@l,u@v,b@r,z@h,g@i,w@d,l@p,f@p,l@w,v@z\\r\\n']}, {'input': 'g', 'time': ['0'], 'mem': ['0'], 'output': ['gjkjqjrks@e,yqiia@q,fijelnmigoditxjrtuhukalfl@n,mwancimlqtfekzkxgjioedhtdivqajwbmu@h,pdxuiwurpgenxaiqaqkcqimcvitljuisfiojlylveie@n,eqdjzeqdbiatjpuhujgykl@gmmlrhnlghsoeyrccygigtkjrjxdwmnkouaiaqpquluwcdqlxqb\\r\\n']}, {'input': 'u', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'u', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['No solution\\r\\n']}, {'input': 'm', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['aglvesxsmivijisod@m,xcnbfcfgqfwjouidlsueaswf@o,behqpvbkmukxkicyoknkbol@k,utunggpoxxfpbe@q,khv@l,lddqqoyjeex@b,yvtlhbifqmvlukmrvgvpwrscwfhpuwyknwchqhrdqgarmnsdlqgf@l,seltghg@b,huwbfjpsvayzk@f,vwow@zapklumefauly\\r\\n']}, {'input': 'g', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'd', 'time': ['0'], 'mem': ['0'], 'output': ['No solution\\r\\n']}, {'input': 'j', 'time': ['0'], 'mem': ['0'], 'output': ['jrlhtwmotdhtgcqokodparuqypwlkbhfsxvmdpfiraokekrolwtlsqjzcuvjfnvblznyngasauzln@g,jypvjcwljnotgjlxketfgtntbotwjehea@vppouyoujujlhjrxbhvltfdslaqwynwjefbdbnuehmipqmtsrivlnippgftgnkhdgqiqbfvgrtoxrznncncqcvf\\r\\n']}, {'input': 'o', 'time': ['0'], 'mem': ['0'], 'output': ['oxkvgnggznlfhminxkkhictpiaokdsfrewnxiujpjpstlyxovfwugrsqnpooalknjnfugxojozizlicwvnbflhdevpvnvwztnfiapairpigexbaeshondqdecduewmfrxunphikvlfwmrpsxrhxyjlsgqfiaqnwzlzxcyuudhzr@twllmhyfclybxqazhrmxdtokxawc\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"let inputString = \"\";\nlet currentLine = 0;\nprocess.stdin.on(\"data\", (data) => {\n  inputString += data;\n});\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((str) => str.trim());\n  main();\n});\nfunction readLine() {\n  return inputString[currentLine++];\n}\nfunction main() {\n  const len1 = +readLine();\n  const arr1 = readLine()\n    .split(\" \")\n    .map((n) => parseInt(n));\n  const len2 = +readLine();\n  const arr2 = readLine()\n    .split(\" \")\n    .map((n) => parseInt(n));\n\n  let max = Number.MIN_SAFE_INTEGER;\n  let count = 0;\n\n  for (let i = 0; i < len2; i++) {\n    const a = arr2[i];\n    for (let j = 0; j < len1; j++) {\n      const b = arr1[j];\n      const div = a \/ b;\n      if (Number.isInteger(div)) {\n        if (div > max) {\n          max = div;\n          count = 0;\n        }\n        if (div === max) count++;\n      }\n    }\n  }\n  console.log(count);\n}\n","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"102667eaa3aee012fef70f4192464674","code_uid":"c20293ceb5d47d883ec27e5b44688c47","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"102667eaa3aee012fef70f4192464674","hidden_unit_tests":"[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'time': ['0'], 'mem': ['136'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'time': ['30'], 'mem': ['4'], 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}]","all_passed":1}
{"lang":"Node.js","source_code":"let inputString = '';\nlet currentLine = 0;\nprocess.stdin.on('data', data => {\n\tinputString += data;\n});\nprocess.stdin.on('end', function () {\n\tinputString = inputString\n\t\t.trim()\n\t\t.split('\\n')\n\t\t.map(str => str.trim());\n\tmain();\n});\n\nfunction readLine() {\n\treturn inputString[currentLine++];\n}\n\nvar dp = {};\n\nfunction fibonacci(n) {\n\tif (n === 0) return 0;\n\tif (n === 1) return 1;\n\n\tif (dp[n] !== undefined) return dp[n];\n\tlet result = fibonacci(n - 1) + fibonacci(n - 2);\n\treturn (dp[n] = result);\n}\n\nfunction main() {\n\tlet n = readLine() >> 0;\n\tlet a = readLine()\n\t\t.split(' ')\n\t\t.map(x => x >> 0);\n\tlet m = readLine() >> 0;\n\tlet b = readLine()\n\t\t.split(' ')\n\t\t.map(x => x >> 0);\n\tlet best = 0;\n\tlet store = {};\n\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = m - 1; j >= 0; j--) {\n\t\t\tif (Math.floor(b[j] \/ a[i]) < best) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (b[j] % a[i] === 0) {\n\t\t\t\tbest = Math.max(best, b[j] \/ a[i]);\n\t\t\t\tstore[best] = (store[best] || 0) + 1;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(store[best]);\n}\n","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"102667eaa3aee012fef70f4192464674","code_uid":"5764b651a1e3923407ab844e35d93432","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"102667eaa3aee012fef70f4192464674","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['136'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['8\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['20\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['28\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['38\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"process.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\nlet inputString = '';\nlet currentLine = 0;\nprocess.stdin.on('data', (inputStd) => {\n    inputString += inputStd;\n});\nprocess.stdin.on('end', function () {\n    inputString = inputString\n        .trim()\n        .split('\\n')\n        .map((str) => {\n            return str.trim();\n        });\n    main();\n});\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\nfunction main() {\n    let n = parseInt(readLine());\n    let aS = readLine().split(' ').map(Number);\n    let m = parseInt(readLine());\n    let bS = readLine().split(' ').map(Number);\n    let integers = [];\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            if (Number.isInteger(bS[i] \/ aS[j])) {\n                integers.push(bS[i] \/ aS[j]);\n            }\n        }\n    }\n    integers.sort((a, b) => {\n        return b - a;\n    });\n    let count = 1;\n    for (let i = 1; i < integers.length; i++) {\n        if (integers[0] === integers[i]) {\n            count++;\n        }\n    }\n    console.log(count);\n}\n","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"102667eaa3aee012fef70f4192464674","code_uid":"066d8d4b2a4f9194f137debd0a8c11ef","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"102667eaa3aee012fef70f4192464674","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['136'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['8\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['20\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['28\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['38\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n\nvar stations = \"\";\nvar subST1 = \"\";\nvar subST2 = \"\";\nvar ind = 0;\n\nrl.on('line', (input) => {\n    if (ind == 0) {\n        stations = input;\n        ind++;\n    } else if (ind == 1) {\n        subST1 = input;\n        ind++;\n    }\n    else {\n        subST2 = input;\n        \/** *\/\n        fw = false;\n        bw = false;\n        fw = ISTrue(stations, subST1, subST2);\n\n        stations = reverceStr(stations);\n        bw = ISTrue(stations, subST1, subST2);\n\n        if (fw && bw)\n            console.log(\"both\");\n        else if (fw)\n            console.log(\"forward\");\n        else if (bw)\n            console.log(\"backward\");\n        else\n            console.log(\"fantasy\");\n\n        \/** *\/\n        rl.close();\n    }\n});\n\n\n\nfunction ISTrue(s, first, second) {\n    let indexOfFirst = s.indexOf(first);\n    let lastIndexOFsecond = s.lastIndexOf(second);\n    return indexOfFirst != -1 && lastIndexOFsecond != -1 &&\n        (indexOfFirst + first.length - 1) < lastIndexOFsecond;\n}\n\nfunction reverceStr(s) {\n  \/*  let arr = s.split('');\n    let limit = parseInt(s.length \/ 2);\n    for (let i = 0, j = s.length - 1; i < limit; i++ , j--) {\n        let t = arr[i];\n        arr[i] = arr[j];\n        arr[j] = t;\n    }\n    return arr.join('');*\/\n   temp=\"\";\n   for(let i=s.length-1;i>=0;i--)\n                  temp+=s.charAt(i);\n\n   return  temp;            \n}","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"9c706c37f6514e350f753312036d7ecb","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n\nvar stations = \"\";\nvar subST1 = \"\";\nvar subST2 = \"\";\nvar ind = 0;\n\nrl.on('line', (input) => {\n    if (ind == 0) {\n        stations = input;\n        ind++;\n    } else if (ind == 1) {\n        subST1 = input;\n        ind++;\n    }\n    else {\n        subST2 = input;\n        \/** *\/\n        fw = false;\n        bw = false;\n        fw = ISTrue(stations, subST1, subST2);\n\n        stations = reverceStr(stations);\n        bw = ISTrue(stations, subST1, subST2);\n\n        if (fw && bw)\n            console.log(\"both\");\n        else if (fw)\n            console.log(\"forward\");\n        else if (bw)\n            console.log(\"backward\");\n        else\n            console.log(\"fantasy\");\n\n        \/** *\/\n        rl.close();\n    }\n});\n\n\n\nfunction ISTrue(s, first, second) {\n    let indexOfFirst = s.indexOf(first);\n    let lastIndexOFsecond = s.lastIndexOf(second);\n    return indexOfFirst != -1 && lastIndexOFsecond != -1 &&\n        (indexOfFirst + first.length - 1) < lastIndexOFsecond;\n}\n\nfunction reverceStr(s) {\n    let arr = s.split('');\n    let limit = parseInt(s.length \/ 2);\n    for (let i = 0, j = s.length - 1; i < limit; i++ , j--) {\n        let t = arr[i];\n        arr[i] = arr[j];\n        arr[j] = t;\n    }\n    return arr.join('');\n}","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"9d9e1f2e3cbdc0b9d3cfd0003183ce60","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nvar check = function (flags, first, second) {\n  \/*for (let i = 0; i < flags.length; i++) {\n    if (flags[i]==first) {\n      flags.substr(i, first.length);\n      for (let j = 0; j < flags.length; j++) {\n          if (flags[j]==second)          \n              return true;\n      } \n      return false;\n    }      \n  }*\/\n  let f_f_indx = flags.indexOf(first);\n  let l_s_indx = flags.lastIndexOf(second);\n  return f_f_indx != -1 && l_s_indx != -1 && f_f_indx + first.length - 1 < l_s_indx;\n}\n\nvar revFlags = function (str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n\nvar flags, first, second, indicator = 0;\n\nrl.on('line', (input) => {\n  if (indicator == 0) {\n    flags = input;\n    indicator++;\n  }\n  else if (indicator == 1) {\n    first = input;\n    indicator++;\n  }\n  else {\n    second = input;\n    \n    let f = check(flags, first, second);\n    \/\/console.log(\"flags = %s\", flags); \n    flags = revFlags(flags);\n    \/\/console.log(\"flags = %s  first = %s second = %s \", flags, first, second);\n    let b = check(flags, first, second);\n\n    if (f && b)\n      console.log(\"both\");\n    else if (f)\n      console.log(\"forward\");\n    else if (b)\n      console.log(\"backward\");\n    else\n      console.log(\"fantasy\");\n\n    rl.close();\n  }\n\n});","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"9b4654f4a37aa1a2d9f8a4e879d70e2c","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\/**\n       0123456789|||\nflags=\"abcFFdefgZZhi\"\nfirst=\"FF\"\nsecond=\"ZZ\"\n\nA            B\nO----------->O   forward\n\nA            B\nO<-----------O   backward\n\nA            B\nO<----------->O   both\n\nA            B\nOX-----------XO   fantasy\n\n       0123456\nflags=\"aaacaaa\"\nfirst=\"aca\"\nsecond=\"aa\"\n\n       012345\nflags=\"aaacaa\"\nfirst=\"aca\"\nsecond=\"aa\"\n\n *\/\n\/\/our functions here...\nvar check = function (flags, first, second) {\n    let FInd = flags.indexOf(first);\n    let SLInd = flags.lastIndexOf(second);\n    return FInd != -1 && SLInd != -1 && FInd + first.length - 1 < SLInd;\n}\n\nvar revStr = function (s) {\n    let ans = \"\";\n    for (let i = s.length - 1; i >= 0; i--)\n        ans += s[i];\n\n    return ans;\n}\n\nvar flags, first, second, indicator = 0;\n\nrl.on('line', (input) => {\n    if (indicator == 0) {\n        flags = input;\n        indicator++;\n    }\n    else if (indicator == 1) {\n        first = input;\n        indicator++;\n    }\n    else {\n        second = input;\n        \/\/************ *\/\n        \/\/console.log(\"flags= %s      first= %s      second= %s\",flags,first,second);\n        let f = check(flags, first, second);\n        flags = revStr(flags);\n        \/\/console.log(\"flags= %s      first= %s      second= %s\",flags,first,second);\n        let b = check(flags, first, second);\n        \/\/console.log(\"flags= %s      first= %s      second= %s   f= %s   b=%s\",flags,first,second,f,b);\n        if (f && b) console.log(\"both\");\n        else if (f) console.log(\"forward\");\n        else if (b) console.log(\"backward\");\n        else console.log(\"fantasy\");\n        \/************** *\/\n        rl.close();\n    }\n\n\n});","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"3ee4310e22047dea79d2aab8be8edb9e","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nvar check = function (flags, first, second) {\n    FIndex = flags.indexOf(first);\n    SLIndex = flags.lastIndexOf(second);\n    return FIndex != -1 && SLIndex != -1 && FIndex + first.length - 1 < SLIndex;\n}\n\nvar flags, first, second, identifier = 0\n\nrl.on('line', (input) => {\n    if (identifier == 0) {\n        flags = input;\n        identifier++;\n    }\n    else if (identifier == 1) {\n        first = input;\n        identifier++;\n    }\n    else {\n        second = input;\n        \/*our code here*\/\n        var f = check(flags,first,second);\n        flags = flags.split(\"\").reverse().join(\"\");\n        var b = check(flags,first,second);\n\n        if (f && b)\n            console.log(\"both\")\n        else if (f)\n            console.log(\"forward\")\n        else if (b)\n            console.log(\"backward\")\n        else \n            console.log(\"fantasy\") \n            \n        \/**end of our code *\/\n        rl.close();\n    }\n});","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"33adf8a41ab5550c60feb4eaf9945289","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"'use strict';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\nlet inputString='';\nlet currentLine=0;\nprocess.stdin.on('data',inputStdin=>{\n    inputString+=inputStdin;\n});\nprocess.stdin.on('end',_=>{\n    inputString=inputString.trim().split(\"\\n\").map(string=>{\n        return string.trim();\n    });\n    main();\n});\nfunction readLine()\n{\n    return inputString[currentLine++]; \n}\nfunction rev(s)\n{\n    return s.split('').reverse().join('');\n}\nfunction main()\n{\n    let s=readLine().trim();\n    let a=readLine().trim();\n    let b=readLine().trim();\n    let x=0;\n    let r=rev(s);\n    if((s.includes(a))&&(s.includes(b)))\n    {\n        let aend=s.indexOf(a)+a.length-1,bstart=r.length-r.indexOf(rev(b))-b.length;\n        \/\/console.log(aend+' '+bstart);\n        if((aend<bstart)&&(aend<s.length)&&(bstart>=0))\n        {\n           x+=1; \n        }\n    }\n    r=s;\n    s=rev(s);\n    if((s.includes(a))&&(s.includes(b)))\n    {\n        let aend=s.indexOf(a)+a.length-1,bstart=r.length-r.indexOf(rev(b))-b.length;\n        \/\/console.log(aend+' '+bstart);\n        if((aend<bstart)&&(aend<s.length)&&(bstart>=0))\n        {\n           x+=2; \n        }\n    }\n    if(x===0)\n    {\n        console.log('fantasy');\n    }\n    else if(x==1)\n    {\n        console.log('forward');\n    }\n    else if(x==2)\n    {\n        console.log('backward');\n    }\n    else if(x==3)\n    {\n        console.log('both');\n    }\n}\n\n\n","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"98675c5da37249135124a767ea1e0306","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"function solve(s, a, b) {\n  let forward = false;\n  let backward = false;\n  const a_indx = s.indexOf(a);\n  if (a_indx < 0) {\n    \/\/ do nothing ...\n  } else {\n    const b_indx = s.indexOf(b, a_indx + a.length);\n    if (b_indx < 0) {\n      \/\/ do nothing ...\n    } else {\n      forward = true;\n    }\n  }\n  const s_r = s.split('').reverse().join('');\n  const a_indx_r = s_r.indexOf(a);\n  if (a_indx_r < 0) {\n    \/\/ do nothing ...\n  } else {\n    const b_indx_r = s_r.indexOf(b, a_indx_r + a.length);\n    if (b_indx_r < 0) {\n      \/\/ do nothing ...\n    } else {\n      backward = true;\n    }\n  }\n  if (forward) {\n    if (backward) {\n      return 'both';\n    } else {\n      return 'forward';\n    }\n  } else {\n    if (backward) {\n      return 'backward';\n    } else {\n      return 'fantasy'\n    }\n  }\n};\n\nfunction main(lines) {\n  const trim_lines = [];\n  for (const line of lines) {\n    const t = line.trim();\n    if (t.length > 0) {\n      trim_lines.push(t);\n    }\n  }\n  const [s, a, b] = trim_lines;\n  const result = solve(s, a, b);\n  console.log(result);\n};\n\nasync function processLinesFromStream(rs, pf) {\n  const content = [];\n  rs.setEncoding(\"utf-8\");\n  for await (let chunk of rs) {\n    content.push(chunk);\n  }\n  const lines = content.join('').split(\/\\n\/);\n  const result = pf(lines);\n  return result;\n};\n\nprocessLinesFromStream(process.stdin, main);\n","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"ab32bc5e946d5b39b112904267020f5b","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst INPUT = 'test.in';\nconst LOCAL = process.env.ENABLE_LOCAL_ENV === 'true';\nconst log = (...args) => {\n    LOCAL && console.log(...args)\n};\nlet rl;\nlet lineNr = 0;\n\n\/**\n * MAIN\n *\/\n(async () => {\n    const promises = await setup(INPUT);\n    await Promise.all(promises);\n})();\n\n\nfunction setup() {\n    const promises = []\n    rl = readline.createInterface({\n        input: process.stdin,\n        output: process.stdout,\n        terminal: false,\n    });\n\n    rl.on('line', (line) => {\n        promises.push(work(line, lineNr));\n        lineNr++;\n    });\n\n    rl.on('error', (err) => {\n        log('Error:', err);\n    });\n\n    return new Promise(res => {\n        rl.on('close', () => {\n            res(promises)\n            log('Done!');\n        });\n    });\n}\n\nconst input = [];\nasync function work(line, lineNr) {\n    input.push(line);\n    if (input.length === 3) {\n        const solutionForLine = await solve(input);\n        const responseLine = `${solutionForLine}\\n`;\n        process.stdout.write(responseLine);\n    }\n}\n\n\/**\n * \n * Solution goes below\n * \n *\/\nfunction solve(input) {\n    const [str, s1, s2] = input;\n    let opts = 'init_';\n    if (isForward(str, s1, s2)) opts += 'f';\n    if (isBackward(str, s1, s2)) opts += 'b';\n    const res = {\n        'init_': 'fantasy', \n        'init_f': 'forward', \n        'init_b': 'backward', \n        'init_fb': 'both', \n    };\n    return res[opts];\n}\n\nfunction isForward(str, s1, s2) {\n    const s1Index = str.indexOf(s1);\n    if (s1Index !== -1) return str.indexOf(s2, s1Index + s1.length) !== -1;\n    return false;\n}\n\nfunction isBackward(str, s1, s2) {\n    return isForward(str.split('').reverse().join(''), s1, s2);\n}\n","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"8112ac59000a9d9f78bfbfb299f20e2b","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n\nvar check = function (flags, first, second) {\n    let firstIndex = flags.indexOf(first);\n    let lastIndex = flags.lastIndexOf(second);\n    \/\/console.log(\"inside check function: \\nfirstIndex= %d  lastIndex = %d\",firstIndex, lastIndex);\n    return firstIndex != -1 && lastIndex != -1 && firstIndex + first.length - 1 < lastIndex;\n}\n\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\n\/*\n\nflags= \"aaacaaa\"\nfirst=\" aca\"\nsecond= \"aa\"\n\n*\/\n\/*\nC#\nwhile(true){\n   string input = Console.ReadLine();\n\n}\n\nnodejs\nrl.on('line', (input)=>{\n   \n});\n*\/\nvar flags, first, second, indicator = 0;\nrl.on('line', (input) => {\n    if (indicator == 0) {\n        flags = input; \n        indicator++;\n    }\n    else if (indicator == 1) {\n        first = input;\n        indicator++;\n    }\n    else {\n        second = input;\n        \/\/our code here.....\n        \/\/console.log(\"flags= %s  first= %s   second= %s\",flags, first, second);\n        let f = check(flags, first, second);\n        flags = reverseString(flags);\n        let b = check(flags, first, second);\n\n        if (f && b)\n            console.log(\"both\");\n        else if (f)\n            console.log(\"forward\");\n        else if (b)\n            console.log(\"backward\");\n        else\n            console.log(\"fantasy\");\n\n\n        rl.close();\n    }\n});","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"2a02733e39ff398626d44a96f512c64e","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\nvar check = function (flags, first, second) {\n    fIndx = flags.indexOf(first);\n    sIndx = flags.lastIndexOf(second);\n\n    return fIndx != -1 && sIndx != -1 && fIndx + first.length - 1 < sIndx;\n}\nvar flags, first, second, indicator = 0;\nrl.on('line', (input) => {\n    if (indicator == 0) {\n        flags = input;\n        indicator++;\n    }\n    else if (indicator == 1) {\n        first = input;\n        indicator++;\n\n    }\n    else {\n        second = input;\n        let f = check(flags, first, second);\n        flags = flags.split('').reverse().join('');\n        let b = check(flags, first, second);\n\n\n        if (f && b)\n            console.log(\"both\");\n        else if (f)\n            console.log(\"forward\");\n        else if (b)\n            console.log(\"backward\");\n        else\n            console.log(\"fantasy\");\n        rl.close();\n    }\n});","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"d95f462c967c01aa9817195af315d5f8","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nfunction myFunction(s, array, index) {\n  for (var i = index.x; i < array.length; i++) {\n    \n    if (s == array.substr(i, s.length)) \n    {\n        index.x = i+s.length;\n        return true;\n    }\n  }\n  index.x = 0;\n  return false;\n}\n\nfunction reverseString(str) {\n  var splitString = str.split(\"\");\n  var reverseArray = splitString.reverse();\n  var joinArray = reverseArray.join(\"\");\n  return joinArray;\n}\n\nvar n = -1;\nvar sleep1 = \"\";\nvar sleep2 = \"\";\nvar array = \"\";\nvar index = { x: 0 };\nvar startToFinish1 = false;\nvar startToFinish2 = false;\nvar finishToStart1 = false;\nvar finishToStart2 = false;\nvar answer = \"\";\n\nrl.on(\"line\", input => {\n  if (n == -1) \n  {\n    array = input;\n    n=0;\n  }\n  else if (n == 0) {\n    sleep1 = input;\n    startToFinish1 = myFunction(sleep1, array, index);\n    n++;\n  } else {\n    sleep2 = input;\n    startToFinish2 = myFunction(sleep2, array, index);\n    var revarray = reverseString(array);\n    index.x = 0;\n    finishToStart1 = myFunction(sleep1, revarray, index);\n    finishToStart2 = myFunction(sleep2, revarray, index); \n\n    if (startToFinish1 && startToFinish2 && finishToStart1 && finishToStart2)\n      answer = \"both\";\n    else if (startToFinish1 && startToFinish2) answer = \"forward\";\n    else if (finishToStart1 && finishToStart2) answer = \"backward\";\n    else answer = \"fantasy\";\n  }\n}).on(\"close\", () => {\n  console.log(answer);\n  \/\/console.log(sleep2);\n});\n","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"7050ddc833f183261e21fd075f28681b","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nvar check = function (flags, first, second) {\n    var fIndex = flags.indexOf(first);\n    var sLastIndex = flags.lastIndexOf(second);\n\n    return fIndex != -1 && sLastIndex != -1 && fIndex + first.length - 1 < sLastIndex;\n\n};\n\n\n\n\nvar flags, first, second;\nvar i = 0;\nrl.on('line', (input) => {\n    if (i == 0) {\n        flags = input;\n        i++;\n    } else if (i == 1) {\n        first = input;\n        i++;\n    } else {\n        second = input;\n        \/* our code here...\n         *\/\n        var f = check(flags, first, second);\n        flags = flags.split(\"\").reverse().join(\"\");\n        var b = check(flags, first, second);\n        if (f && b) console.log(\"both\");\n        else if (f) console.log(\"forward\");\n        else if (b) console.log(\"backward\");\n        else console.log(\"fantasy\");\n        rl.close();\n        \/\/end of our code....\n    }\n}).on('close', () => {\n\n});","tags":["strings"],"lang_cluster":"Javascript","src_uid":"c3244e952830643938d51ce14f043d7d","code_uid":"3cc8218fd79b53bb6c269c85a5da5f9e","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c3244e952830643938d51ce14f043d7d","hidden_unit_tests":"[{'input': 'a', 'time': ['30'], 'mem': ['8'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['4'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['4'], 'output': ['both\\r\\n']}, {'input': 'b', 'time': ['30'], 'mem': ['0'], 'output': ['forward\\r\\n']}, {'input': 'b', 'time': ['0'], 'mem': ['8'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['0'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['fantasy\\r\\n']}, {'input': 'z', 'time': ['0'], 'mem': ['12'], 'output': ['both\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['fantasy\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['12'], 'output': ['forward\\r\\n']}, {'input': 'a', 'time': ['0'], 'mem': ['8'], 'output': ['backward\\r\\n']}, {'input': 'a', 'time': ['30'], 'mem': ['4'], 'output': ['both\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"const mainFunction = (lines) => {\n    let n = lines[0].split(\"\")\n    for (let i = 0; i < n.length - 1; i++) {\n        if (+n[i] % 2 === 0 && +n[n.length - 1] > +n[i]) {\n            [n[i], n[n.length - 1]] = [n[n.length - 1], n[i]]\n            console.log(n.join(\"\"))\n            return 0\n        }\n    }\n    for (let i = n.length; i >= 0; i--) {\n        if (+n[i] % 2 === 0 && +n[n.length - 1] < +n[i]) {\n            [n[i], n[n.length - 1]] = [n[n.length - 1], n[i]]\n            console.log(n.join(\"\"))\n            return 0\n        }\n    }\n    console.log(-1)\n}\n\nconst { EOL } = require('os')\nif (__filename.substr(9, 4) != \"azer\") {\n    let yourInputData = ''\n    process.stdin.on('data', i => yourInputData += i)\n    process.stdin.on('end', () => mainFunction(yourInputData.split(EOL)))\n} else {\n    const fileSystem = require(\"fs\");\n    mainFunction(fileSystem.readFileSync('input.txt', 'utf8').split(EOL))\n}","tags":["greedy","math","strings"],"lang_cluster":"Javascript","src_uid":"bc375e27bd52f413216aaecc674366f8","code_uid":"a8c5a233cca41d96b2e6f90cd33b44c7","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"bc375e27bd52f413216aaecc674366f8","hidden_unit_tests":"[{'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['572\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['3574\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['444434\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['72222\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['34682\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1435678534\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['9250764\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['9052764\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['5685314\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1111111111111111132\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['333333339372\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['58\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['7730016670\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['35451519835848712272404365322858764249299938505100\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['8'], 'output': ['9314752277691991627730686134692292422155753465948025897701703862445837045929984759093775762579123914\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['110\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['573140\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['-1\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['-1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['93752\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['935742\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['935724\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['8632\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['190\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['21000000000000000000000\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1100\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"print(function(n, a, m, b) {\n\tvar i, j,\n\t\tmax = 0,\n\t\tans = 0;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++)\n\t\t\tif (b[j] % a[i] === 0) {\n\t\t\t\tif (b[j] \/ a[i] > max) {\n\t\t\t\t\tmax = b[j] \/ a[i];\n\t\t\t\t\tans = 1;\n\t\t\t\t} else if (b[j] \/ a[i] === max) {\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\n\treturn ans;\n\n}(+readline(), readline().split(' ').map(Number), +readline(), readline().split(' ').map(Number)));\n","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"102667eaa3aee012fef70f4192464674","code_uid":"d46d34b09c2e10889e800b707724ee59","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"102667eaa3aee012fef70f4192464674","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['136'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['8\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['20\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['28\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['38\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":";(function () {\n\t\n\tvar n = +readline(),\n\t\ta = readline().split(' ').map(Number),\n\t\tm = +readline(),\n\t\tb = readline().split(' ').map(Number),\n\t\tc = (function () {\n\t\t\tvar t = [], l, max, i, j;\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t\tfor (j = 0; j < m; j++) {\n\t\t\t\t\tl = b[j] \/ a[i];\n\t\t\t\t\tif (l === parseInt(l)) {\n\t\t\t\t\t\tt.push(l);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tmax = Math.max.apply(null, t);\n\t\t\treturn t.filter(function (e) { return e === max; }).length;\n\t\t})();\n\n\tprint(c);\n\t\n}).call(this);","tags":["implementation","brute force"],"lang_cluster":"Javascript","src_uid":"102667eaa3aee012fef70f4192464674","code_uid":"db238087279f5586d3f3e9c1d4acd906","difficulty":900,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"102667eaa3aee012fef70f4192464674","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['136'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['8\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['8\\r\\n']}, {'input': '3', 'time': ['30'], 'mem': ['0'], 'output': ['20\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['23\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['24\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['17\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['28\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['4'], 'output': ['38\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}]","all_passed":0}
{"lang":"Node.js","source_code":"var input = '';\nvar inputResolve;\nvar inputPromise = new Promise(resolve => inputResolve = resolve);\nprocess.stdin.on('data', c => input += c);\nprocess.stdin.on('end', () => {\n  inputResolve();\n});\n\n(async () => {\n  await inputPromise;\n  var inputs = input.split(\/\\r?\\n\/);\n  var [n, a, b] = inputs[0].split(' ').map(v => +v);\n  var h = inputs[1].split(' ').map(v => +v);\n  var c = Array(n).fill(0);\n  var d = [...h];\n  var kq = 1e5;\n  var kc = [];\n  var tc = 0;\n\n  function bf(i) {\n    if (tc >= kq) return;\n    if (i == n - 1) {\n      if (d[n - 2] >= 0 || d[n - 1] >= 0) return;\n      kq = tc;\n      kc = [...c];\n      return;\n    }\n    for (let j = Math.max(0, Math.ceil((d[i - 1] + 1) \/ b)); j < 1e2; j++) {\n      tc += j;\n      c[i] = j;\n      d[i - 1] -= b * j;\n      d[i + 1] -= b * j;\n      d[i] -= a * j;\n      bf(i + 1);\n      tc -= j;\n      c[i] = 0;\n      d[i - 1] += b * j;\n      d[i + 1] += b * j;\n      d[i] += a * j;\n      if (d[i] - a * j < 0 && i != n - 2) break;\n      if (i == n - 2 && d[i] - a * j < 0 && d[i + 1] - b * j < 0) break;\n    }\n  }\n\n  bf(1);\n  console.log(kq);\n  console.log(kc.map((v, i) => Array(v).fill(i + 1).join(' ')).join(' ').trim().replace(\/\\s+\/g, ' '))\n})();\n\n","tags":["dp","brute force"],"lang_cluster":"Javascript","src_uid":"a9bad412597726f8cdc0cfa2da891bc4","code_uid":"7db8d3f62e733757d4035b4f1d743af0","difficulty":2600,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"a9bad412597726f8cdc0cfa2da891bc4","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['64'], 'output': ['3\\r\\n2 2 2 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['4\\r\\n2 2 3 3 ']}, {'input': '3', 'time': ['0'], 'mem': ['60'], 'output': ['1\\r\\n2 ']}, {'input': '3', 'time': ['0'], 'mem': ['64'], 'output': ['2\\r\\n2 2 ']}, {'input': '3', 'time': ['30'], 'mem': ['64'], 'output': ['2\\r\\n2 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['68'], 'output': ['11\\r\\n2 2 2 2 2 2 2 2 2 2 2 ']}, {'input': '3', 'time': ['30'], 'mem': ['64'], 'output': ['4\\r\\n2 2 2 2 ']}, {'input': '3', 'time': ['30'], 'mem': ['60'], 'output': ['11\\r\\n2 2 2 2 2 2 2 2 2 2 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['64'], 'output': ['4\\r\\n2 2 2 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['60'], 'output': ['5\\r\\n2 2 2 2 2 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['2\\r\\n2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['60'], 'output': ['2\\r\\n2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['72'], 'output': ['3\\r\\n2 2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['14\\r\\n2 2 2 2 2 3 3 3 3 3 3 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['60'], 'output': ['6\\r\\n2 2 2 2 3 3 ']}, {'input': '4', 'time': ['30'], 'mem': ['60'], 'output': ['18\\r\\n2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['60'], 'output': ['8\\r\\n2 2 2 2 3 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['7\\r\\n2 2 2 2 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['56'], 'output': ['5\\r\\n2 2 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['68'], 'output': ['17\\r\\n2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['13\\r\\n2 2 2 2 2 2 2 4 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['25\\r\\n2 2 2 2 2 2 3 4 5 5 5 6 7 8 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['30\\r\\n2 2 2 2 2 2 2 2 2 2 2 4 5 5 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['23\\r\\n2 2 2 2 2 2 2 3 5 5 5 7 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 4 5 5 7 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['13\\r\\n2 2 2 2 4 4 4 7 7 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['60'], 'output': ['18\\r\\n2 2 2 2 2 2 4 4 5 6 7 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 2 4 5 5 5 5 5 6 7 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['18\\r\\n2 2 2 2 2 2 2 4 5 5 7 7 7 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['6\\r\\n2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['11\\r\\n2 2 2 2 2 4 5 6 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['9\\r\\n2 2 2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['22\\r\\n2 2 2 2 2 2 2 2 2 4 5 6 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['33\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['21\\r\\n2 2 2 2 2 2 4 4 5 6 6 6 7 7 8 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 8 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['23\\r\\n2 2 2 2 2 2 2 2 4 4 5 5 6 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['34\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 5 5 5 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['4\\r\\n2 5 8 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 4 5 5 5 7 7 7 7 7 7 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['49\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 5 5 5 5 5 6 6 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['13\\r\\n2 2 2 2 5 5 5 7 7 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['56'], 'output': ['19\\r\\n2 2 2 2 2 2 4 5 5 5 7 7 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['22\\r\\n2 2 2 2 3 4 4 4 5 5 5 7 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['25\\r\\n2 2 2 2 2 2 2 3 4 4 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['72'], 'output': ['8\\r\\n2 2 4 5 6 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['7\\r\\n2 3 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['12\\r\\n2 2 2 4 5 5 7 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['35\\r\\n2 2 2 2 2 2 2 2 2 2 2 4 4 4 5 5 5 5 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['8\\r\\n2 2 4 5 7 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['11\\r\\n2 2 2 4 4 6 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['7\\r\\n2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['7\\r\\n2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['29\\r\\n2 2 2 2 2 2 2 2 2 2 2 4 4 5 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['19\\r\\n2 2 2 2 2 2 2 4 5 6 7 8 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['29\\r\\n2 2 2 2 2 2 2 2 2 4 4 5 5 6 6 7 7 7 7 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['10\\r\\n2 2 2 2 5 5 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['8\\r\\n2 2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['18\\r\\n2 2 2 2 2 2 4 4 5 5 5 7 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['36\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['47\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 5 5 5 5 5 6 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 2 3 4 4 5 6 7 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['13\\r\\n2 2 2 2 4 5 6 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['7\\r\\n2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 5 5 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['56'], 'output': ['8\\r\\n2 2 2 5 7 8 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['13\\r\\n2 2 2 2 4 5 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['14\\r\\n2 2 2 2 2 4 5 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 4 4 6 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['17\\r\\n2 2 2 2 4 5 6 6 7 8 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['23\\r\\n2 2 2 2 2 2 2 2 4 5 5 5 6 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['15\\r\\n2 2 2 2 2 4 4 6 6 7 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['8\\r\\n2 4 4 6 8 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['30\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 6 6 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['16\\r\\n2 2 2 2 2 2 2 4 5 5 7 7 8 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['15\\r\\n2 2 2 2 4 4 5 6 7 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['21\\r\\n2 2 2 2 2 2 2 4 5 5 6 6 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['29\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 6 7 7 7 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['18\\r\\n2 2 2 2 2 2 4 4 5 6 7 7 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 5 5 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['24\\r\\n2 2 2 2 2 2 2 2 3 3 5 5 5 5 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['8\\r\\n2 2 2 4 7 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['18\\r\\n2 2 2 2 2 2 4 5 5 5 7 7 8 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['9\\r\\n2 2 4 5 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['9\\r\\n2 2 4 5 6 8 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['15\\r\\n2 2 2 3 5 5 5 5 7 8 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['17\\r\\n2 2 2 2 2 4 4 5 5 7 7 7 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['35\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5 5 7 7 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['18\\r\\n2 2 2 2 2 4 5 6 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['9\\r\\n2 2 2 4 5 6 8 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['26\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 5 6 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['4\\r\\n2 5 7 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['12\\r\\n2 2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['13\\r\\n2 2 2 2 4 4 5 6 6 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['8\\r\\n2 2 5 5 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['21\\r\\n2 2 2 2 2 4 5 5 5 5 7 7 7 7 7 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['26\\r\\n2 2 2 2 2 2 2 4 4 4 4 5 5 6 7 7 7 8 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['8\\r\\n2 2 4 6 6 8 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['14\\r\\n2 2 2 2 5 5 5 7 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['17\\r\\n2 2 2 2 2 2 4 5 6 7 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['8\\r\\n2 2 5 5 7 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['32\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['12\\r\\n2 2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['11\\r\\n2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['8\\r\\n2 2 4 5 7 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['46\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 5 5 5 5 5 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['60'], 'output': ['48\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['50\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 5 5 5 5 5 5 5 6 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['42\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 6 6 6 6 6 6 6 6 6 6 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['50\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['42\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 6 6 6 6 6 6 6 6 6 6 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['38\\r\\n2 2 2 2 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}]","all_passed":0}
{"lang":"Node.js","source_code":"\"use strict\";\nvar input = '';\nvar inputResolve;\nvar inputPromise = new Promise(resolve => inputResolve = resolve);\nprocess.stdin.on('data', c => input += c);\nprocess.stdin.on('end', () => {\n    inputResolve();\n});\n(async () => {\n    await inputPromise;\n    var inputs = input.split(\/\\r?\\n\/);\n    var [n, a, b] = inputs[0].split(' ').map(v => +v);\n    var h = inputs[1].split(' ').map(v => +v);\n    var c = Array(n).fill(0);\n    var d = [...h];\n    var kq = 1e5;\n    var kc = [];\n    var tc = 0;\n    function bf(i) {\n        if (tc >= kq)\n            return;\n        if (i == n - 1) {\n            if (d[n - 2] >= 0 || d[n - 1] >= 0)\n                return;\n            kq = tc;\n            kc = [...c];\n            return;\n        }\n        for (let j = Math.max(0, Math.ceil((d[i - 1] + 1) \/ b)); j < 1e2; j++) {\n            tc += j;\n            c[i] = j;\n            d[i - 1] -= b * j;\n            d[i + 1] -= b * j;\n            d[i] -= a * j;\n            bf(i + 1);\n            tc -= j;\n            c[i] = 0;\n            d[i - 1] += b * j;\n            d[i + 1] += b * j;\n            d[i] += a * j;\n            if (d[i] - a * j < 0 && i != n - 2)\n                break;\n            if (i == n - 2 && d[i] - a * j < 0 && d[i + 1] - b * j < 0)\n                break;\n        }\n    }\n    bf(1);\n    console.log(kq);\n    console.log(kc.map((v, i) => Array(v).fill(i + 1).join(' ')).join(' ').trim().replace(\/\\s+\/g, ' '));\n})();\n","tags":["dp","brute force"],"lang_cluster":"Javascript","src_uid":"a9bad412597726f8cdc0cfa2da891bc4","code_uid":"0772299a6d0cfd92e32d188a6e2885ab","difficulty":2600,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"a9bad412597726f8cdc0cfa2da891bc4","hidden_unit_tests":"[{'input': '3', 'time': ['0'], 'mem': ['64'], 'output': ['3\\r\\n2 2 2 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['4\\r\\n2 2 3 3 ']}, {'input': '3', 'time': ['0'], 'mem': ['60'], 'output': ['1\\r\\n2 ']}, {'input': '3', 'time': ['0'], 'mem': ['64'], 'output': ['2\\r\\n2 2 ']}, {'input': '3', 'time': ['30'], 'mem': ['64'], 'output': ['2\\r\\n2 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['68'], 'output': ['11\\r\\n2 2 2 2 2 2 2 2 2 2 2 ']}, {'input': '3', 'time': ['30'], 'mem': ['64'], 'output': ['4\\r\\n2 2 2 2 ']}, {'input': '3', 'time': ['30'], 'mem': ['60'], 'output': ['11\\r\\n2 2 2 2 2 2 2 2 2 2 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['64'], 'output': ['4\\r\\n2 2 2 2 ']}, {'input': '3', 'time': ['0'], 'mem': ['60'], 'output': ['5\\r\\n2 2 2 2 2 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['2\\r\\n2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['60'], 'output': ['2\\r\\n2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['72'], 'output': ['3\\r\\n2 2 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['14\\r\\n2 2 2 2 2 3 3 3 3 3 3 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['60'], 'output': ['6\\r\\n2 2 2 2 3 3 ']}, {'input': '4', 'time': ['30'], 'mem': ['60'], 'output': ['18\\r\\n2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['60'], 'output': ['8\\r\\n2 2 2 2 3 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['64'], 'output': ['7\\r\\n2 2 2 2 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['56'], 'output': ['5\\r\\n2 2 3 3 3 ']}, {'input': '4', 'time': ['0'], 'mem': ['68'], 'output': ['17\\r\\n2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['13\\r\\n2 2 2 2 2 2 2 4 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['25\\r\\n2 2 2 2 2 2 3 4 5 5 5 6 7 8 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['30\\r\\n2 2 2 2 2 2 2 2 2 2 2 4 5 5 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['23\\r\\n2 2 2 2 2 2 2 3 5 5 5 7 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 4 5 5 7 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['13\\r\\n2 2 2 2 4 4 4 7 7 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['60'], 'output': ['18\\r\\n2 2 2 2 2 2 4 4 5 6 7 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 2 4 5 5 5 5 5 6 7 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['18\\r\\n2 2 2 2 2 2 2 4 5 5 7 7 7 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['6\\r\\n2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['11\\r\\n2 2 2 2 2 4 5 6 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['9\\r\\n2 2 2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['22\\r\\n2 2 2 2 2 2 2 2 2 4 5 6 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['33\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['21\\r\\n2 2 2 2 2 2 4 4 5 6 6 6 7 7 8 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 8 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['23\\r\\n2 2 2 2 2 2 2 2 4 4 5 5 6 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['34\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 5 5 5 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['4\\r\\n2 5 8 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 4 5 5 5 7 7 7 7 7 7 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['49\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 5 5 5 5 5 6 6 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['13\\r\\n2 2 2 2 5 5 5 7 7 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['56'], 'output': ['19\\r\\n2 2 2 2 2 2 4 5 5 5 7 7 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['22\\r\\n2 2 2 2 3 4 4 4 5 5 5 7 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['25\\r\\n2 2 2 2 2 2 2 3 4 4 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['72'], 'output': ['8\\r\\n2 2 4 5 6 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['7\\r\\n2 3 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['12\\r\\n2 2 2 4 5 5 7 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['35\\r\\n2 2 2 2 2 2 2 2 2 2 2 4 4 4 5 5 5 5 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['8\\r\\n2 2 4 5 7 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['11\\r\\n2 2 2 4 4 6 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['7\\r\\n2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['7\\r\\n2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['29\\r\\n2 2 2 2 2 2 2 2 2 2 2 4 4 5 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['19\\r\\n2 2 2 2 2 2 2 4 5 6 7 8 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['29\\r\\n2 2 2 2 2 2 2 2 2 4 4 5 5 6 6 7 7 7 7 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['10\\r\\n2 2 2 2 5 5 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['8\\r\\n2 2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['18\\r\\n2 2 2 2 2 2 4 4 5 5 5 7 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['36\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['47\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 5 5 5 5 5 6 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['28\\r\\n2 2 2 2 2 2 2 2 2 2 3 4 4 5 6 7 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['13\\r\\n2 2 2 2 4 5 6 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['7\\r\\n2 2 5 5 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 5 5 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['56'], 'output': ['8\\r\\n2 2 2 5 7 8 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['13\\r\\n2 2 2 2 4 5 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['14\\r\\n2 2 2 2 2 4 5 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 4 4 6 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['17\\r\\n2 2 2 2 4 5 6 6 7 8 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['23\\r\\n2 2 2 2 2 2 2 2 4 5 5 5 6 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['15\\r\\n2 2 2 2 2 4 4 6 6 7 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['8\\r\\n2 4 4 6 8 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['30\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 6 6 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['16\\r\\n2 2 2 2 2 2 2 4 5 5 7 7 8 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['15\\r\\n2 2 2 2 4 4 5 6 7 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['21\\r\\n2 2 2 2 2 2 2 4 5 5 6 6 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['29\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 5 5 5 6 7 7 7 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['18\\r\\n2 2 2 2 2 2 4 4 5 6 7 7 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['11\\r\\n2 2 2 5 5 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['24\\r\\n2 2 2 2 2 2 2 2 3 3 5 5 5 5 7 7 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['8\\r\\n2 2 2 4 7 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['18\\r\\n2 2 2 2 2 2 4 5 5 5 7 7 8 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['9\\r\\n2 2 4 5 6 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['9\\r\\n2 2 4 5 6 8 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['15\\r\\n2 2 2 3 5 5 5 5 7 8 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['17\\r\\n2 2 2 2 2 4 4 5 5 7 7 7 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['35\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5 5 7 7 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['18\\r\\n2 2 2 2 2 4 5 6 7 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['9\\r\\n2 2 2 4 5 6 8 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['26\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 5 6 7 7 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['4\\r\\n2 5 7 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['12\\r\\n2 2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['13\\r\\n2 2 2 2 4 4 5 6 6 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['8\\r\\n2 2 5 5 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['21\\r\\n2 2 2 2 2 4 5 5 5 5 7 7 7 7 7 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['68'], 'output': ['26\\r\\n2 2 2 2 2 2 2 4 4 4 4 5 5 6 7 7 7 8 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['8\\r\\n2 2 4 6 6 8 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['14\\r\\n2 2 2 2 5 5 5 7 7 8 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['17\\r\\n2 2 2 2 2 2 4 5 6 7 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['8\\r\\n2 2 5 5 7 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['64'], 'output': ['10\\r\\n2 2 2 4 5 7 7 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['32\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 4 4 5 5 6 6 7 7 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['12\\r\\n2 2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['72'], 'output': ['11\\r\\n2 2 2 4 5 6 7 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['8\\r\\n2 2 4 5 7 7 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['46\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 5 5 5 5 5 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['30'], 'mem': ['60'], 'output': ['48\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['50\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 5 5 5 5 5 5 5 6 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['42\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 6 6 6 6 6 6 6 6 6 6 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['60'], 'output': ['50\\r\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['68'], 'output': ['42\\r\\n2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 6 6 6 6 6 6 6 6 6 6 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}, {'input': '1', 'time': ['0'], 'mem': ['64'], 'output': ['38\\r\\n2 2 2 2 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var i, j, l,\n\tN = 1e6 + 5,\n\tp = new Int8Array(N),\n\tq = {};\n\np[0] = p[1] = 1;\nq[4] = true;\n\nfor (i = 3; i < N; i += 2)\n\tif (!p[i]) {\n\t\tq[i * i] = true;\n\t\tfor (var j = i * i; j < N; j += i)\n\t\t\tp[j] = 1;\n\t}\n\nreadline();\nprint(readline().split(' ').map(function(v) {\n\treturn q[v] ? 'YES' : 'NO';\n}).join('\\n'));","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"4e89b8ea3a860c5d6c1e215e90284bbe","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\nlet r;\nfunction getReshetoNum(maxNum) {\n  r = new Array(maxNum + 1);\n  r[0] = 0;\n  r[1] = 0;\n  for (let i = 2; i <= Math.sqrt(maxNum + 1); i++) {\n    if (r[i] === undefined) {\n      for (let j = i + i; j <= maxNum; j += i) {\n        r[j] = 1;\n      }\n    }\n  }\n}\n\ngetReshetoNum(1000000);\n\nfunction isSimple(num) {\n\n  if (r[num] === undefined) {\n    return true;\n  }\n  return false;\n}\n\nString.prototype.getNumArray = function () {\n  return String(this).split(' ').map(function (value) {\n    return parseInt(value);\n  });\n}\n\nreadline();\nlet array = readline().getNumArray();\narray.map((num) => {\n  const sqrt = parseInt(Math.sqrt(num));\n  if (num === 1) {\n    write('NO\\n');\n  } else if (sqrt * sqrt === num && isSimple(sqrt)) {\n    write('YES\\n');\n  } else {\n    write('NO\\n');\n  }\n});","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"0fb23edbb835c08f3e4e74268f2f3e03","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var n = parseInt(readline(), 10);\nvar inp = readline().split(' ');\n\nfor(var i=0; i<inp.length; i++) {\n    inp[i] = parseInt(inp[i], 10);\n}\n\nfor(var i=0; i<inp.length; i++) {\n    var valid = true;   \n    var sqrt = Math.sqrt(inp[i]);\n    if(Math.ceil(sqrt) === sqrt && inp[i] !== 1) {\n        for(var j = 2; j*j<=sqrt; j++) {\n            if(sqrt % j === 0) {\n                valid = false;\n                break;\n            }\n        }\n    } else {\n        valid = false;\n    }\n    \n    print(valid ? \"YES\" : \"NO\");\n}","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"7afb9d02a197af55b77f71a86b0c3bfa","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var prime = new Array(Math.pow(10, 6));\nprime[0] = true;\nprime[1] = true;\n\nvar tPrimes = new Set();\n\nfunction getAllPrimes(){\n    for(var i = 2; i <= Math.pow(10, 6); i++){\n        if(prime[i] === undefined){\n            \/\/ number is unmarked so we know it's prime\n            prime[i] = true;\n            var j = i * i;\n            while(j <= Math.pow(10, 6)){\n                prime[j] = false;\n                j = j + i;\n            }\n        }\n    }\n}\n\nfunction getAllTPrimes(){\n    for(var i = 2; i < prime.length; i++){\n        if(prime[i] === true) {\n            tPrimes.add(i * i);\n        }\n    }\n}\n\ngetAllPrimes();\ngetAllTPrimes();\n\nfunction isTPrime(number){\n    if(tPrimes.has(number)){\n        print(\"YES\");\n    }\n    else {\n        print(\"NO\");\n    }\n}\n\nconst line1 = readline();\nconst line2 = readline().split(\" \").map(x => parseInt(x));\nfor(var i = 0; i < line2.length; i++){\n    isTPrime(line2[i]);\n}","tags":["binary search","number theory","implementation","math"],"lang_cluster":"Javascript","src_uid":"6cebf9af5cfbb949f22e8b336bf07044","code_uid":"67af4bd6ba51770e2d4be1c0255e6f2a","difficulty":1300,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"6cebf9af5cfbb949f22e8b336bf07044","hidden_unit_tests":"[{'input': '3', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['988'], 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['992'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['984'], 'output': ['YES\\r\\n']}, {'input': '6', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\nYES\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['984'], 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '1', 'time': ['60'], 'mem': ['984'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['980'], 'output': ['NO\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['984'], 'output': ['NO\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll = readline().split(' ')\nlet N = +lll[0]\nlet T = +lll[1]\n\nlet hoss = []\n\nwhile (lll = readline()) {\n  lll = lll.split(' ')\n  let x = +lll[0]\n  let a = +lll[1]\n  hoss.push([x - a \/ 2, x + a \/ 2])\n}\n\nlet pos = 0\n\nhoss = hoss.sort((a, b) => a[0] - b[0])\n\nhoss.forEach((h, i) => {\n  let ph = hoss[i - 1] || [-Infinity, -Infinity]\n  let nh = hoss[i + 1] || [Infinity, Infinity]\n  if (h[0] - ph[1] >= T) pos++\n  if (nh[0] - h[1] > T) pos++\n})\n\nprint(pos)","tags":["implementation","sortings"],"lang_cluster":"Javascript","src_uid":"c31fed523230af1f904218b2fe0d663d","code_uid":"c170643a57705ab0f0db785195d1feaa","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c31fed523230af1f904218b2fe0d663d","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['148'], 'output': ['4\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['136'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['136'], 'output': ['2\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['4\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['5\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['140'], 'output': ['2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['6\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['144'], 'output': ['35\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['16\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['140'], 'output': ['6\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['4\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['136'], 'output': ['30\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['136'], 'output': ['16\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['148'], 'output': ['4\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['140'], 'output': ['6\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['140'], 'output': ['4\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['144'], 'output': ['9\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['43\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['140'], 'output': ['96\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['2\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet lll\nlll = readline().split(' ').map(v => parseInt(v))\nlet A = lll[1]\nlet B = lll[0]\n\nlet f = []\nwhile (lll = readline()) {\n  f.push(lll.split(''))\n}\n\nlet sa = []\nlet sb = []\nfor (let i = 1; i <= 20; i++) {\n  if (!(A % i)) sa.push(i)\n  if (!(B % i)) sb.push(i)\n}\n\nlet best = {x: Infinity, y: Infinity}\nlet all = 0\nfor (let i = 0; i < sa.length; i++) {\n  n: for (let j = 0; j < sb.length; j++) {\n    let ps = split(sa[i], sb[j])\n    let phs = new Set\n    for (let pi = 0; pi < ps.length; pi++) {\n      let hs = rotatesHashes(ps[pi])\n      if (sa[i] == 6 && sb[j] == 2) {\n        for (let hi = 0; hi < 4; hi++) {\n          let h = hs[hi]\n          if (phs.has(h)) {\n            let sss = []\n            phs.forEach(v => sss.push(v))\n          }\n        }\n      }\n      for (let hi = 0; hi < 4; hi++) {\n        let h = hs[hi]\n        if (phs.has(h)) continue n\n      }\n      for (let hi = 0; hi < 4; hi++) {\n        phs.add(hs[hi])\n      }\n    }\n    all++\n    if (best.x * best.y > sa[i] * sb[j] || best.x * best.y == sa[i] * sb[j] && best.x > sb[j]) {\n      best.x = sb[j]\n      best.y = sa[i]\n    }\n  }\n}\n\nprint(all)\nprint(best.x + ' ' + best.y)\n\nfunction split (x, y) {\n  let ps = []\n  for (let i = 0; i < A; i += x) {\n    for (let j = 0; j < B; j += y) {\n      let p = []\n      for (let r = 0; r < y; r++) {\n        p.push(f[j + r].slice(i, i + x))\n      }\n      ps.push(p)\n    }\n  }\n  return ps\n}\n\nfunction rotatesHashes (p) {\n  let hs = [hash(p)]\n  for (let i = 0; i < 3; i++) {\n    p = rotate(p)\n    hs.push(hash(p))\n  }\n  return hs\n}\n\nfunction rotate (p) {\n  let n = []\n  for (let i = 0; i < p[0].length; i++) {\n    n.push([])\n  }\n  for (let i = 0; i < p.length; i++) {\n    for (let j = 0; j < p[0].length; j++) {\n      n[j][p.length - i - 1] = p[i][j]\n    }\n  }\n  return n\n}\n\nfunction hash (p) {\n  let h = ''\n  for (let i = 0; i < p.length; i++) {\n    for (let j = 0; j < p[0].length; j++) {\n      h += p[i][j]\n    }\n    h += '*'\n  }\n  return h\n}\n\nfunction test (a, b) {\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] == b[i]) return false\n  }\n  return true\n}","tags":["implementation","hashing"],"lang_cluster":"Javascript","src_uid":"4de8b72f9ce12554cae8b6a83b3f023e","code_uid":"f031291b3b059afdb162924b4b2dc057","difficulty":1800,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"4de8b72f9ce12554cae8b6a83b3f023e","hidden_unit_tests":"[{'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['3\\r\\n2 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n2 6\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['4\\r\\n1 1\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n2 3\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4\\r\\n1 3\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['12\\r\\n1 1\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n1 5\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['4\\r\\n1 6\\r\\n']}, {'input': '7', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n1 7\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n1 7\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['7\\r\\n8 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9\\r\\n1 10\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['8'], 'output': ['5\\r\\n10 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['7\\r\\n1 11\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['7\\r\\n12 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['14\\r\\n1 12\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['10\\r\\n1 10\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['12\\r\\n4 3\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['15\\r\\n1 16\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['148'], 'output': ['23\\r\\n2 6\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['3\\r\\n1 17\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['156'], 'output': ['23\\r\\n1 10\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n1 1\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['3\\r\\n1 3\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n1 4\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['3\\r\\n1 5\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['15\\r\\n7 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['17\\r\\n4 2\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['140'], 'output': ['3\\r\\n1 17\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['3\\r\\n1 19\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['152'], 'output': ['27\\r\\n4 2\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['4'], 'output': ['1\\r\\n1 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n1 1\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['8'], 'output': ['4\\r\\n1 1\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['8'], 'output': ['5\\r\\n2 1\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['12'], 'output': ['3\\r\\n1 5\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['144'], 'output': ['14\\r\\n2 1\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['152'], 'output': ['7\\r\\n2 1\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['144'], 'output': ['13\\r\\n1 4\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['148'], 'output': ['8\\r\\n1 3\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['10\\r\\n3 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['10\\r\\n3 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['6\\r\\n7 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['13\\r\\n1 5\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['18\\r\\n1 3\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['144'], 'output': ['6\\r\\n7 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['152'], 'output': ['8\\r\\n4 1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['152'], 'output': ['10\\r\\n3 1\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['152'], 'output': ['33\\r\\n1 3\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['2\\r\\n1 4\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['8'], 'output': ['10\\r\\n1 6\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['9\\r\\n2 4\\r\\n']}, {'input': '2', 'time': ['30'], 'mem': ['0'], 'output': ['4\\r\\n1 7\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['8\\r\\n1 4\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['24\\r\\n4 2\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict';\n\n\/\/ let inpFileStrArr = `\n\/\/ 3\n\/\/ 5 6 7\n\/\/ `.trim().split('\\n'), inpFileCounter = 0;\n\/\/ function readline() {\n\/\/   return inpFileStrArr[inpFileCounter++];\n\/\/ }\n\/\/ function print(x) {\n\/\/   console.log(x);\n\/\/ }\n\nvar isEven = function isEven(x) {\n  return x % 2 === 0;\n};\n\nvar n = Number(readline());\nvar arr = readline().split(' ').map(Number);\n\nvar sum = arr.reduce(function (a, b) {\n  return a + b;\n}, 0);\n\nif (!isEven(sum)) {\n  print(sum);\n} else {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  var needToRemove = arr.find(function (x) {\n    return !isEven(x);\n  });\n  print(needToRemove ? sum - needToRemove : 0);\n}\n","tags":["implementation","number theory"],"lang_cluster":"Javascript","src_uid":"a5d56056fd66713128616bc7c2de8b22","code_uid":"4361c4608eed67ef5ad46f2a376feb5f","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"a5d56056fd66713128616bc7c2de8b22","hidden_unit_tests":"[{'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['9\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['561\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['439\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5355\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['5193\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['5445\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['5217\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['4945\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4725\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4893\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4451\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['4333\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['4849\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['5439\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['5353\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['2085\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['2047\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['136'], 'output': ['2723\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['63\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['185\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['619\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['247\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['9801\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['9999\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9899\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['9705\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['21\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict'\n\nlet N = +readline()\nlet lll = readline().split(' ').map(v => parseInt(v)).sort((a, b) => b - a)\n\nlet ss = 0\nlet p = [0]\nlet t = false\n\nfor (let n of lll) {\n  if (n % 2) {\n    t = true\n    p.push(n)\n    if (p.length == 2) {\n      ss += p[0]\n      ss += p[1]\n      p = []\n    }\n  } else {\n    ss += n\n  }\n}\n\nprint(t ? ss : 0)","tags":["implementation","number theory"],"lang_cluster":"Javascript","src_uid":"a5d56056fd66713128616bc7c2de8b22","code_uid":"c0eb154a16506c428cdf41311ce80c8d","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"a5d56056fd66713128616bc7c2de8b22","hidden_unit_tests":"[{'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['9\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['561\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['439\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5355\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['5193\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['5445\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['5217\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['4945\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4725\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4893\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4451\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['4333\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['4849\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['5439\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['5353\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['2085\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['2047\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['136'], 'output': ['2723\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['63\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['185\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['619\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['247\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['9801\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['9999\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9899\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['9705\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['21\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"'use strict';\n\/*\nlet input = `\n1\n1\n`.trim().split('\\n');\nfunction print(output) {\n\tconsole.log(output);\n}\nfunction readline() {\n\treturn input.shift();\n}\n*\/\n\/\/code\n\nvar n = Number(readline());\nvar flowers = readline().split(' ').map(Number);\nvar sum = flowers.reduce(function (acc, curr) {\n\treturn acc + curr;\n}, 0);\nvar minOdd = flowers.filter(function (el) {\n\treturn el % 2 === 1;\n}).sort(function (a, b) {\n\treturn a - b;\n}).shift();\nprint(sum % 2 === 1 ? sum : minOdd === undefined ? 0 : sum - minOdd);\n","tags":["implementation","number theory"],"lang_cluster":"Javascript","src_uid":"a5d56056fd66713128616bc7c2de8b22","code_uid":"042b1964ae38fcb2807d2a10e1f926e8","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"a5d56056fd66713128616bc7c2de8b22","hidden_unit_tests":"[{'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['9\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['561\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['439\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5355\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['5193\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['5445\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['5217\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['4945\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4725\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4893\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4451\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['4333\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['4849\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['5439\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['5353\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['2085\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['2047\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['136'], 'output': ['2723\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['63\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['185\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['619\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['247\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['9801\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['9999\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9899\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['9705\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['21\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"var getNums = function() {\n\treturn readline().split(' ').map(function(a) {return parseInt(a)});\n};\n\nvar n = parseInt(readline());\nvar nums = getNums().sort(function(a, b){return b - a});\nvar sumParnih = 0, sumNeparnih = 0, prob = 0;\n\nfor (var i = 0; i < n; i++) {\n\tif (nums[i] % 2 === 0) {\n\t\tsumParnih += nums[i];\n\t} else {\n\t\tif (sumNeparnih == 0) {\n\t\t\tsumNeparnih = nums[i];\n\t\t} else {\n\t\t\tif (prob) {\n\t\t\t\tsumNeparnih = sumNeparnih + prob + nums[i];\n\t\t\t\tprob = 0;\n\t\t\t} else {\n\t\t\t\tprob = nums[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (sumNeparnih === 0) {\n\tprint(0);\n} else {\n\tprint(sumParnih + sumNeparnih);\n}\n","tags":["implementation","number theory"],"lang_cluster":"Javascript","src_uid":"a5d56056fd66713128616bc7c2de8b22","code_uid":"2907d1c4f32ce5574eb8db3dea6fca81","difficulty":1200,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"a5d56056fd66713128616bc7c2de8b22","hidden_unit_tests":"[{'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['13\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['7\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['5\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['9\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['148'], 'output': ['561\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['439\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5355\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['5193\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['140'], 'output': ['5445\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['5217\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['144'], 'output': ['4945\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['4725\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4893\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['0'], 'output': ['4451\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['4333\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['144'], 'output': ['4849\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['140'], 'output': ['5439\\r\\n']}, {'input': '9', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '9', 'time': ['0'], 'mem': ['4'], 'output': ['5353\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['144'], 'output': ['2085\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['140'], 'output': ['2047\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['136'], 'output': ['2723\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['31\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['63\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['185\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['619\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['247\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['8'], 'output': ['9801\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['30'], 'mem': ['0'], 'output': ['9999\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['9899\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['9705\\r\\n']}, {'input': '5', 'time': ['30'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['30'], 'mem': ['0'], 'output': ['15\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['11\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['21\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function trim(s) {\n\treturn s.replace(\/^\\s+|\\s+$\/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(\/\\s+\/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i], 10);\n\t};\n\treturn tokens;\n}\n\nfunction main() {\n\tvar tokens = tokenize(readline()),\n\t\ta10 = parseInt(tokens[0]), b = tokens[1],\n\t\tc = trim(readline()),\n\t\tdigits = '0123456789ABCDEFGHIJKLMNO',\n\t\tdigit2value = {}, value2digit = {};\n\tfor (var i = 0; i < 25; ++i) {\n\t\tdigit = digits.charAt(i);\n\t\tdigit2value[digit] = i;\n\t\tvalue2digit[i] = digit;\n\t}\n\tvar c10 = 0;\n\tfor (var i = 0; i < c.length; ++i) {\n\t\tc10 = a10*c10 + digit2value[c.charAt(i)];\n\t}\n\tfunction roman(x) {\n\t\tif (x >= 1000) {\n\t\t\treturn 'M'+roman(x-1000);\n\t\t} else if (x >= 900) {\n\t\t\treturn 'CM'+roman(x-900);\n\t\t} else if (x >= 500) {\n\t\t\treturn 'D'+roman(x-500);\n\t\t} else if (x >= 400) {\n\t\t\treturn 'CD'+roman(x-400);\n\t\t} else if (x >= 100) {\n\t\t\treturn 'C'+roman(x-100);\n\t\t} else if (x >= 90) {\n\t\t\treturn 'XC'+roman(x-90);\n\t\t} else if (x >= 50) {\n\t\t\treturn 'L'+roman(x-50);\n\t\t} else if (x >= 40) {\n\t\t\treturn 'XL'+roman(x-40);\n\t\t} else if (x >= 10) {\n\t\t\treturn 'X'+roman(x-10);\n\t\t} else if (x >= 9) {\n\t\t\treturn 'IX'+roman(x-9);\n\t\t} else if (x >= 5) {\n\t\t\treturn 'V'+roman(x-5);\n\t\t} else if (x >= 4) {\n\t\t\treturn 'IV'+roman(x-4);\n\t\t} else if (x >= 1) {\n\t\t\treturn 'I'+roman(x-1);\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tif (b == 'R') {\n\t\tprint(roman(c10));\n\t} else {\n\t\tif (c10 == 0) {\n\t\t\tprint('0');\n\t\t\treturn;\n\t\t}\n\t\tvar x = c10, parts = [];\n\t\twhile (x != 0) {\n\t\t\tvar value = x%b;\n\t\t\tparts.push(value2digit[value]);\n\t\t\tx = (x-value)\/b;\n\t\t}\n\t\tprint(parts.reverse().join(''));\n\t}\n}\n\nmain();\n","tags":["math"],"lang_cluster":"Javascript","src_uid":"c619d699e3e5fb42aea839ef6080c86c","code_uid":"25014327f26421cbbeaf04001cad654c","difficulty":2000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c619d699e3e5fb42aea839ef6080c86c","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['V\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['IV\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1111001\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['A\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['5303\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3951\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['892363\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['CCCV\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['A2II7CL2HDM\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['258AA2604713696\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1E06A57IC4H2\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['2733824152181178\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2003021332111213003322000\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['MXCIV\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10000001011010101001110000001110001011010111010010\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['1B35CBA6B32102\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2NHBDL4ECN2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1B573FFHHH12\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['894488519782085\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10000000001001000010100000111011000110101000001\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['II\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3HBAH9JA9EDE\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2G3DK3F23905\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['MMDCCCXXI\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10500345245142230115\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['0'], 'output': ['351206225505021115\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['MMDCXXXIX\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['105CA323BC110\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['71A1E1HB01EB\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5JLBAF5JBEA\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['MMDCCCLXXIX\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['CCCXVIII\\r\\n']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['340143030243121422401\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['A33B813901970\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['MCMLXXXVI\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['MMDCCLXXVI\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['CCXV\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11G8KLBCI95B\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2223230302121200303102203\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MMCMXCIX\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['MDCCXXXV\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MCMXCVIII\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1FE6KH3A0F7A\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11100011010111111010100100110001100111111111111001\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['5KIIKBEFE1G\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['100000000000252\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['101101400000000002002\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['I\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['7A924652EB469\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['CMXCIX\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['100000000000\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['CM\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3A2A855993029\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10110101111001100010000011110100100000000000000\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['8'], 'output': ['MCMLXXXIII\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MMM\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MMM\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['26A6A368906563A\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['MCXXXVII\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['C\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['4'], 'output': ['35M8JNIJCA\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['90384742521532\\r\\n']}]","all_passed":0}
{"lang":"JavaScript","source_code":"function trim(s) {\n\treturn s.replace(\/^\\s+|\\s+$\/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(\/\\s+\/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i], 10);\n\t};\n\treturn tokens;\n}\n\nfunction main() {\n\tvar tokens = tokenize(readline()),\n\t\ta10 = parseInt(tokens[0]), b = tokens[1],\n\t\tc = trim(readline()),\n\t\tdigits = '0123456789ABCDEFGHIJKLMNO',\n\t\tdigit2value = {}, value2digit = {};\n\tfor (var i = 0; i < 25; ++i) {\n\t\tdigit = digits.charAt(i);\n\t\tdigit2value[digit] = i;\n\t\tvalue2digit[i] = digit;\n\t}\n\tvar c10 = 0;\n\tfor (var i = 0; i < c.length; ++i) {\n\t\tc10 = a10*c10 + digit2value[c.charAt(i)];\n\t}\n\tvar romanValues = { M: 1000, C: 100, D: 500, L: 50, X: 10, V: 5, I: 1 },\n\t\tromanList = [ { main: 'M', sub: 'C' },\n\t\t\t\t\t  { main: 'D', sub: 'C' },\n\t\t\t\t\t  { main: 'C', sub: 'X' },\n\t\t\t\t\t  { main: 'L', sub: 'X' },\n\t\t\t\t\t  { main: 'X', sub: 'I' },\n\t\t\t\t\t  { main: 'V', sub: 'I' } ];\n\tfunction roman(x) {\n\t\tfor (var i = 0; i < romanList.length; ++i) {\n\t\t\tvar mainChar = romanList[i].main, mainValue = romanValues[mainChar],\n\t\t\t\tsubChar = romanList[i].sub, subValue = romanValues[subChar];\n\t\t\tif (x >= mainValue) {\n\t\t\t\treturn mainChar + roman(x-mainValue);\n\t\t\t} else if (x >= mainValue-subValue) {\n\t\t\t\treturn subChar + mainChar + roman(x-mainValue+subValue);\n\t\t\t}\n\t\t}\n\t\tif (x >= 1) {\n\t\t\treturn 'I' + roman(x-1);\n\t\t}\n\t\treturn '';\n\t}\n\tif (b == 'R') {\n\t\tprint(roman(c10));\n\t} else {\n\t\tif (c10 == 0) {\n\t\t\tprint('0');\n\t\t\treturn;\n\t\t}\n\t\tvar x = c10, parts = [];\n\t\twhile (x != 0) {\n\t\t\tvar value = x%b;\n\t\t\tparts.push(value2digit[value]);\n\t\t\tx = (x-value)\/b;\n\t\t}\n\t\tprint(parts.reverse().join(''));\n\t}\n}\n\nmain();\n","tags":["math"],"lang_cluster":"Javascript","src_uid":"c619d699e3e5fb42aea839ef6080c86c","code_uid":"a7a18b63af53481cf36d93a7cf6900b8","difficulty":2000,"exec_outcome":"PASSED","verdict":null,"time":null,"memory":null,"sent":null,"judged":null,"id":null,"submission_id":null,"participant_id":null,"task_id":"c619d699e3e5fb42aea839ef6080c86c","hidden_unit_tests":"[{'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['V\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['IV\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['1111001\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['A\\r\\n']}, {'input': '6', 'time': ['0'], 'mem': ['0'], 'output': ['5303\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3951\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['892363\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['CCCV\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['A2II7CL2HDM\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['258AA2604713696\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['1E06A57IC4H2\\r\\n']}, {'input': '5', 'time': ['0'], 'mem': ['0'], 'output': ['2733824152181178\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2003021332111213003322000\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['MXCIV\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10000001011010101001110000001110001011010111010010\\r\\n']}, {'input': '8', 'time': ['0'], 'mem': ['4'], 'output': ['1B35CBA6B32102\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2NHBDL4ECN2\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1B573FFHHH12\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['894488519782085\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['10000000001001000010100000111011000110101000001\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['II\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['3HBAH9JA9EDE\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['2G3DK3F23905\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['8'], 'output': ['MMDCCCXXI\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10500345245142230115\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['0'], 'output': ['351206225505021115\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['MMDCXXXIX\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['105CA323BC110\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['71A1E1HB01EB\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['5JLBAF5JBEA\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['MMDCCCLXXIX\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['CCCXVIII\\r\\n']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['340143030243121422401\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['A33B813901970\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['MCMLXXXVI\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['MMDCCLXXVI\\r\\n']}, {'input': '3', 'time': ['0'], 'mem': ['0'], 'output': ['CCXV\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11G8KLBCI95B\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['2223230302121200303102203\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MMCMXCIX\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['MDCCXXXV\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MCMXCVIII\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['1FE6KH3A0F7A\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['11100011010111111010100100110001100111111111111001\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['5KIIKBEFE1G\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['0'], 'output': ['100000000000252\\r\\n']}, {'input': '4', 'time': ['0'], 'mem': ['4'], 'output': ['101101400000000002002\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['I\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['7A924652EB469\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['15'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['1\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['CMXCIX\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['4'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['100000000000\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['0\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['CM\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['3A2A855993029\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['10110101111001100010000011110100100000000000000\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['8'], 'output': ['MCMLXXXIII\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MMM\\r\\n']}, {'input': '2', 'time': ['0'], 'mem': ['0'], 'output': ['MMM\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['26A6A368906563A\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['MCXXXVII\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['4'], 'output': ['C\\r\\n']}, {'input': '1', 'time': ['15'], 'mem': ['4'], 'output': ['35M8JNIJCA\\r\\n']}, {'input': '1', 'time': ['0'], 'mem': ['0'], 'output': ['90384742521532\\r\\n']}]","all_passed":0}
